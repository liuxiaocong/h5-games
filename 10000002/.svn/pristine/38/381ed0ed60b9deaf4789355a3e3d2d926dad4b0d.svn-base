var _lang = {
        zh: {
            title: "视觉测试游戏",
            help_txt: "找出所有色块里颜色不同的一个",
            score: "得分：",
            btn_pause: "暂停",
            btn_normal: "普通场",
            btn_double: "双飞场",
            btn_normal_mode: "普通模式",
            btn_double_mode: "双飞模式",
            btn_reTry: "重来",
            btn_more_game: "更多游戏",
            game_pause: "游戏暂停",
            btn_resume: "继续",
            loading: "加载中...！！",
            lv_txt: ["瞎子", "色盲", "色郎", "色狼", "色鬼", "色魔", "超级色魔", "变态色魔", "孤独求色"],
            lv_txt2: ["色不起来", "有色心没色胆", "好色之徒", "色胆包天", "色不知耻", "英雄本色", "色射具全", "裸色舔香", "衣冠禽色"],
            tips: '再得<em id="_score"></em>分，就可再打败<em id="_num"></em>万人',
            share_txt_d: "[双飞]",
            share_txt1: "我闯过",
            share_txt2: "关,击败",
            share_txt3: "%的人,我是[",
            share_txt4: "],不服来战！",
            coyright: "",
            desc: "找出所有色块中颜色不同的一块。分享朋友圈"
        },
        en: {
            title: "How strong is your eyesight",
            help_txt: "Find the box with the different colour",
            score: "Score：",
            btn_pause: "Pause",
            btn_start: "Start",
            btn_reTry: "Again",
            btn_more_game: "More games",
            game_pause: "Pause",
            btn_resume: "Continues",
            loading: "loading...",
            lv_txt: ["Blind", "Very weak", "Weak", "Just so so", "Not bad", "Nice one", "Great", "Amazing", "Insane"],
            share_txt1: "I passed ",
            share_txt2: "stages and defeated ",
            share_txt3: "% people. I am ",
            share_txt4: ", come to challenge me if you dare！",
            desc: "Find the box with the different colour, share it to your friends!"
        }
    },
    _config = {
        lang: "zh",
        color: {
            allTime: 60,
            addTime: 0,
            lvMap: [2, 3, 4, 5, 5, 6, 6, 7, 7, 7, 8, 8, 8, 8, 8, 8, 9]
        },
        color2: {
            allTime: 60,
            addTime: 0,
            lvMap: [4, 4, 6, 6, 6, 6, 6, 6, 8]
        },
        pic: {
            isOpen: !1,
            allTime: 5,
            addTime: 0,
            lvMap: [2, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8]
        }
    },
    shareData = {
        imgUrl: "http://192.168.3.139/games/10000002/default/000331_6584.png",
        timeLineLink: "http://192.168.3.139/games/10000002/default/game.html",
        tTitle: _lang[_config.lang].title,
        tContent: _lang[_config.lang].desc
    };
! function() {
    var t = _lang[_config.lang],
        e = $("#tpl").html(),
        i = _.template(e, t);
    $("body").html(i), $("title").html(t.title)
}(),

function() {
    var t = $("#box"),
        e = {
            lv: $("#room .lv em"),
            time: $("#room .time"),
            start: $("#dialog .btn-restart"),
            back: $("#dialog .btn-back"),
            share: $("#dialog .btn-share"),
            pause: $("#room .btn-pause"),
            resume: $("#dialog .btn-resume"),
            mode: $("#mode"),
            dialog: $("#dialog"),
            d_content: $("#dialog .content"),
            d_pause: $("#dialog .pause"),
            d_gameover: $("#dialog .gameover"),
            ending: $("#ending_page"),
            
        },
        i = {
            target: 1,
            finded: 0,
            score: 0,
            init: function(t, i, a) {
                this.type = t, this.target = "color2" == t ? 2 : 1, this.api = API[t], this.config = _config[t], this.lang = _lang[_config.lang], e.mode.data("type", "color" == t ? "color2" : "color").html("color" == t ? this.lang.btn_double : this.lang.btn_normal), this.reset(), this.parent = a, this.el = i, this.renderUI(), this.inited || this.initEvent(), this.inited = !0, this.start()
            },
            renderUI: function() {
                var e = 90 == window.orientation || -90 == window.orientation,
                    i = e ? window.innerHeight : window.innerWidth;
                i -= 20, i = Math.min(i, 500), t.width(i).height(i), this.el.show()
            },
            initEvent: function() {
                var a = "ontouchstart" in document.documentElement ? "touchend" : "click",
                    n = this;
                $(window).resize(function() {
                    i.renderUI()
                }), t.on(a, "span", function() {
                    var t = $(this).data("type");
                    "a" == t && ($(this).css("background-color", "#f00").data("type", "").html("<em></em>"), ++n.finded == n.target && n.nextLv.call(n))
                }), e.pause.on(a, _.bind(this.pause, this)),
                e.resume.on(a, _.bind(this.resume, this)),
                e.start.on(a, function() {
                    n.score = 0, e.time.html(0), n.reset(), n.start()
                }), e.back.on(a, _.bind(this.back, this)), e.share.on(a, _.bind(this.share, this))
            },
            restart: function() {
                //e.ending.hide();
                this.reset();
                this.start();
            },
            start: function() {
                this.time > 5 && e.time.removeClass("danger"), this.finded = 0, e.dialog.hide(), this._pause = !1, this.lv = "undefined" != typeof this.lv ? this.lv + 1 : 0, this.lvMap = this.config.lvMap[this.lv] || _.last(this.config.lvMap), this.renderMap(), this.renderInfo(), this.timer || (this.timer = setInterval(_.bind(this.tick, this), 1e3))
            },
            share: function() {
                alert('test share');
            },
            resume: function() {
                e.dialog.hide(), this._pause = !1
            },
            pause: function() {
                this._pause = !0, e.d_content.hide(), e.d_pause.show(), e.dialog.show()
            },
            tick: function() {
                return this._pause ? void 0 : (this.time--, this.time < 6 && e.time.addClass("danger"), this.time < 0 ? void this.gameOver() : void e.time.text(parseInt(this.time)))
            },
            renderMap: function() {
                if (!this._pause) {
                    var e = this.lvMap * this.lvMap,
                        i = "",
                        a = "lv" + this.lvMap;
                    _(e).times(function() {
                        i += "<span></span>"
                    }), t.attr("class", a).html(i), this.api.render(this.lvMap, this.lv)
                }
            },
            renderInfo: function() {
                this.score += "color2" == this.type ? this.lvMap / 2 : 1, e.lv.text(this.score)
            },
            gameOver: function() {
                //pk: ending
                var a = this.api.getGameOverText(this.score);
                updateShareScore(this.score, a.txt);

                if (this.lastScore = this.score, this.lastGameTxt = a.txt, this.lastGamePercent = a.percent, e.d_content.hide(), e.d_gameover.show().find("h3").text(this.lastGameTxt), t.find("span").fadeOut(1500, function() {
                    e.dialog.show()
                }), "color2" == this.type) {
                    var n = [2, 3, 4][parseInt(2 * Math.random())];
                    $("#_score").html(n);
                    var s;
                    s = this.socre < 70 ? (20 + 10 * Math.random()).toFixed(1) : this.socre < 80 ? (30 + 20 * Math.random()).toFixed(1) : this.socre < 90 ? (70 + 10 * Math.random()).toFixed(1) : this.socre < 100 ? (100 + 100 * Math.random()).toFixed(1) : this.socre < 110 ? (60 + 10 * Math.random()).toFixed(1) : this.socre < 120 ? (30 + 20 * Math.random()).toFixed(1) : this.socre < 130 ? (10 + 10 * Math.random()).toFixed(1) : (5 + 10 * Math.random()).toFixed(1), $("#_num").html(s), $("#tips").show()
                } else $("#tips").hide();

                this._pause = !0;
                //var o = "color2" == this.type ? "d_" : "";
                // _hmt.push(["_trackEvent", "score", o + "score_" + (this.lv + 1)]), this.score = 0, this.reset()
            },
            reset: function() {
                this.time = this.config.allTime, this.lv = -1
            },
            nextLv: function() {
                this.time += this.config.addTime, e.time.text(parseInt(this.time)), this._pause || this.start()
                //this.time = 1, e.time.text(parseInt(this.time)), this._pause || this.start()
            },
            back: function() {
                this._pause = !0, this.el.hide(), e.dialog.hide(), this.parent.render()
            }
        };
    window.Game = i
}(),
function(t) {
    var e = {
            index: $("#index"),
            room: $("#room"),
            loading: $("#loading"),
            dialog: $("#dialog"),
            play: $(".btn-play"),
            btn_boyaa: $(".btn-boyaa"),
            banner: $(".banner")
            //boyaa_logo: $(".boyaa-logo")

        },
        i = window.navigator.userAgent.toLowerCase(),
        a = /android/i.test(i),
        n = /iphone|ipad|ipod/i.test(i),

        s = {
            init: function() {
                this.initEvent(), this.loading()
            },
            loading: function() {
                // alert(window.navigator.userAgent.toLowerCase());
                // alert(a++);
                function t() {
                    a++, a == i && s.render()
                }
                if (_config.pic.isOpen)
                    for (var e = ["assets/img/1.png", "assets/img/2.png", "assets/img/3.png", "assets/img/4.png", "assets/img/5.png", "assets/img/6.png", "assets/img/7.png", "assets/img/8.png", "assets/img/9.png", "assets/img/10.png", "assets/img/11.png", "assets/img/12.png", "assets/img/13.png", "assets/img/14.png", "assets/img/15.png", "assets/img/16.png", "assets/img/17.png", "assets/img/18.png"], i = e.length, a = 0, n = 0; i > n; n++) {
                        var o = new Image;
                        o.onload = t, o.src = e[n]
                    } else s.render();
                var r = _lang[_config.lang];
            },
            render: function() {
                setTimeout(function() {
                    e.loading.hide(), e.index.show()
                }, 1e3)
            },
            initEvent: function() {
                var t = "ontouchstart" in document.documentElement ? "touchstart" : "click",
                    i = this;

                e.play.on(t, function() {
                    var t = $(this).data("type") || "color";
                    e.index.hide(), Game.init(t, e.room, i)
                }), e.btn_boyaa.on(t, function() {
                    var t = "color2" == Game.type ? "d_" : "";
                    _hmt.push(["_trackEvent", "button", t + "more_game"])
                }), e.banner.on(t, function() {
                    var t = "color2" == Game.type ? "d_" : "",
                        e = $(this).data("t") || "",
                        i = a ? "android" : n ? "ios" : "other_os";
                    _hmt.push(["_trackEvent", "banner", t + i + "_" + e])
                })
            }
        };
    s.init(), t.API = {}
}(window),
function() {
    var t = $("#box"),
        e = "span",
        i = $("#help p"),
        a = $("#help_color"),
        n = {
            lvT: _lang[_config.lang].lv_txt,
            render: function(n, s) {
                this.lv = s, i.hide(), a.show();
                var o = _config.color.lvMap[s] || _.last(_config.color.lvMap);
                this.d = 15 * Math.max(9 - o, 1), this.d = s > 20 ? 10 : this.d, this.d = s > 40 ? 8 : this.d, this.d = s > 50 ? 5 : this.d;
                var r = Math.floor(Math.random() * n * n),
                    h = this.getColor(255 - this.d),
                    d = this.getLvColor(h[0]);
                t.find(e).css("background-color", h[1]).data("type", "b"), t.find(e).eq(r).css("background-color", d[1]).data("type", "a")
            },
            getColor: function(t) {
                var e = [Math.round(Math.random() * t), Math.round(Math.random() * t), Math.round(Math.random() * t)],
                    i = "rgb(" + e.join(",") + ")";
                return [e, i]
            },
            getLvColor: function(t) {
                var e = this.d,
                    i = _.map(t, function(t) {
                        return t + e + 10
                    }),
                    a = "rgb(" + i.join(",") + ")";
                return [i, a]
            },
            getGameOverText: function(t) {
                var e = 20 > t ? 0 : Math.ceil((t - 20) / 10),
                    i = this.lvT[e] || _.last(this.lvT),
                    a = i + "lv" + t,
                    n = t;
                return n = 20 > n ? 2 * t : 30 > t ? 3 * (t - 20) + 40 : 40 > t ? 1.5 * (t - 30) + 70 : 50 > t ? 1.35 * (t - 40) + 85 : 60 > t ? .05 * (t - 50) + 98.5 : 70 > t ? .02 * (t - 60) + 99 : 80 > t ? .02 * (t - 70) + 99.2 : 90 > t ? .02 * (t - 80) + 99.4 : 100 > t ? .02 * (t - 90) + 99.6 : 110 > t ? .02 * (t - 100) + 99.8 : 100, n = ("" + n).length > 5 ? n.toFixed(2) : n, {
                    txt: a,
                    percent: n
                }
            }
        };
    API.color = n
}(),
function() {
    var t = $("#box"),
        e = "span",
        i = $("#help p"),
        a = $("#help_color"),
        n = {
            lvT: _lang[_config.lang].lv_txt2,
            render: function(n, s) {
                this.lv = s, i.hide(), a.show();
                var o = _config.color.lvMap[s] || _.last(_config.color.lvMap);
                this.d = 15 * Math.max(9 - o, 1), this.d = s > 20 ? 10 : this.d, this.d = s > 30 ? 8 : this.d, this.d = s > 40 ? 5 : this.d, this.getGameOverText(20), this.getGameOverText(30), this.getGameOverText(40), this.getGameOverText(50), this.getGameOverText(60), this.getGameOverText(70), this.getGameOverText(80), this.getGameOverText(90), this.getGameOverText(100), this.getGameOverText(110), this.getGameOverText(120), this.getGameOverText(130);
                var r = this.getColor(255 - this.d),
                    h = this.getLvColor(r[0]),
                    d = this.getColor(155 - this.d),
                    l = this.getLvColor(d[0]),
                    c = [],
                    m = [];
                t.find(e).each(function(t, e) {
                    n / 2 > t % n ? ($(e).css("background-color", r[1]), c.push($(e))) : ($(e).css("background-color", d[1]), m.push($(e)))
                });
                var g = Math.floor(Math.random() * c.length),
                    u = Math.floor(Math.random() * m.length);
                c[g].css("background-color", h[1]).data("type", "a"), m[u].css("background-color", l[1]).data("type", "a")
            },
            getColor: function(t) {
                var e = [Math.round(Math.random() * t), Math.round(Math.random() * t), Math.round(Math.random() * t)],
                    i = "rgb(" + e.join(",") + ")";
                return [e, i]
            },
            getLvColor: function(t) {
                var e = this.d,
                    i = _.map(t, function(t) {
                        return t + e
                    }),
                    a = "rgb(" + i.join(",") + ")";
                return [i, a]
            },
            getGameOverText: function(t) {
                var e = 40 > t ? 0 : Math.ceil((t - 40) / 10),
                    i = this.lvT[e] || _.last(this.lvT),
                    a = i + "lv" + t,
                    n = t;
                return n = 30 > n ? 35 : 70 > n ? 1.14 * (t - 35) + 35 : 80 > t ? .5 * (t - 70) + 75 : 90 > t ? t - 80 + 80 : 100 > t ? t - 90 + 85 : 110 > t ? .02 * (t - 110) + 95 : 120 > t ? .02 * (t - 110) + 97 : 130 > t ? .01 * (t - 120) + 99 : 100, n = ("" + n).length > 5 ? n.toFixed(2) : n, {
                    txt: a,
                    percent: n
                }
            }
        };
    API.color2 = n
}();

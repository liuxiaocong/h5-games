// Generated by Construct 2, the HTML5 game and app creator :: http://www.scirra.com
var dontUpdate = false;
var logoClick = function (){};

var cr = {};
cr.plugins_ = {};
cr.behaviors = {};
if (typeof Object.getPrototypeOf !== "function")
{
	if (typeof "test".__proto__ === "object")
	{
		Object.getPrototypeOf = function(object) {
			return object.__proto__;
		};
	}
	else
	{
		Object.getPrototypeOf = function(object) {
			return object.constructor.prototype;
		};
	}
}
(function(){
	cr.logexport = function (msg)
	{
		if (window.console && window.console.log)
			window.console.log(msg);
	};
	cr.seal = function(x)
	{
		return x;
	};
	cr.freeze = function(x)
	{
		return x;
	};
	cr.is_undefined = function (x)
	{
		return typeof x === "undefined";
	};
	cr.is_number = function (x)
	{
		return typeof x === "number";
	};
	cr.is_string = function (x)
	{
		return typeof x === "string";
	};
	cr.isPOT = function (x)
	{
		return x > 0 && ((x - 1) & x) === 0;
	};
	cr.abs = function (x)
	{
		return (x < 0 ? -x : x);
	};
	cr.max = function (a, b)
	{
		return (a > b ? a : b);
	};
	cr.min = function (a, b)
	{
		return (a < b ? a : b);
	};
	cr.PI = Math.PI;
	cr.round = function (x)
	{
		return (x + 0.5) | 0;
	};
	cr.floor = function (x)
	{
		return x | 0;
	};
	function Vector2(x, y)
	{
		this.x = x;
		this.y = y;
		cr.seal(this);
	};
	Vector2.prototype.offset = function (px, py)
	{
		this.x += px;
		this.y += py;
		return this;
	};
	Vector2.prototype.mul = function (px, py)
	{
		this.x *= px;
		this.y *= py;
		return this;
	};
	cr.vector2 = Vector2;
	cr.segments_intersect = function(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y)
	{
		if (cr.max(a1x, a2x) < cr.min(b1x, b2x)
		 || cr.min(a1x, a2x) > cr.max(b1x, b2x)
		 || cr.max(a1y, a2y) < cr.min(b1y, b2y)
		 || cr.min(a1y, a2y) > cr.max(b1y, b2y))
		{
			return false;
		}
		var dpx = b1x - a1x + b2x - a2x;
		var dpy = b1y - a1y + b2y - a2y;
		var qax = a2x - a1x;
		var qay = a2y - a1y;
		var qbx = b2x - b1x;
		var qby = b2y - b1y;
		var d = cr.abs(qay * qbx - qby * qax);
		var la = qbx * dpy - qby * dpx;
		var lb = qax * dpy - qay * dpx;
		return cr.abs(la) <= d && cr.abs(lb) <= d;
	};
	function Rect(left, top, right, bottom)
	{
		this.set(left, top, right, bottom);
		cr.seal(this);
	};
	Rect.prototype.set = function (left, top, right, bottom)
	{
		this.left = left;
		this.top = top;
		this.right = right;
		this.bottom = bottom;
	};
	Rect.prototype.width = function ()
	{
		return this.right - this.left;
	};
	Rect.prototype.height = function ()
	{
		return this.bottom - this.top;
	};
	Rect.prototype.offset = function (px, py)
	{
		this.left += px;
		this.top += py;
		this.right += px;
		this.bottom += py;
		return this;
	};
	Rect.prototype.intersects_rect = function (rc)
	{
		return !(rc.right < this.left || rc.bottom < this.top || rc.left > this.right || rc.top > this.bottom);
	};
	Rect.prototype.contains_pt = function (x, y)
	{
		return (x >= this.left && x <= this.right) && (y >= this.top && y <= this.bottom);
	};
	cr.rect = Rect;
	function Quad()
	{
		this.tlx = 0;
		this.tly = 0;
		this.trx = 0;
		this.try_ = 0;	// is a keyword otherwise!
		this.brx = 0;
		this.bry = 0;
		this.blx = 0;
		this.bly = 0;
		cr.seal(this);
	};
	Quad.prototype.set_from_rect = function (rc)
	{
		this.tlx = rc.left;
		this.tly = rc.top;
		this.trx = rc.right;
		this.try_ = rc.top;
		this.brx = rc.right;
		this.bry = rc.bottom;
		this.blx = rc.left;
		this.bly = rc.bottom;
	};
	Quad.prototype.set_from_rotated_rect = function (rc, a)
	{
		if (a === 0)
		{
			this.set_from_rect(rc);
		}
		else
		{
			var sin_a = Math.sin(a);
			var cos_a = Math.cos(a);
			var left_sin_a = rc.left * sin_a;
			var top_sin_a = rc.top * sin_a;
			var right_sin_a = rc.right * sin_a;
			var bottom_sin_a = rc.bottom * sin_a;
			var left_cos_a = rc.left * cos_a;
			var top_cos_a = rc.top * cos_a;
			var right_cos_a = rc.right * cos_a;
			var bottom_cos_a = rc.bottom * cos_a;
			this.tlx = left_cos_a - top_sin_a;
			this.tly = top_cos_a + left_sin_a;
			this.trx = right_cos_a - top_sin_a;
			this.try_ = top_cos_a + right_sin_a;
			this.brx = right_cos_a - bottom_sin_a;
			this.bry = bottom_cos_a + right_sin_a;
			this.blx = left_cos_a - bottom_sin_a;
			this.bly = bottom_cos_a + left_sin_a;
		}
	};
	Quad.prototype.offset = function (px, py)
	{
		this.tlx += px;
		this.tly += py;
		this.trx += px;
		this.try_ += py;
		this.brx += px;
		this.bry += py;
		this.blx += px;
		this.bly += py;
		return this;
	};
	Quad.prototype.bounding_box = function (rc)
	{
		rc.left =   cr.min(cr.min(this.tlx, this.trx),  cr.min(this.brx, this.blx));
		rc.top =    cr.min(cr.min(this.tly, this.try_), cr.min(this.bry, this.bly));
		rc.right =  cr.max(cr.max(this.tlx, this.trx),  cr.max(this.brx, this.blx));
		rc.bottom = cr.max(cr.max(this.tly, this.try_), cr.max(this.bry, this.bly));
	};
	Quad.prototype.contains_pt = function (x, y)
	{
		var v0x = this.trx - this.tlx;
		var v0y = this.try_ - this.tly;
		var v1x = this.brx - this.tlx;
		var v1y = this.bry - this.tly;
		var v2x = x - this.tlx;
		var v2y = y - this.tly;
		var dot00 = v0x * v0x + v0y * v0y
		var dot01 = v0x * v1x + v0y * v1y
		var dot02 = v0x * v2x + v0y * v2y
		var dot11 = v1x * v1x + v1y * v1y
		var dot12 = v1x * v2x + v1y * v2y
		var invDenom = 1.0 / (dot00 * dot11 - dot01 * dot01);
		var u = (dot11 * dot02 - dot01 * dot12) * invDenom;
		var v = (dot00 * dot12 - dot01 * dot02) * invDenom;
		if ((u >= 0.0) && (v > 0.0) && (u + v < 1))
			return true;
		v0x = this.blx - this.tlx;
		v0y = this.bly - this.tly;
		var dot00 = v0x * v0x + v0y * v0y
		var dot01 = v0x * v1x + v0y * v1y
		var dot02 = v0x * v2x + v0y * v2y
		invDenom = 1.0 / (dot00 * dot11 - dot01 * dot01);
		u = (dot11 * dot02 - dot01 * dot12) * invDenom;
		v = (dot00 * dot12 - dot01 * dot02) * invDenom;
		return (u >= 0.0) && (v > 0.0) && (u + v < 1);
	};
	Quad.prototype.at = function (i, xory)
	{
		switch (i)
		{
			case 0: return xory ? this.tlx : this.tly;
			case 1: return xory ? this.trx : this.try_;
			case 2: return xory ? this.brx : this.bry;
			case 3: return xory ? this.blx : this.bly;
			case 4: return xory ? this.tlx : this.tly;		// same as 0, repeated for perf
			default: return xory ? this.tlx : this.tly;
		}
	};
	Quad.prototype.midX = function ()
	{
		return (this.tlx + this.trx  + this.brx + this.blx) / 4;
	};
	Quad.prototype.midY = function ()
	{
		return (this.tly + this.try_ + this.bry + this.bly) / 4;
	};
	Quad.prototype.intersects_segment = function (x1, y1, x2, y2)
	{
		if (this.contains_pt(x1, y1) || this.contains_pt(x2, y2))
			return true;
		var a1x, a1y, a2x, a2y;
		var i;
		for (i = 0; i < 4; i++)
		{
			a1x = this.at(i, true);
			a1y = this.at(i, false);
			a2x = this.at(i + 1, true);
			a2y = this.at(i + 1, false);
			if (cr.segments_intersect(x1, y1, x2, y2, a1x, a1y, a2x, a2y))
				return true;
		}
		return false;
	};
	Quad.prototype.intersects_quad = function (rhs)
	{
		var midx = rhs.midX();
		var midy = rhs.midY();
		if (this.contains_pt(midx, midy))
			return true;
		midx = this.midX();
		midy = this.midY();
		if (rhs.contains_pt(midx, midy))
			return true;
		var a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y;
		var i, j;
		for (i = 0; i < 4; i++)
		{
			for (j = 0; j < 4; j++)
			{
				a1x = this.at(i, true);
				a1y = this.at(i, false);
				a2x = this.at(i + 1, true);
				a2y = this.at(i + 1, false);
				b1x = rhs.at(j, true);
				b1y = rhs.at(j, false);
				b2x = rhs.at(j + 1, true);
				b2y = rhs.at(j + 1, false);
				if (cr.segments_intersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y))
					return true;
			}
		}
		return false;
	};
	cr.quad = Quad;
	cr.RGB = function (red, green, blue)
	{
		return Math.max(Math.min(red, 255), 0)
			 | (Math.max(Math.min(green, 255), 0) << 8)
			 | (Math.max(Math.min(blue, 255), 0) << 16);
	};
	cr.GetRValue = function (rgb)
	{
		return rgb & 0xFF;
	};
	cr.GetGValue = function (rgb)
	{
		return (rgb & 0xFF00) >> 8;
	};
	cr.GetBValue = function (rgb)
	{
		return (rgb & 0xFF0000) >> 16;
	};
	cr.shallowCopy = function (a, b, allowOverwrite)
	{
		var attr;
		for (attr in b)
		{
			if (b.hasOwnProperty(attr))
			{
;
				a[attr] = b[attr];
			}
		}
		return a;
	};
	cr.arrayRemove = function (arr, index)
	{
		var i, len;
		index = cr.floor(index);
		if (index < 0 || index >= arr.length)
			return;							// index out of bounds
		if (index === 0)					// removing first item
			arr.shift();
		else if (index === arr.length - 1)	// removing last item
			arr.pop();
		else
		{
			for (i = index, len = arr.length - 1; i < len; i++)
				arr[i] = arr[i + 1];
			arr.length = len;
		}
	};
	cr.shallowAssignArray = function(dest, src)
	{
		dest.length = src.length;
		var i, len;
		for (i = 0, len = src.length; i < len; i++)
			dest[i] = src[i];
	};
	cr.arrayFindRemove = function (arr, item)
	{
		var index = arr.indexOf(item);
		if (index !== -1)
			cr.arrayRemove(arr, index);
	};
	cr.clamp = function(x, a, b)
	{
		if (x < a)
			return a;
		else if (x > b)
			return b;
		else
			return x;
	};
	cr.to_radians = function(x)
	{
		return x / (180.0 / cr.PI);
	};
	cr.to_degrees = function(x)
	{
		return x * (180.0 / cr.PI);
	};
	cr.clamp_angle_degrees = function (a)
	{
		a %= 360;       // now in (-360, 360) range
		if (a < 0)
			a += 360;   // now in [0, 360) range
		return a;
	};
	cr.clamp_angle = function (a)
	{
		a %= 2 * cr.PI;       // now in (-2pi, 2pi) range
		if (a < 0)
			a += 2 * cr.PI;   // now in [0, 2pi) range
		return a;
	};
	cr.to_clamped_degrees = function (x)
	{
		return cr.clamp_angle_degrees(cr.to_degrees(x));
	};
	cr.to_clamped_radians = function (x)
	{
		return cr.clamp_angle(cr.to_radians(x));
	};
	cr.angleTo = function(x1, y1, x2, y2)
	{
		var dx = x2 - x1;
        var dy = y2 - y1;
		return Math.atan2(dy, dx);
	};
	cr.angleDiff = function (a1, a2)
	{
		if (a1 === a2)
			return 0;
		var s1 = Math.sin(a1);
		var c1 = Math.cos(a1);
		var s2 = Math.sin(a2);
		var c2 = Math.cos(a2);
		var n = s1 * s2 + c1 * c2;
		if (n >= 1)
			return 0;
		if (n <= -1)
			return cr.PI;
		return Math.acos(n);
	};
	cr.angleRotate = function (start, end, step)
	{
		var ss = Math.sin(start);
		var cs = Math.cos(start);
		var se = Math.sin(end);
		var ce = Math.cos(end);
		if (Math.acos(ss * se + cs * ce) > step)
		{
			if (cs * se - ss * ce > 0)
				return cr.clamp_angle(start + step);
			else
				return cr.clamp_angle(start - step);
		}
		else
			return cr.clamp_angle(end);
	};
	cr.angleClockwise = function (a1, a2)
	{
		var s1 = Math.sin(a1);
		var c1 = Math.cos(a1);
		var s2 = Math.sin(a2);
		var c2 = Math.cos(a2);
		return c1 * s2 - s1 * c2 <= 0;
	};
	cr.rotatePtAround = function (px, py, a, ox, oy, getx)
	{
		if (a === 0)
			return getx ? px : py;
		var sin_a = Math.sin(a);
		var cos_a = Math.cos(a);
		px -= ox;
		py -= oy;
		var left_sin_a = px * sin_a;
		var top_sin_a = py * sin_a;
		var left_cos_a = px * cos_a;
		var top_cos_a = py * cos_a;
		px = left_cos_a - top_sin_a;
		py = top_cos_a + left_sin_a;
		px += ox;
		py += oy;
		return getx ? px : py;
	}
	cr.distanceTo = function(x1, y1, x2, y2)
	{
		var dx = x2 - x1;
        var dy = y2 - y1;
		return Math.sqrt(dx*dx + dy*dy);
	};
	cr.xor = function (x, y)
	{
		return !x !== !y;
	};
	cr.lerp = function (a, b, x)
	{
		return a + (b - a) * x;
	};
	cr.hasAnyOwnProperty = function (o)
	{
		var p;
		for (p in o)
		{
			if (o.hasOwnProperty(p))
				return true;
		}
		return false;
	};
	cr.wipe = function (obj)
	{
		var p;
		for (p in obj)
		{
			if (obj.hasOwnProperty(p))
				delete obj[p];
		}
	};
	var startup_time = +(new Date());
	cr.performance_now = function()
	{
		if (typeof window["performance"] !== "undefined")
		{
			var winperf = window["performance"];
			if (typeof winperf.now !== "undefined")
				return winperf.now();
			else if (typeof winperf["webkitNow"] !== "undefined")
				return winperf["webkitNow"]();
			else if (typeof winperf["msNow"] !== "undefined")
				return winperf["msNow"]();
		}
		return Date.now() - startup_time;
	};
	var supports_set = (typeof Set !== "undefined" && typeof Set.prototype["forEach"] !== "undefined");
	function ObjectSet_()
	{
		if (supports_set)
		{
			this.s = new Set();
		}
		else
		{
			this.items = {};
			this.item_count = 0;
		}
		this.values_cache = [];
		this.cache_valid = true;
		cr.seal(this);
	};
	ObjectSet_.prototype.contains = function (x)
	{
		if (supports_set)
			return this.s["has"](x);
		else
			return this.items.hasOwnProperty(x.toString());
	};
	ObjectSet_.prototype.add = function (x)
	{
		if (supports_set)
		{
			if (!this.s["has"](x))
			{
				this.s["add"](x);
				this.cache_valid = false;
			}
		}
		else
		{
			var str = x.toString();
			if (!this.items.hasOwnProperty(str))
			{
				this.items[str] = x;
				this.item_count++;
				this.cache_valid = false;
			}
		}
		return this;
	};
	ObjectSet_.prototype.remove = function (x)
	{
		if (supports_set)
		{
			if (this.s["has"](x))
			{
				this.s["delete"](x);
				this.cache_valid = false;
			}
		}
		else
		{
			var str = x.toString();
			if (this.items.hasOwnProperty(str))
			{
				delete this.items[str];
				this.item_count--;
				this.cache_valid = false;
			}
		}
		return this;
	};
	ObjectSet_.prototype.clear = function ()
	{
		if (supports_set)
		{
			this.s["clear"]();
		}
		else
		{
			cr.wipe(this.items);
			this.item_count = 0;
		}
		this.values_cache.length = 0;
		this.cache_valid = true;
		return this;
	};
	ObjectSet_.prototype.isEmpty = function ()
	{
		if (supports_set)
			return this.s["size"] === 0;
		else
			return this.item_count === 0;
	};
	ObjectSet_.prototype.count = function ()
	{
		if (supports_set)
			return this.s["size"];
		else
			return this.item_count;
	};
	var current_arr = null;
	var current_index = 0;
	function set_append_to_arr(x)
	{
		current_arr[current_index++] = x;
	};
	ObjectSet_.prototype.update_cache = function ()
	{
		if (this.cache_valid)
			return;
		if (supports_set)
		{
			this.values_cache.length = this.s["size"];
			current_arr = this.values_cache;
			current_index = 0;
			this.s["forEach"](set_append_to_arr);
;
			current_arr = null;
			current_index = 0;
		}
		else
		{
			this.values_cache.length = this.item_count;
			var p, n = 0;
			for (p in this.items)
			{
				if (this.items.hasOwnProperty(p))
					this.values_cache[n++] = this.items[p];
			}
;
		}
		this.cache_valid = true;
	};
	ObjectSet_.prototype.values = function ()
	{
		this.update_cache();
		return this.values_cache.slice(0);
	};
	ObjectSet_.prototype.valuesRef = function ()
	{
		this.update_cache();
		return this.values_cache;
	};
	cr.ObjectSet = ObjectSet_;
	function KahanAdder_()
	{
		this.c = 0;
        this.y = 0;
        this.t = 0;
        this.sum = 0;
		cr.seal(this);
	};
	KahanAdder_.prototype.add = function (v)
	{
		this.y = v - this.c;
	    this.t = this.sum + this.y;
	    this.c = (this.t - this.sum) - this.y;
	    this.sum = this.t;
	};
    KahanAdder_.prototype.reset = function ()
    {
        this.c = 0;
        this.y = 0;
        this.t = 0;
        this.sum = 0;
    };
	cr.KahanAdder = KahanAdder_;
	cr.regexp_escape = function(text)
	{
		return text.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&");
	};
	function CollisionPoly_(pts_array_)
	{
		this.pts_cache = [];
		this.set_pts(pts_array_);
		cr.seal(this);
	};
	CollisionPoly_.prototype.set_pts = function(pts_array_)
	{
		this.pts_array = pts_array_;
		this.pts_count = pts_array_.length / 2;			// x, y, x, y... in array
		this.pts_cache.length = pts_array_.length;
		this.cache_width = -1;
		this.cache_height = -1;
		this.cache_angle = 0;
	};
	CollisionPoly_.prototype.is_empty = function()
	{
		return !this.pts_array.length;
	};
	CollisionPoly_.prototype.set_from_quad = function(q, offx, offy, w, h)
	{
		this.pts_cache.length = 8;
		this.pts_count = 4;
		var myptscache = this.pts_cache;
		myptscache[0] = q.tlx - offx;
		myptscache[1] = q.tly - offy;
		myptscache[2] = q.trx - offx;
		myptscache[3] = q.try_ - offy;
		myptscache[4] = q.brx - offx;
		myptscache[5] = q.bry - offy;
		myptscache[6] = q.blx - offx;
		myptscache[7] = q.bly - offy;
		this.cache_width = w;
		this.cache_height = h;
	};
	CollisionPoly_.prototype.set_from_poly = function (r)
	{
		this.pts_count = r.pts_count;
		cr.shallowAssignArray(this.pts_cache, r.pts_cache);
	};
	CollisionPoly_.prototype.cache_poly = function(w, h, a)
	{
		if (this.cache_width === w && this.cache_height === h && this.cache_angle === a)
			return;		// cache up-to-date
		this.cache_width = w;
		this.cache_height = h;
		this.cache_angle = a;
		var i, len, x, y;
		var sina = 0;
		var cosa = 1;
		var myptsarray = this.pts_array;
		var myptscache = this.pts_cache;
		if (a !== 0)
		{
			sina = Math.sin(a);
			cosa = Math.cos(a);
		}
		for (i = 0, len = this.pts_count; i < len; i++)
		{
			x = myptsarray[i*2] * w;
			y = myptsarray[i*2+1] * h;
			myptscache[i*2] = (x * cosa) - (y * sina);
			myptscache[i*2+1] = (y * cosa) + (x * sina);
		}
	};
	CollisionPoly_.prototype.contains_pt = function (a2x, a2y)
	{
		var myptscache = this.pts_cache;
		if (a2x === myptscache[0] && a2y === myptscache[1])
			return true;
		var i, x, y, len = this.pts_count;
		var bboxLeft = myptscache[0];
		var bboxRight = bboxLeft;
		var bboxTop = myptscache[1];
		var bboxBottom = bboxTop;
		for (i = 1; i < len; i++)
		{
			x = myptscache[i*2];
			y = myptscache[i*2+1];
			if (x < bboxLeft)
				bboxLeft = x;
			if (x > bboxRight)
				bboxRight = x;
			if (y < bboxTop)
				bboxTop = y;
			if (y > bboxBottom)
				bboxBottom = y;
		}
		var a1x = bboxLeft - 110;
		var a1y = bboxTop - 101;
		var a3x = bboxRight + 131
		var a3y = bboxBottom + 120;
		var b1x, b1y, b2x, b2y;
		var count1 = 0, count2 = 0;
		for (i = 0; i < len; i++)
		{
			b1x = myptscache[i*2];
			b1y = myptscache[i*2+1];
			b2x = myptscache[((i+1)%len)*2];
			b2y = myptscache[((i+1)%len)*2+1];
			if (cr.segments_intersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y))
				count1++;
			if (cr.segments_intersect(a3x, a3y, a2x, a2y, b1x, b1y, b2x, b2y))
				count2++;
		}
		return (count1 % 2 === 1) || (count2 % 2 === 1);
	};
	CollisionPoly_.prototype.intersects_poly = function (rhs, offx, offy)
	{
		var rhspts = rhs.pts_cache;
		var mypts = this.pts_cache;
		if (this.contains_pt(rhspts[0] + offx, rhspts[1] + offy))
			return true;
		if (rhs.contains_pt(mypts[0] - offx, mypts[1] - offy))
			return true;
		var i, leni, j, lenj;
		var a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y;
		for (i = 0, leni = this.pts_count; i < leni; i++)
		{
			a1x = mypts[i*2];
			a1y = mypts[i*2+1];
			a2x = mypts[((i+1)%leni)*2];
			a2y = mypts[((i+1)%leni)*2+1];
			for (j = 0, lenj = rhs.pts_count; j < lenj; j++)
			{
				b1x = rhspts[j*2] + offx;
				b1y = rhspts[j*2+1] + offy;
				b2x = rhspts[((j+1)%lenj)*2] + offx;
				b2y = rhspts[((j+1)%lenj)*2+1] + offy;
				if (cr.segments_intersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y))
					return true;
			}
		}
		return false;
	};
	CollisionPoly_.prototype.intersects_segment = function (offx, offy, x1, y1, x2, y2)
	{
		var mypts = this.pts_cache;
		if (this.contains_pt(x1 - offx, y1 - offy))
			return true;
		var i, leni;
		var a1x, a1y, a2x, a2y;
		for (i = 0, leni = this.pts_count; i < leni; i++)
		{
			a1x = mypts[i*2] + offx;
			a1y = mypts[i*2+1] + offy;
			a2x = mypts[((i+1)%leni)*2] + offx;
			a2y = mypts[((i+1)%leni)*2+1] + offy;
			if (cr.segments_intersect(x1, y1, x2, y2, a1x, a1y, a2x, a2y))
				return true;
		}
		return false;
	};
	cr.CollisionPoly = CollisionPoly_;
	var fxNames = [ "lighter",
					"xor",
					"copy",
					"destination-over",
					"source-in",
					"destination-in",
					"source-out",
					"destination-out",
					"source-atop",
					"destination-atop"];
	cr.effectToCompositeOp = function(effect)
	{
		if (effect <= 0 || effect >= 11)
			return "source-over";
		return fxNames[effect - 1];	// not including "none" so offset by 1
	};
	cr.setGLBlend = function(this_, effect, gl)
	{
		if (!gl)
			return;
		this_.srcBlend = gl.ONE;
		this_.destBlend = gl.ONE_MINUS_SRC_ALPHA;
		switch (effect) {
		case 1:		// lighter (additive)
			this_.srcBlend = gl.ONE;
			this_.destBlend = gl.ONE;
			break;
		case 2:		// xor
			break;	// todo
		case 3:		// copy
			this_.srcBlend = gl.ONE;
			this_.destBlend = gl.ZERO;
			break;
		case 4:		// destination-over
			this_.srcBlend = gl.ONE_MINUS_DST_ALPHA;
			this_.destBlend = gl.ONE;
			break;
		case 5:		// source-in
			this_.srcBlend = gl.DST_ALPHA;
			this_.destBlend = gl.ZERO;
			break;
		case 6:		// destination-in
			this_.srcBlend = gl.ZERO;
			this_.destBlend = gl.SRC_ALPHA;
			break;
		case 7:		// source-out
			this_.srcBlend = gl.ONE_MINUS_DST_ALPHA;
			this_.destBlend = gl.ZERO;
			break;
		case 8:		// destination-out
			this_.srcBlend = gl.ZERO;
			this_.destBlend = gl.ONE_MINUS_SRC_ALPHA;
			break;
		case 9:		// source-atop
			this_.srcBlend = gl.DST_ALPHA;
			this_.destBlend = gl.ONE_MINUS_SRC_ALPHA;
			break;
		case 10:	// destination-atop
			this_.srcBlend = gl.ONE_MINUS_DST_ALPHA;
			this_.destBlend = gl.SRC_ALPHA;
			break;
		}
	};
	cr.round6dp = function (x)
	{
		return Math.round(x * 1000000) / 1000000;
	};
	/*
	var localeCompare_options = {
		"usage": "search",
		"sensitivity": "accent"
	};
	var has_localeCompare = !!"a".localeCompare;
	var localeCompare_works1 = (has_localeCompare && "a".localeCompare("A", undefined, localeCompare_options) === 0);
	var localeCompare_works2 = (has_localeCompare && "a".localeCompare("á", undefined, localeCompare_options) !== 0);
	var supports_localeCompare = (has_localeCompare && localeCompare_works1 && localeCompare_works2);
	*/
	cr.equals_nocase = function (a, b)
	{
		if (typeof a !== "string" || typeof b !== "string")
			return false;
		if (a.length !== b.length)
			return false;
		if (a === b)
			return true;
		/*
		if (supports_localeCompare)
		{
			return (a.localeCompare(b, undefined, localeCompare_options) === 0);
		}
		else
		{
		*/
			return a.toLowerCase() === b.toLowerCase();
	};
}());
;
(function()
{
	function Runtime(canvas)
	{
		if (!canvas || (!canvas.getContext && !canvas["dc"]))
			return;
		if (canvas["c2runtime"])
			return;
		else
			canvas["c2runtime"] = this;
		var self = this;
		this.isPhoneGap = (typeof window["device"] !== "undefined" && (typeof window["device"]["cordova"] !== "undefined" || typeof window["device"]["phonegap"] !== "undefined"));
		this.isDirectCanvas = !!canvas["dc"];
		this.isAppMobi = (typeof window["AppMobi"] !== "undefined" || this.isDirectCanvas);
		this.isCocoonJs = !!window["c2cocoonjs"];
		if (this.isCocoonJs)
		{
			CocoonJS["App"]["onSuspended"].addEventListener(function() {
				self["setSuspended"](true);
			});
			CocoonJS["App"]["onActivated"].addEventListener(function () {
				self["setSuspended"](false);
			});
		}
		this.isDomFree = this.isDirectCanvas || this.isCocoonJs;
		this.isTizen = /tizen/i.test(navigator.userAgent);
		this.isAndroid = /android/i.test(navigator.userAgent) && !this.isTizen;		// tizen says "like Android"
		this.isIE = /msie/i.test(navigator.userAgent) || /trident/i.test(navigator.userAgent);
		this.isiPhone = /iphone/i.test(navigator.userAgent) || /ipod/i.test(navigator.userAgent);	// treat ipod as an iphone
		this.isiPad = /ipad/i.test(navigator.userAgent);
		this.isiOS = this.isiPhone || this.isiPad;
		this.isChrome = /chrome/i.test(navigator.userAgent) || /chromium/i.test(navigator.userAgent);
		this.isSafari = !this.isChrome && /safari/i.test(navigator.userAgent);		// Chrome includes Safari in UA
		this.isWindows = /windows/i.test(navigator.userAgent);
		this.isNodeWebkit = (typeof window["c2nodewebkit"] !== "undefined");
		this.isArcade = (typeof window["is_scirra_arcade"] !== "undefined");
		this.isWindows8App = !!(typeof window["c2isWindows8"] !== "undefined" && window["c2isWindows8"]);
		this.isWindowsPhone8 = !!(typeof window["c2isWindowsPhone8"] !== "undefined" && window["c2isWindowsPhone8"]);
		this.isBlackberry10 = !!(typeof window["c2isBlackberry10"] !== "undefined" && window["c2isBlackberry10"]);
		this.devicePixelRatio = 1;
		this.isMobile = (this.isPhoneGap || this.isAppMobi || this.isCocoonJs || this.isAndroid || this.isiOS || this.isWindowsPhone8 || this.isBlackberry10 || this.isTizen);
		if (!this.isMobile)
			this.isMobile = /(blackberry|bb10|playbook|palm|symbian|nokia|windows\s+ce|phone|mobile|tablet)/i.test(navigator.userAgent);
		if (typeof cr_is_preview !== "undefined" && !this.isNodeWebkit && (window.location.search === "?nw" || /nodewebkit/i.test(navigator.userAgent)))
		{
			this.isNodeWebkit = true;
		}
		this.isDebug = (typeof cr_is_preview !== "undefined" && window.location.search.indexOf("debug") > -1)
		this.canvas = canvas;
		this.canvasdiv = document.getElementById("c2canvasdiv");
		this.gl = null;
		this.glwrap = null;
		this.ctx = null;
		this.canvas.oncontextmenu = function (e) { if (e.preventDefault) e.preventDefault(); return false; };
		this.canvas.onselectstart = function (e) { if (e.preventDefault) e.preventDefault(); return false; };
		if (this.isDirectCanvas)
			window["c2runtime"] = this;
		if (this.isNodeWebkit)
		{
			window.ondragover = function(e) { e.preventDefault(); return false; };
			window.ondrop = function(e) { e.preventDefault(); return false; };
		}
		this.width = canvas.width;
		this.height = canvas.height;
		this.lastwidth = this.width;
		this.lastheight = this.height;
		this.redraw = true;
		this.isSuspended = false;
		if (!Date.now) {
		  Date.now = function now() {
			return +new Date();
		  };
		}
		this.plugins = [];
		this.types = {};
		this.types_by_index = [];
		this.behaviors = [];
		this.layouts = {};
		this.layouts_by_index = [];
		this.eventsheets = {};
		this.eventsheets_by_index = [];
		this.wait_for_textures = [];        // for blocking until textures loaded
		this.triggers_to_postinit = [];
		this.all_global_vars = [];
		this.all_local_vars = [];
		this.deathRow = new cr.ObjectSet();
		this.isInClearDeathRow = false;
		this.isInOnDestroy = 0;					// needs to support recursion so increments and decrements and is true if > 0
		this.isRunningEvents = false;
		this.createRow = [];
		this.isLoadingState = false;
		this.saveToSlot = "";
		this.loadFromSlot = "";
		this.loadFromJson = "";
		this.lastSaveJson = "";
		this.signalledContinuousPreview = false;
		this.suspendDrawing = false;		// for hiding display until continuous preview loads
		this.dt = 0;
        this.dt1 = 0;
		this.logictime = 0;			// used to calculate CPUUtilisation
		this.cpuutilisation = 0;
		this.zeroDtCount = 0;
        this.timescale = 1.0;
        this.kahanTime = new cr.KahanAdder();
		this.last_tick_time = 0;
		this.measuring_dt = true;
		this.fps = 0;
		this.last_fps_time = 0;
		this.tickcount = 0;
		this.execcount = 0;
		this.framecount = 0;        // for fps
		this.objectcount = 0;
		this.changelayout = null;
		this.destroycallbacks = [];
		this.event_stack = [];
		this.event_stack_index = -1;
		this.localvar_stack = [[]];
		this.localvar_stack_index = 0;
		this.trigger_depth = 0;		// recursion depth for triggers
		this.pushEventStack(null);
		this.loop_stack = [];
		this.loop_stack_index = -1;
		this.next_uid = 0;
		this.next_puid = 0;		// permanent unique ids
		this.layout_first_tick = true;
		this.family_count = 0;
		this.suspend_events = [];
		this.raf_id = 0;
		this.timeout_id = 0;
		this.isloading = true;
		this.loadingprogress = 0;
		this.isNodeFullscreen = false;
		this.stackLocalCount = 0;	// number of stack-based local vars for recursion
		this.had_a_click = false;
        this.objects_to_tick = new cr.ObjectSet();
		this.objects_to_tick2 = new cr.ObjectSet();
		this.registered_collisions = [];
		this.temp_poly = new cr.CollisionPoly([]);
		this.temp_poly2 = new cr.CollisionPoly([]);
		this.allGroups = [];				// array of all event groups
        this.activeGroups = {};				// event group activation states
		this.cndsBySid = {};
		this.actsBySid = {};
		this.varsBySid = {};
		this.blocksBySid = {};
		this.running_layout = null;			// currently running layout
		this.layer_canvas = null;			// for layers "render-to-texture"
		this.layer_ctx = null;
		this.layer_tex = null;
		this.layout_tex = null;
		this.is_WebGL_context_lost = false;
		this.uses_background_blending = false;	// if any shader uses background blending, so entire layout renders to texture
		this.fx_tex = [null, null];
		this.fullscreen_scaling = 0;
		this.files_subfolder = "";			// path with project files
		this.objectsByUid = {};				// maps every in-use UID (as a string) to its instance
		this.loaderlogo = null;
		this.snapshotCanvas = null;
		this.snapshotData = "";
		this.load();
		this.isRetina = (!this.isDomFree && this.useiOSRetina && (this.isiOS || this.isTizen));
		this.devicePixelRatio = (this.isRetina ? (window["devicePixelRatio"] || 1) : 1);
		this.ClearDeathRow();
		var attribs;
		if (typeof jQuery !== "undefined" && this.fullscreen_mode > 0)
			this["setSize"](jQuery(window).width(), jQuery(window).height());
		try {
			if (this.enableWebGL && (this.isCocoonJs || !this.isDomFree))
			{
				attribs = { "depth": false, "antialias": !this.isMobile };
				var use_webgl = true;
				if (this.isChrome && this.isWindows)
				{
					var tempcanvas = document.createElement("canvas");
					var tempgl = (tempcanvas.getContext("webgl", attribs) || tempcanvas.getContext("experimental-webgl", attribs));
					if (tempgl.getSupportedExtensions().toString() === "OES_texture_float,OES_standard_derivatives,WEBKIT_WEBGL_lose_context")
					{
;
						use_webgl = false;
					}
				}
				if (use_webgl)
					this.gl = (canvas.getContext("webgl", attribs) || canvas.getContext("experimental-webgl", attribs));
			}
		}
		catch (e) {
		}
		if (this.gl)
		{
;
			if (!this.isDomFree)
			{
				this.overlay_canvas = document.createElement("canvas");
				jQuery(this.overlay_canvas).appendTo(this.canvas.parentNode);
				this.overlay_canvas.oncontextmenu = function (e) { return false; };
				this.overlay_canvas.onselectstart = function (e) { return false; };
				this.overlay_canvas.width = canvas.width;
				this.overlay_canvas.height = canvas.height;
				this.positionOverlayCanvas();
				this.overlay_ctx = this.overlay_canvas.getContext("2d");
			}
			this.glwrap = new cr.GLWrap(this.gl, this.isMobile);
			this.glwrap.setSize(canvas.width, canvas.height);
			this.ctx = null;
			this.canvas.addEventListener("webglcontextlost", function (ev) {
				ev.preventDefault();
				self.onContextLost();
				window["cr_setSuspended"](true);		// stop rendering
			}, false);
			this.canvas.addEventListener("webglcontextrestored", function (ev) {
				self.glwrap.initState();
				self.glwrap.setSize(self.glwrap.width, self.glwrap.height, true);
				self.layer_tex = null;
				self.layout_tex = null;
				self.fx_tex[0] = null;
				self.fx_tex[1] = null;
				self.onContextRestored();
				self.redraw = true;
				window["cr_setSuspended"](false);		// resume rendering
			}, false);
			var i, len, j, lenj, k, lenk, t, s, l, y;
			for (i = 0, len = this.types_by_index.length; i < len; i++)
			{
				t = this.types_by_index[i];
				for (j = 0, lenj = t.effect_types.length; j < lenj; j++)
				{
					s = t.effect_types[j];
					s.shaderindex = this.glwrap.getShaderIndex(s.id);
					this.uses_background_blending = this.uses_background_blending || this.glwrap.programUsesDest(s.shaderindex);
				}
			}
			for (i = 0, len = this.layouts_by_index.length; i < len; i++)
			{
				l = this.layouts_by_index[i];
				for (j = 0, lenj = l.effect_types.length; j < lenj; j++)
				{
					s = l.effect_types[j];
					s.shaderindex = this.glwrap.getShaderIndex(s.id);
				}
				for (j = 0, lenj = l.layers.length; j < lenj; j++)
				{
					y = l.layers[j];
					for (k = 0, lenk = y.effect_types.length; k < lenk; k++)
					{
						s = y.effect_types[k];
						s.shaderindex = this.glwrap.getShaderIndex(s.id);
						this.uses_background_blending = this.uses_background_blending || this.glwrap.programUsesDest(s.shaderindex);
					}
				}
			}
		}
		else
		{
			if (this.fullscreen_mode > 0 && this.isDirectCanvas)
			{
;
				this.canvas = null;
				document.oncontextmenu = function (e) { return false; };
				document.onselectstart = function (e) { return false; };
				this.ctx = AppMobi["canvas"]["getContext"]("2d");
				try {
					this.ctx["samplingMode"] = this.linearSampling ? "smooth" : "sharp";
					this.ctx["globalScale"] = 1;
					this.ctx["HTML5CompatibilityMode"] = true;
					this.ctx["imageSmoothingEnabled"] = this.linearSampling;
				} catch(e){}
				if (this.width !== 0 && this.height !== 0)
				{
					this.ctx.width = this.width;
					this.ctx.height = this.height;
				}
			}
			if (!this.ctx)
			{
;
				if (this.isCocoonJs)
				{
					attribs = { "antialias" : !!this.linearSampling };
					this.ctx = canvas.getContext("2d", attribs);
				}
				else
					this.ctx = canvas.getContext("2d");
				this.ctx["webkitImageSmoothingEnabled"] = this.linearSampling;
				this.ctx["mozImageSmoothingEnabled"] = this.linearSampling;
				this.ctx["msImageSmoothingEnabled"] = this.linearSampling;
				this.ctx["imageSmoothingEnabled"] = this.linearSampling;
			}
			this.overlay_canvas = null;
			this.overlay_ctx = null;
		}
		this.tickFunc = function () { self.tick(); };
		if (window != window.top && !this.isDomFree && !this.isWindows8App)
		{
			document.addEventListener("mousedown", function () {
				window.focus();
			}, true);
			document.addEventListener("touchstart", function () {
				window.focus();
			}, true);
		}
		if (typeof cr_is_preview !== "undefined")
		{
			if (this.isCocoonJs)
				console.log("[Construct 2] In preview-over-wifi via CocoonJS mode");
			if (window.location.search.indexOf("continuous") > -1)
			{
				cr.logexport("Reloading for continuous preview");
				this.loadFromSlot = "__c2_continuouspreview";
				this.suspendDrawing = true;
			}
			if (this.pauseOnBlur && !this.isMobile)
			{
				jQuery(window).focus(function ()
				{
					self["setSuspended"](false);
				});
				jQuery(window).blur(function ()
				{
					self["setSuspended"](true);
				});
			}
		}
		this.go();			// run loading screen
		this.extra = {};
		cr.seal(this);
	};
	var webkitRepaintFlag = false;
	Runtime.prototype["setSize"] = function (w, h)
	{
		var tryHideAddressBar = this.hideAddressBar && this.isiPhone && !navigator["standalone"] && !this.isDomFree && !this.isPhoneGap;
		var addressBarHeight = 0;
		if (tryHideAddressBar)
		{
			if (this.isiPhone)
				addressBarHeight = 60;
			else if (this.isAndroid)
				addressBarHeight = 56;
			h += addressBarHeight;
		}
		var offx = 0, offy = 0;
		var neww = 0, newh = 0, intscale = 0;
		var mode = this.fullscreen_mode;
		var isfullscreen = (document["mozFullScreen"] || document["webkitIsFullScreen"] || !!document["msFullscreenElement"] || document["fullScreen"] || this.isNodeFullscreen);
		if (isfullscreen && this.fullscreen_scaling > 0)
			mode = this.fullscreen_scaling;
		if (mode >= 4)
		{
			var orig_aspect = this.original_width / this.original_height;
			var cur_aspect = w / h;
			if (cur_aspect > orig_aspect)
			{
				neww = h * orig_aspect;
				if (mode === 5)	// integer scaling
				{
					intscale = neww / this.original_width;
					if (intscale > 1)
						intscale = Math.floor(intscale);
					else if (intscale < 1)
						intscale = 1 / Math.ceil(1 / intscale);
					neww = this.original_width * intscale;
					newh = this.original_height * intscale;
					offx = (w - neww) / 2;
					offy = (h - newh) / 2;
					w = neww;
					h = newh;
				}
				else
				{
					offx = (w - neww) / 2;
					w = neww;
				}
			}
			else
			{
				newh = w / orig_aspect;
				if (mode === 5)	// integer scaling
				{
					intscale = newh / this.original_height;
					if (intscale > 1)
						intscale = Math.floor(intscale);
					else if (intscale < 1)
						intscale = 1 / Math.ceil(1 / intscale);
					neww = this.original_width * intscale;
					newh = this.original_height * intscale;
					offx = (w - neww) / 2;
					offy = (h - newh) / 2;
					w = neww;
					h = newh;
				}
				else
				{
					offy = (h - newh) / 2;
					h = newh;
				}
			}
			if (isfullscreen && !this.isNodeWebkit)
			{
				offx = 0;
				offy = 0;
			}
			offx = Math.floor(offx);
			offy = Math.floor(offy);
			w = Math.floor(w);
			h = Math.floor(h);
		}
		else if (this.isNodeWebkit && this.isNodeFullscreen && this.fullscreen_mode_set === 0)
		{
			offx = Math.floor((w - this.original_width) / 2);
			offy = Math.floor((h - this.original_height) / 2);
			w = this.original_width;
			h = this.original_height;
		}
		if (this.isRetina && this.isiPad && this.devicePixelRatio > 1)	// don't apply to iPad 1-2
		{
			if (w >= 1024)
				w = 1023;		// 2046 retina pixels
			if (h >= 1024)
				h = 1023;
		}
		var multiplier = this.devicePixelRatio;
		this.width = w * multiplier;
		this.height = h * multiplier;
		this.redraw = true;
		if (this.canvasdiv && !this.isDomFree)
		{
			jQuery(this.canvasdiv).css({"width": w + "px",
										"height": h + "px",
										"margin-left": offx,
										"margin-top": offy});
			if (typeof cr_is_preview !== "undefined")
			{
				jQuery("#borderwrap").css({"width": w + "px",
											"height": h + "px"});
			}
		}
		if (this.canvas)
		{
			this.canvas.width = w * multiplier;
			this.canvas.height = h * multiplier;
			if (this.isRetina)
			{
				jQuery(this.canvas).css({"width": w + "px",
										"height": h + "px"});
			}
		}
		if (this.overlay_canvas)
		{
			this.overlay_canvas.width = w;
			this.overlay_canvas.height = h;
		}
		if (this.glwrap)
			this.glwrap.setSize(w, h);
		if (this.isDirectCanvas && this.ctx)
		{
			this.ctx.width = w;
			this.ctx.height = h;
		}
		if (this.ctx)
		{
			this.ctx["webkitImageSmoothingEnabled"] = this.linearSampling;
			this.ctx["mozImageSmoothingEnabled"] = this.linearSampling;
			this.ctx["msImageSmoothingEnabled"] = this.linearSampling;
			this.ctx["imageSmoothingEnabled"] = this.linearSampling;
		}
		if (tryHideAddressBar && addressBarHeight > 0)
		{
			window.setTimeout(function () {
				window.scrollTo(0, 1);
			}, 100);
		}
	};
	Runtime.prototype.onContextLost = function ()
	{
		this.is_WebGL_context_lost = true;
		var i, len, t;
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			t = this.types_by_index[i];
			if (t.onLostWebGLContext)
				t.onLostWebGLContext();
		}
	};
	Runtime.prototype.onContextRestored = function ()
	{
		this.is_WebGL_context_lost = false;
		var i, len, t;
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			t = this.types_by_index[i];
			if (t.onRestoreWebGLContext)
				t.onRestoreWebGLContext();
		}
	};
	Runtime.prototype.positionOverlayCanvas = function()
	{
		if (this.isDomFree)
			return;
		var isfullscreen = (document["mozFullScreen"] || document["webkitIsFullScreen"] || document["fullScreen"] || !!document["msFullscreenElement"] || this.isNodeFullscreen);
		var overlay_position = isfullscreen ? jQuery(this.canvas).offset() : jQuery(this.canvas).position();
		overlay_position.position = "absolute";
		jQuery(this.overlay_canvas).css(overlay_position);
	};
	var caf = window["cancelAnimationFrame"] ||
	  window["mozCancelAnimationFrame"]    ||
	  window["webkitCancelAnimationFrame"] ||
	  window["msCancelAnimationFrame"]     ||
	  window["oCancelAnimationFrame"];
	Runtime.prototype["setSuspended"] = function (s)
	{
		var i, len;
		if (s && !this.isSuspended)
		{
			cr.logexport("[Construct 2] Suspending");
			this.isSuspended = true;			// next tick will be last
			if (this.raf_id !== 0 && caf)		// note: CocoonJS does not implement cancelAnimationFrame
				caf(this.raf_id);
			if (this.timeout_id !== 0)
				clearTimeout(this.timeout_id);
			for (i = 0, len = this.suspend_events.length; i < len; i++)
				this.suspend_events[i](true);
		}
		else if (!s && this.isSuspended)
		{
			cr.logexport("[Construct 2] Resuming");
			this.isSuspended = false;
			this.last_tick_time = cr.performance_now();	// ensure first tick is a zero-dt one
			this.last_fps_time = cr.performance_now();	// reset FPS counter
			this.framecount = 0;
			this.logictime = 0;
			for (i = 0, len = this.suspend_events.length; i < len; i++)
				this.suspend_events[i](false);
			this.tick();						// kick off runtime again
		}
	};
	Runtime.prototype.addSuspendCallback = function (f)
	{
		this.suspend_events.push(f);
	};
	Runtime.prototype.load = function ()
	{
;
		var pm = cr.getProjectModel();
		this.name = pm[0];
		this.first_layout = pm[1];
		this.fullscreen_mode = pm[11];	// 0 = off, 1 = crop, 2 = scale inner, 3 = scale outer, 4 = letterbox scale, 5 = integer letterbox scale
		this.fullscreen_mode_set = pm[11];
		if (this.isDomFree && (pm[11] >= 4 || pm[11] === 0))
		{
			cr.logexport("[Construct 2] Letterbox scale fullscreen modes are not supported on this platform - falling back to 'Scale outer'");
			this.fullscreen_mode = 3;
			this.fullscreen_mode_set = 3;
		}
		this.uses_loader_layout = pm[17];
		this.loaderstyle = pm[18];
		if (this.loaderstyle === 0)
		{
			this.loaderlogo = new Image();
			this.loaderlogo.src = "loading-logo.png";
		}
		this.next_uid = pm[20];
		this.system = new cr.system_object(this);
		var i, len, j, lenj, k, lenk, idstr, m, b, t, f;
		var plugin, plugin_ctor;
		for (i = 0, len = pm[2].length; i < len; i++)
		{
			m = pm[2][i];
;
			cr.add_common_aces(m);
			plugin = new m[0](this);
			plugin.singleglobal = m[1];
			plugin.is_world = m[2];
			plugin.must_predraw = m[9];
			if (plugin.onCreate)
				plugin.onCreate();  // opportunity to override default ACEs
			cr.seal(plugin);
			this.plugins.push(plugin);
		}
		pm = cr.getProjectModel();
		for (i = 0, len = pm[3].length; i < len; i++)
		{
			m = pm[3][i];
			plugin_ctor = m[1];
;
			plugin = null;
			for (j = 0, lenj = this.plugins.length; j < lenj; j++)
			{
				if (this.plugins[j] instanceof plugin_ctor)
				{
					plugin = this.plugins[j];
					break;
				}
			}
;
;
			var type_inst = new plugin.Type(plugin);
;
			type_inst.name = m[0];
			type_inst.is_family = m[2];
			type_inst.instvar_sids = m[3].slice(0);
			type_inst.vars_count = m[3].length;
			type_inst.behs_count = m[4];
			type_inst.fx_count = m[5];
			type_inst.sid = m[11];
			if (type_inst.is_family)
			{
				type_inst.members = [];				// types in this family
				type_inst.family_index = this.family_count++;
				type_inst.families = null;
			}
			else
			{
				type_inst.members = null;
				type_inst.family_index = -1;
				type_inst.families = [];			// families this type belongs to
			}
			type_inst.family_var_map = null;
			type_inst.family_beh_map = null;
			type_inst.family_fx_map = null;
			type_inst.is_contained = false;
			type_inst.container = null;
			if (m[6])
			{
				type_inst.texture_file = m[6][0];
				type_inst.texture_filesize = m[6][1];
				type_inst.texture_pixelformat = m[6][2];
			}
			else
			{
				type_inst.texture_file = null;
				type_inst.texture_filesize = 0;
				type_inst.texture_pixelformat = 0;		// rgba8
			}
			if (m[7])
			{
				type_inst.animations = m[7];
			}
			else
			{
				type_inst.animations = null;
			}
			type_inst.index = i;                                // save index in to types array in type
			type_inst.instances = [];                           // all instances of this type
			type_inst.deadCache = [];							// destroyed instances to recycle next create
			type_inst.solstack = [new cr.selection(type_inst)]; // initialise SOL stack with one empty SOL
			type_inst.cur_sol = 0;
			type_inst.default_instance = null;
			type_inst.stale_iids = true;
			type_inst.updateIIDs = cr.type_updateIIDs;
			type_inst.getFirstPicked = cr.type_getFirstPicked;
			type_inst.getPairedInstance = cr.type_getPairedInstance;
			type_inst.getCurrentSol = cr.type_getCurrentSol;
			type_inst.pushCleanSol = cr.type_pushCleanSol;
			type_inst.pushCopySol = cr.type_pushCopySol;
			type_inst.popSol = cr.type_popSol;
			type_inst.getBehaviorByName = cr.type_getBehaviorByName;
			type_inst.getBehaviorIndexByName = cr.type_getBehaviorIndexByName;
			type_inst.getEffectIndexByName = cr.type_getEffectIndexByName;
			type_inst.applySolToContainer = cr.type_applySolToContainer;
			type_inst.extra = {};
			type_inst.toString = cr.type_toString;
			type_inst.behaviors = [];
			for (j = 0, lenj = m[8].length; j < lenj; j++)
			{
				b = m[8][j];
				var behavior_ctor = b[1];
				var behavior_plugin = null;
				for (k = 0, lenk = this.behaviors.length; k < lenk; k++)
				{
					if (this.behaviors[k] instanceof behavior_ctor)
					{
						behavior_plugin = this.behaviors[k];
						break;
					}
				}
				if (!behavior_plugin)
				{
					behavior_plugin = new behavior_ctor(this);
					behavior_plugin.my_instances = new cr.ObjectSet(); 	// instances of this behavior
					if (behavior_plugin.onCreate)
						behavior_plugin.onCreate();
					cr.seal(behavior_plugin);
					this.behaviors.push(behavior_plugin);
				}
				var behavior_type = new behavior_plugin.Type(behavior_plugin, type_inst);
				behavior_type.name = b[0];
				behavior_type.sid = b[2];
				behavior_type.onCreate();
				cr.seal(behavior_type);
				type_inst.behaviors.push(behavior_type);
			}
			type_inst.global = m[9];
			type_inst.isOnLoaderLayout = m[10];
			type_inst.effect_types = [];
			for (j = 0, lenj = m[12].length; j < lenj; j++)
			{
				type_inst.effect_types.push({
					id: m[12][j][0],
					name: m[12][j][1],
					shaderindex: -1,
					active: true,
					index: j
				});
			}
			if (!this.uses_loader_layout || type_inst.is_family || type_inst.isOnLoaderLayout || !plugin.is_world)
			{
				type_inst.onCreate();
				cr.seal(type_inst);
			}
			if (type_inst.name)
				this.types[type_inst.name] = type_inst;
			this.types_by_index.push(type_inst);
			if (plugin.singleglobal)
			{
				var instance = new plugin.Instance(type_inst);
				instance.uid = this.next_uid++;
				instance.puid = this.next_puid++;
				instance.iid = 0;
				instance.get_iid = cr.inst_get_iid;
				instance.toString = cr.inst_toString;
				instance.properties = m[13];
				instance.onCreate();
				cr.seal(instance);
				type_inst.instances.push(instance);
				this.objectsByUid[instance.uid.toString()] = instance;
			}
		}
		for (i = 0, len = pm[4].length; i < len; i++)
		{
			var familydata = pm[4][i];
			var familytype = this.types_by_index[familydata[0]];
			var familymember;
			for (j = 1, lenj = familydata.length; j < lenj; j++)
			{
				familymember = this.types_by_index[familydata[j]];
				familymember.families.push(familytype);
				familytype.members.push(familymember);
			}
		}
		for (i = 0, len = pm[22].length; i < len; i++)
		{
			var containerdata = pm[22][i];
			var containertypes = [];
			for (j = 0, lenj = containerdata.length; j < lenj; j++)
				containertypes.push(this.types_by_index[containerdata[j]]);
			for (j = 0, lenj = containertypes.length; j < lenj; j++)
			{
				containertypes[j].is_contained = true;
				containertypes[j].container = containertypes;
			}
		}
		if (this.family_count > 0)
		{
			for (i = 0, len = this.types_by_index.length; i < len; i++)
			{
				t = this.types_by_index[i];
				if (t.is_family || !t.families.length)
					continue;
				t.family_var_map = new Array(this.family_count);
				t.family_beh_map = new Array(this.family_count);
				t.family_fx_map = new Array(this.family_count);
				var all_fx = [];
				var varsum = 0;
				var behsum = 0;
				var fxsum = 0;
				for (j = 0, lenj = t.families.length; j < lenj; j++)
				{
					f = t.families[j];
					t.family_var_map[f.family_index] = varsum;
					varsum += f.vars_count;
					t.family_beh_map[f.family_index] = behsum;
					behsum += f.behs_count;
					t.family_fx_map[f.family_index] = fxsum;
					fxsum += f.fx_count;
					for (k = 0, lenk = f.effect_types.length; k < lenk; k++)
						all_fx.push(cr.shallowCopy({}, f.effect_types[k]));
				}
				t.effect_types = all_fx.concat(t.effect_types);
				for (j = 0, lenj = t.effect_types.length; j < lenj; j++)
					t.effect_types[j].index = j;
			}
		}
		for (i = 0, len = pm[5].length; i < len; i++)
		{
			m = pm[5][i];
			var layout = new cr.layout(this, m);
			cr.seal(layout);
			this.layouts[layout.name] = layout;
			this.layouts_by_index.push(layout);
		}
		for (i = 0, len = pm[6].length; i < len; i++)
		{
			m = pm[6][i];
			var sheet = new cr.eventsheet(this, m);
			cr.seal(sheet);
			this.eventsheets[sheet.name] = sheet;
			this.eventsheets_by_index.push(sheet);
		}
		for (i = 0, len = this.eventsheets_by_index.length; i < len; i++)
			this.eventsheets_by_index[i].postInit();
		for (i = 0, len = this.triggers_to_postinit.length; i < len; i++)
			this.triggers_to_postinit[i].postInit();
		this.triggers_to_postinit.length = 0;
		this.files_subfolder = pm[7];
		this.pixel_rounding = pm[8];
		this.original_width = pm[9];
		this.original_height = pm[10];
		this.aspect_scale = 1.0;
		this.enableWebGL = pm[12];
		this.linearSampling = pm[13];
		this.clearBackground = pm[14];
		this.versionstr = pm[15];
		var iOSretina = pm[16];
		if (iOSretina === 2)
			iOSretina = (this.isiPhone ? 1 : 0);
		this.useiOSRetina = (iOSretina !== 0);
		this.hideAddressBar = pm[19];
		this.pauseOnBlur = pm[21];
		this.start_time = Date.now();
	};
	Runtime.prototype.findWaitingTexture = function (src_)
	{
		var i, len;
		for (i = 0, len = this.wait_for_textures.length; i < len; i++)
		{
			if (this.wait_for_textures[i].cr_src === src_)
				return this.wait_for_textures[i];
		}
		return null;
	};
	Runtime.prototype.areAllTexturesLoaded = function ()
	{
		var totalsize = 0;
		var completedsize = 0;
		var ret = true;
		var i, len;
		for (i = 0, len = this.wait_for_textures.length; i < len; i++)
		{
			var filesize = this.wait_for_textures[i].cr_filesize;
			if (!filesize || filesize <= 0)
				filesize = 50000;
			totalsize += filesize;
			if (this.wait_for_textures[i].complete || this.wait_for_textures[i]["loaded"])
				completedsize += filesize;
			else
				ret = false;    // not all textures loaded
		}
		if (totalsize == 0)
			this.progress = 0;
		else
			this.progress = (completedsize / totalsize);
		return ret;
	};
	Runtime.prototype.go = function ()
	{
		if (!this.ctx && !this.glwrap)
			return;
		var ctx = this.ctx || this.overlay_ctx;
		if (this.overlay_canvas)
			this.positionOverlayCanvas();
		this.progress = 0;
		this.last_progress = -1;
		if (this.areAllTexturesLoaded())
			this.go_textures_done();
		else
		{
			var ms_elapsed = Date.now() - this.start_time;
			var multiplier = 1;
			if (this.isTizen)
				multiplier = this.devicePixelRatio;
			if (ctx)
			{
				if (this.loaderstyle !== 3 && ms_elapsed >= 500 && this.last_progress != this.progress)
				{
					ctx.clearRect(0, 0, this.width, this.height);
					var mx = this.width / (2 * multiplier);
					var my = this.height / (2 * multiplier);
					var haslogo = (this.loaderstyle === 0 && this.loaderlogo.complete);
					var hlw = 40;
					var hlh = 0;
					var logowidth = 80;
					if (haslogo)
					{
						logowidth = this.loaderlogo.width;
						hlw = logowidth / 2;
						hlh = this.loaderlogo.height / 2;
						ctx.drawImage(this.loaderlogo, cr.floor(mx - hlw), cr.floor(my - hlh));
					}
					if (this.loaderstyle <= 1)
					{
						my += hlh + (haslogo ? 12 : 0);
						mx -= hlw;
						mx = cr.floor(mx) + 0.5;
						my = cr.floor(my) + 0.5;
						ctx.fillStyle = "DodgerBlue";
						ctx.fillRect(mx, my, Math.floor(logowidth * this.progress), 6);
						ctx.strokeStyle = "black";
						ctx.strokeRect(mx, my, logowidth, 6);
						ctx.strokeStyle = "white";
						ctx.strokeRect(mx - 1, my - 1, logowidth + 2, 8);
					}
					else if (this.loaderstyle === 2)
					{
						ctx.font = "12pt Arial";
						ctx.fillStyle = "#999";
						ctx.textBaseLine = "middle";
						var percent_text = Math.round(this.progress * 100) + "%";
						var text_dim = ctx.measureText ? ctx.measureText(percent_text) : null;
						var text_width = text_dim ? text_dim.width : 0;
						ctx.fillText(percent_text, mx - (text_width / 2), my);
					}
				}
				this.last_progress = this.progress;
			}
			setTimeout((function (self) { return function () { self.go(); }; })(this), 100);
		}
	};
	Runtime.prototype.go_textures_done = function ()
	{
		if (this.overlay_canvas)
		{
			this.canvas.parentNode.removeChild(this.overlay_canvas);
			this.overlay_ctx = null;
			this.overlay_canvas = null;
		}
		this.start_time = Date.now();
		this.last_fps_time = cr.performance_now();       // for counting framerate
		var i, len, t;
		if (this.uses_loader_layout)
		{
			for (i = 0, len = this.types_by_index.length; i < len; i++)
			{
				t = this.types_by_index[i];
				if (!t.is_family && !t.isOnLoaderLayout && t.plugin.is_world)
				{
					t.onCreate();
					cr.seal(t);
				}
			}
		}
		else
			this.isloading = false;
		for (i = 0, len = this.layouts_by_index.length; i < len; i++)
		{
			this.layouts_by_index[i].createGlobalNonWorlds();
		}
		if (this.fullscreen_mode >= 2)
		{
			var orig_aspect = this.original_width / this.original_height;
			var cur_aspect = this.width / this.height;
			if ((this.fullscreen_mode !== 2 && cur_aspect > orig_aspect) || (this.fullscreen_mode === 2 && cur_aspect < orig_aspect))
				this.aspect_scale = this.height / this.original_height;
			else
				this.aspect_scale = this.width / this.original_width;
		}
		if (this.first_layout)
			this.layouts[this.first_layout].startRunning();
		else
			this.layouts_by_index[0].startRunning();
;
		if (!this.uses_loader_layout)
		{
			this.loadingprogress = 1;
			this.trigger(cr.system_object.prototype.cnds.OnLoadFinished, null);
		}
		this.tick();
		if (this.isDirectCanvas)
			AppMobi["webview"]["execute"]("onGameReady();");
	};
	var raf = window["requestAnimationFrame"] ||
	  window["mozRequestAnimationFrame"]    ||
	  window["webkitRequestAnimationFrame"] ||
	  window["msRequestAnimationFrame"]     ||
	  window["oRequestAnimationFrame"];
	Runtime.prototype.tick = function ()
	{
		if (!this.running_layout)
			return;
		var logic_start = cr.performance_now();
		if (!this.isDomFree && window != window.top)
		{
			var mode = this.fullscreen_mode;
			var isfullscreen = (document["mozFullScreen"] || document["webkitIsFullScreen"] || document["fullScreen"] || !!document["msFullscreenElement"] || this.isNodeFullscreen);
			if (isfullscreen && this.fullscreen_scaling > 0)
				mode = this.fullscreen_scaling;
			if (mode > 0)
			{
				var curwidth = window.innerWidth;
				var curheight = window.innerHeight;
				if (this.lastwidth !== curwidth || this.lastheight !== curheight)
				{
					this.lastwidth = curwidth;
					this.lastheight = curheight;
					this["setSize"](curwidth, curheight);
				}
			}
		}
		if (this.isloading)
		{
			var done = this.areAllTexturesLoaded();		// updates this.progress
			this.loadingprogress = this.progress;
			if (done)
			{
				this.isloading = false;
				this.progress = 1;
				this.trigger(cr.system_object.prototype.cnds.OnLoadFinished, null);
			}
		}
		this.logic();
		if ((this.redraw || this.isCocoonJs) && !this.is_WebGL_context_lost && !this.suspendDrawing)
		{
			this.redraw = false;
			if (this.glwrap)
				this.drawGL();
			else
				this.draw();
			if (this.snapshotCanvas)
			{
				if (this.canvas && this.canvas.toDataURL)
				{
					this.snapshotData = this.canvas.toDataURL(this.snapshotCanvas[0], this.snapshotCanvas[1]);
					this.trigger(cr.system_object.prototype.cnds.OnCanvasSnapshot, null);
				}
				this.snapshotCanvas = null;
			}
		}
		if (!this.hit_breakpoint)
		{
			this.tickcount++;
			this.execcount++;
			this.framecount++;
		}
		this.logictime += cr.performance_now() - logic_start;
		if (this.isSuspended)
			return;
		if (raf)
			this.raf_id = raf(this.tickFunc, this.canvas);
		else
		{
			this.timeout_id = setTimeout(this.tickFunc, this.isMobile ? 1 : 16);
		}
	};
	Runtime.prototype.logic = function ()
	{
		if(dontUpdate) return;
	
		var i, leni, j, lenj, k, lenk, type, inst, binst;
		var cur_time = cr.performance_now();
		if (cur_time - this.last_fps_time >= 1000)  // every 1 second
		{
			this.last_fps_time += 1000;
			this.fps = this.framecount;
			this.framecount = 0;
			this.cpuutilisation = this.logictime;
			this.logictime = 0;
		}
		if (this.measuring_dt)
		{
			if (this.last_tick_time !== 0)
			{
				var ms_diff = cur_time - this.last_tick_time;
				if (ms_diff === 0 && !this.isDebug)
				{
					this.zeroDtCount++;
					if (this.zeroDtCout >= 10)
						this.measuring_dt = false;
					this.dt1 = 1.0 / 60.0;            // 60fps assumed (0.01666...)
				}
				else
				{
					this.dt1 = ms_diff / 1000.0; // dt measured in seconds
					if (this.dt1 > 0.5)
						this.dt1 = 0;
					else if (this.dt1 > 0.1)
						this.dt1 = 0.1;
				}
			}
			this.last_tick_time = cur_time;
		}
        this.dt = this.dt1 * this.timescale;
        this.kahanTime.add(this.dt);
		var isfullscreen = (document["mozFullScreen"] || document["webkitIsFullScreen"] || document["fullScreen"] || !!document["msFullscreenElement"] || this.isNodeFullscreen);
		if (this.fullscreen_mode >= 2 /* scale */ || (isfullscreen && this.fullscreen_scaling > 0))
		{
			var orig_aspect = this.original_width / this.original_height;
			var cur_aspect = this.width / this.height;
			var mode = this.fullscreen_mode;
			if (isfullscreen && this.fullscreen_scaling > 0)
				mode = this.fullscreen_scaling;
			if ((mode !== 2 && cur_aspect > orig_aspect) || (mode === 2 && cur_aspect < orig_aspect))
			{
				this.aspect_scale = this.height / this.original_height;
			}
			else
			{
				this.aspect_scale = this.width / this.original_width;
			}
			if (this.running_layout)
			{
				this.running_layout.scrollToX(this.running_layout.scrollX);
				this.running_layout.scrollToY(this.running_layout.scrollY);
			}
		}
		else
			this.aspect_scale = 1;
		this.ClearDeathRow();
		this.isInOnDestroy++;
		this.system.runWaits();		// prevent instance list changing
		this.isInOnDestroy--;
		this.ClearDeathRow();		// allow instance list changing
		this.isInOnDestroy++;
		for (i = 0, leni = this.types_by_index.length; i < leni; i++)
		{
			type = this.types_by_index[i];
			if (type.is_family || (!type.behaviors.length && !type.families.length))
				continue;
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				inst = type.instances[j];
				for (k = 0, lenk = inst.behavior_insts.length; k < lenk; k++)
				{
					inst.behavior_insts[k].tick();
				}
			}
		}
		for (i = 0, leni = this.types_by_index.length; i < leni; i++)
		{
			type = this.types_by_index[i];
			if (type.is_family || (!type.behaviors.length && !type.families.length))
				continue;	// type doesn't have any behaviors
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				inst = type.instances[j];
				for (k = 0, lenk = inst.behavior_insts.length; k < lenk; k++)
				{
					binst = inst.behavior_insts[k];
					if (binst.posttick)
						binst.posttick();
				}
			}
		}
        var tickarr = this.objects_to_tick.valuesRef();
        for (i = 0, leni = tickarr.length; i < leni; i++)
            tickarr[i].tick();
		this.isInOnDestroy--;		// end preventing instance lists from being changed
		this.handleSaveLoad();		// save/load now if queued
		i = 0;
		while (this.changelayout && i++ < 10)
		{
			this.doChangeLayout(this.changelayout);
		}
        for (i = 0, leni = this.eventsheets_by_index.length; i < leni; i++)
            this.eventsheets_by_index[i].hasRun = false;
		if (this.running_layout.event_sheet)
			this.running_layout.event_sheet.run();
		this.registered_collisions.length = 0;
		this.layout_first_tick = false;
		this.isInOnDestroy++;		// prevent instance lists from being changed
		for (i = 0, leni = this.types_by_index.length; i < leni; i++)
		{
			type = this.types_by_index[i];
			if (type.is_family || (!type.behaviors.length && !type.families.length))
				continue;	// type doesn't have any behaviors
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				var inst = type.instances[j];
				for (k = 0, lenk = inst.behavior_insts.length; k < lenk; k++)
				{
					binst = inst.behavior_insts[k];
					if (binst.tick2)
						binst.tick2();
				}
			}
		}
        tickarr = this.objects_to_tick2.valuesRef();
        for (i = 0, leni = tickarr.length; i < leni; i++)
            tickarr[i].tick2();
		this.isInOnDestroy--;		// end preventing instance lists from being changed
	};
	Runtime.prototype.doChangeLayout = function (changeToLayout)
	{
;
		var prev_layout = this.running_layout;
		this.running_layout.stopRunning();
		var i, len, j, lenj, k, lenk, type, inst, binst;
		if (this.glwrap)
		{
			for (i = 0, len = this.types_by_index.length; i < len; i++)
			{
				type = this.types_by_index[i];
				if (type.is_family)
					continue;
				if (type.unloadTextures && (!type.global || type.instances.length === 0) && changeToLayout.initial_types.indexOf(type) === -1)
				{
					type.unloadTextures();
				}
			}
		}
		if (prev_layout == changeToLayout)
			this.system.waits.length = 0;
		changeToLayout.startRunning();
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			type = this.types_by_index[i];
			if (!type.global && !type.plugin.singleglobal)
				continue;
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				inst = type.instances[j];
				if (inst.onLayoutChange)
					inst.onLayoutChange();
				if (inst.behavior_insts)
				{
					for (k = 0, lenk = inst.behavior_insts.length; k < lenk; k++)
					{
						binst = inst.behavior_insts[k];
						if (binst.onLayoutChange)
							binst.onLayoutChange();
					}
				}
			}
		}
		this.redraw = true;
		this.layout_first_tick = true;
		this.ClearDeathRow();
	};
    Runtime.prototype.tickMe = function (inst)
    {
        this.objects_to_tick.add(inst);
    };
	Runtime.prototype.untickMe = function (inst)
	{
		this.objects_to_tick.remove(inst);
	};
	Runtime.prototype.tick2Me = function (inst)
    {
        this.objects_to_tick2.add(inst);
    };
	Runtime.prototype.untick2Me = function (inst)
	{
		this.objects_to_tick2.remove(inst);
	};
    Runtime.prototype.getDt = function (inst)
    {
        if (!inst || inst.my_timescale === -1.0)
            return this.dt;
        return this.dt1 * inst.my_timescale;
    };
	Runtime.prototype.draw = function ()
	{
		this.running_layout.draw(this.ctx);
		if (this.isDirectCanvas)
			this.ctx["present"]();
	};
	Runtime.prototype.drawGL = function ()
	{
		this.running_layout.drawGL(this.glwrap);
		this.glwrap.present();
	};
	Runtime.prototype.addDestroyCallback = function (f)
	{
		if (f)
			this.destroycallbacks.push(f);
	};
	Runtime.prototype.removeDestroyCallback = function (f)
	{
		cr.arrayFindRemove(this.destroycallbacks, f);
	};
	Runtime.prototype.getObjectByUID = function (uid_)
	{
;
		return this.objectsByUid[uid_.toString()];
	};
	Runtime.prototype.DestroyInstance = function (inst)
	{
		var i, len;
		if (!this.deathRow.contains(inst))
		{
			this.deathRow.add(inst);
			if (inst.is_contained)
			{
				for (i = 0, len = inst.siblings.length; i < len; i++)
				{
					this.DestroyInstance(inst.siblings[i]);
				}
			}
			if (this.isInClearDeathRow)
				this.deathRow.values_cache.push(inst);
			this.isInOnDestroy++;		// support recursion
			this.trigger(Object.getPrototypeOf(inst.type.plugin).cnds.OnDestroyed, inst);
			this.isInOnDestroy--;
		}
	};
	Runtime.prototype.ClearDeathRow = function ()
	{
		var inst, index, type, instances, binst;
		var i, j, k, leni, lenj, lenk;
		var w, f;
		this.isInClearDeathRow = true;
		for (i = 0, leni = this.createRow.length; i < leni; i++)
		{
			inst = this.createRow[i];
			type = inst.type;
			type.instances.push(inst);
			for (j = 0, lenj = type.families.length; j < lenj; j++)
			{
				type.families[j].instances.push(inst);
				type.families[j].stale_iids = true;
			}
		}
		this.createRow.length = 0;
		var arr = this.deathRow.valuesRef();	// get array of items from set
		for (i = 0; i < arr.length; i++)		// check array length every time in case it changes
		{
			inst = arr[i];
			type = inst.type;
			instances = type.instances;
			for (j = 0, lenj = this.destroycallbacks.length; j < lenj; j++)
				this.destroycallbacks[j](inst);
			cr.arrayFindRemove(instances, inst);
			if (inst.layer)
			{
				cr.arrayRemove(inst.layer.instances, inst.get_zindex());
				inst.layer.zindices_stale = true;
			}
			for (j = 0, lenj = type.families.length; j < lenj; j++)
			{
				cr.arrayFindRemove(type.families[j].instances, inst);
				type.families[j].stale_iids = true;
			}
			if (inst.behavior_insts)
			{
				for (j = 0, lenj = inst.behavior_insts.length; j < lenj; j++)
				{
					binst = inst.behavior_insts[j];
					if (binst.onDestroy)
						binst.onDestroy();
					binst.behavior.my_instances.remove(inst);
				}
			}
            this.objects_to_tick.remove(inst);
			this.objects_to_tick2.remove(inst);
			for (j = 0, lenj = this.system.waits.length; j < lenj; j++)
			{
				w = this.system.waits[j];
				if (w.sols.hasOwnProperty(type.index))
					cr.arrayFindRemove(w.sols[type.index].insts, inst);
				if (!type.is_family)
				{
					for (k = 0, lenk = type.families.length; k < lenk; k++)
					{
						f = type.families[k];
						if (w.sols.hasOwnProperty(f.index))
							cr.arrayFindRemove(w.sols[f.index].insts, inst);
					}
				}
			}
			if (inst.onDestroy)
				inst.onDestroy();
			if (this.objectsByUid.hasOwnProperty(inst.uid.toString()))
				delete this.objectsByUid[inst.uid.toString()];
			this.objectcount--;
			if (type.deadCache.length < 64)
				type.deadCache.push(inst);
			type.stale_iids = true;
		}
		if (!this.deathRow.isEmpty())
			this.redraw = true;
		this.deathRow.clear();
		this.isInClearDeathRow = false;
	};
	Runtime.prototype.createInstance = function (type, layer, sx, sy)
	{
		if (type.is_family)
		{
			var i = cr.floor(Math.random() * type.members.length);
			return this.createInstance(type.members[i], layer, sx, sy);
		}
		if (!type.default_instance)
		{
			return null;
		}
		return this.createInstanceFromInit(type.default_instance, layer, false, sx, sy, false);
	};
	var all_behaviors = [];
	Runtime.prototype.createInstanceFromInit = function (initial_inst, layer, is_startup_instance, sx, sy, skip_siblings)
	{
		var i, len, j, lenj, p, effect_fallback, x, y;
		if (!initial_inst)
			return null;
		var type = this.types_by_index[initial_inst[1]];
;
;
		var is_world = type.plugin.is_world;
;
		if (this.isloading && is_world && !type.isOnLoaderLayout)
			return null;
		if (is_world && !this.glwrap && initial_inst[0][11] === 11)
			return null;
		var original_layer = layer;
		if (!is_world)
			layer = null;
		var inst;
		if (type.deadCache.length)
		{
			inst = type.deadCache.pop();
			inst.recycled = true;
			type.plugin.Instance.call(inst, type);
		}
		else
		{
			inst = new type.plugin.Instance(type);
			inst.recycled = false;
		}
		if (is_startup_instance && !skip_siblings)
			inst.uid = initial_inst[2];
		else
			inst.uid = this.next_uid++;
		this.objectsByUid[inst.uid.toString()] = inst;
		inst.puid = this.next_puid++;
		inst.iid = type.instances.length;
		for (i = 0, len = this.createRow.length; i < len; ++i)
		{
			if (this.createRow[i].type === type)
				inst.iid++;
		}
		inst.get_iid = cr.inst_get_iid;
		var initial_vars = initial_inst[3];
		if (inst.recycled)
		{
			cr.wipe(inst.extra);
		}
		else
		{
			inst.extra = {};
			if (typeof cr_is_preview !== "undefined")
			{
				inst.instance_var_names = [];
				inst.instance_var_names.length = initial_vars.length;
				for (i = 0, len = initial_vars.length; i < len; i++)
					inst.instance_var_names[i] = initial_vars[i][1];
			}
			inst.instance_vars = [];
			inst.instance_vars.length = initial_vars.length;
		}
		for (i = 0, len = initial_vars.length; i < len; i++)
			inst.instance_vars[i] = initial_vars[i][0];
		if (is_world)
		{
			var wm = initial_inst[0];
;
			inst.x = cr.is_undefined(sx) ? wm[0] : sx;
			inst.y = cr.is_undefined(sy) ? wm[1] : sy;
			inst.z = wm[2];
			inst.width = wm[3];
			inst.height = wm[4];
			inst.depth = wm[5];
			inst.angle = wm[6];
			inst.opacity = wm[7];
			inst.hotspotX = wm[8];
			inst.hotspotY = wm[9];
			inst.blend_mode = wm[10];
			effect_fallback = wm[11];
			if (!this.glwrap && type.effect_types.length)	// no WebGL renderer and shaders used
				inst.blend_mode = effect_fallback;			// use fallback blend mode - destroy mode was handled above
			inst.compositeOp = cr.effectToCompositeOp(inst.blend_mode);
			if (this.gl)
				cr.setGLBlend(inst, inst.blend_mode, this.gl);
			if (inst.recycled)
			{
				for (i = 0, len = wm[12].length; i < len; i++)
				{
					for (j = 0, lenj = wm[12][i].length; j < lenj; j++)
						inst.effect_params[i][j] = wm[12][i][j];
				}
				inst.bbox.set(0, 0, 0, 0);
				inst.bquad.set_from_rect(inst.bbox);
				inst.bbox_changed_callbacks.length = 0;
			}
			else
			{
				inst.effect_params = wm[12].slice(0);
				for (i = 0, len = inst.effect_params.length; i < len; i++)
					inst.effect_params[i] = wm[12][i].slice(0);
				inst.active_effect_types = [];
				inst.active_effect_flags = [];
				inst.active_effect_flags.length = type.effect_types.length;
				inst.bbox = new cr.rect(0, 0, 0, 0);
				inst.bquad = new cr.quad();
				inst.bbox_changed_callbacks = [];
				inst.set_bbox_changed = cr.set_bbox_changed;
				inst.add_bbox_changed_callback = cr.add_bbox_changed_callback;
				inst.contains_pt = cr.inst_contains_pt;
				inst.update_bbox = cr.update_bbox;
				inst.get_zindex = cr.inst_get_zindex;
			}
			for (i = 0, len = type.effect_types.length; i < len; i++)
				inst.active_effect_flags[i] = true;
			inst.updateActiveEffects = cr.inst_updateActiveEffects;
			inst.updateActiveEffects();
			inst.uses_shaders = !!inst.active_effect_types.length;
			inst.bbox_changed = true;
			inst.visible = true;
            inst.my_timescale = -1.0;
			inst.layer = layer;
			inst.zindex = layer.instances.length;	// will be placed at top of current layer
			if (typeof inst.collision_poly === "undefined")
				inst.collision_poly = null;
			inst.collisionsEnabled = true;
			this.redraw = true;
		}
		inst.toString = cr.inst_toString;
		var initial_props, binst;
		all_behaviors.length = 0;
		for (i = 0, len = type.families.length; i < len; i++)
		{
			all_behaviors.push.apply(all_behaviors, type.families[i].behaviors);
		}
		all_behaviors.push.apply(all_behaviors, type.behaviors);
		if (inst.recycled)
		{
			for (i = 0, len = all_behaviors.length; i < len; i++)
			{
				var btype = all_behaviors[i];
				binst = inst.behavior_insts[i];
				binst.recycled = true;
				btype.behavior.Instance.call(binst, btype, inst);
				initial_props = initial_inst[4][i];
				for (j = 0, lenj = initial_props.length; j < lenj; j++)
					binst.properties[j] = initial_props[j];
				binst.onCreate();
				btype.behavior.my_instances.add(inst);
			}
		}
		else
		{
			inst.behavior_insts = [];
			for (i = 0, len = all_behaviors.length; i < len; i++)
			{
				var btype = all_behaviors[i];
				var binst = new btype.behavior.Instance(btype, inst);
				binst.recycled = false;
				binst.properties = initial_inst[4][i].slice(0);
				binst.onCreate();
				cr.seal(binst);
				inst.behavior_insts.push(binst);
				btype.behavior.my_instances.add(inst);
			}
		}
		initial_props = initial_inst[5];
		if (inst.recycled)
		{
			for (i = 0, len = initial_props.length; i < len; i++)
				inst.properties[i] = initial_props[i];
		}
		else
			inst.properties = initial_props.slice(0);
		this.createRow.push(inst);
		if (layer)
		{
;
			layer.instances.push(inst);
		}
		this.objectcount++;
		if (type.is_contained)
		{
			inst.is_contained = true;
			if (inst.recycled)
				inst.siblings.length = 0;
			else
				inst.siblings = [];			// note: should not include self in siblings
			if (!is_startup_instance && !skip_siblings)	// layout links initial instances
			{
				for (i = 0, len = type.container.length; i < len; i++)
				{
					if (type.container[i] === type)
						continue;
					if (!type.container[i].default_instance)
					{
						return null;
					}
					inst.siblings.push(this.createInstanceFromInit(type.container[i].default_instance, original_layer, false, is_world ? inst.x : sx, is_world ? inst.y : sy, true));
				}
				for (i = 0, len = inst.siblings.length; i < len; i++)
				{
					inst.siblings[i].siblings.push(inst);
					for (j = 0; j < len; j++)
					{
						if (i !== j)
							inst.siblings[i].siblings.push(inst.siblings[j]);
					}
				}
			}
		}
		else
		{
			inst.is_contained = false;
			inst.siblings = null;
		}
		inst.onCreate();
		if (!inst.recycled)
			cr.seal(inst);
		for (i = 0, len = inst.behavior_insts.length; i < len; i++)
		{
			if (inst.behavior_insts[i].postCreate)
				inst.behavior_insts[i].postCreate();
		}
		return inst;
	};
	Runtime.prototype.getLayerByName = function (layer_name)
	{
		var i, len;
		for (i = 0, len = this.running_layout.layers.length; i < len; i++)
		{
			var layer = this.running_layout.layers[i];
			if (cr.equals_nocase(layer.name, layer_name))
				return layer;
		}
		return null;
	};
	Runtime.prototype.getLayerByNumber = function (index)
	{
		index = cr.floor(index);
		if (index < 0)
			index = 0;
		if (index >= this.running_layout.layers.length)
			index = this.running_layout.layers.length - 1;
		return this.running_layout.layers[index];
	};
	Runtime.prototype.getLayer = function (l)
	{
		if (cr.is_number(l))
			return this.getLayerByNumber(l);
		else
			return this.getLayerByName(l.toString());
	};
	Runtime.prototype.clearSol = function (solModifiers)
	{
		var i, len;
		for (i = 0, len = solModifiers.length; i < len; i++)
		{
			solModifiers[i].getCurrentSol().select_all = true;
		}
	};
	Runtime.prototype.pushCleanSol = function (solModifiers)
	{
		var i, len;
		for (i = 0, len = solModifiers.length; i < len; i++)
		{
			solModifiers[i].pushCleanSol();
		}
	};
	Runtime.prototype.pushCopySol = function (solModifiers)
	{
		var i, len;
		for (i = 0, len = solModifiers.length; i < len; i++)
		{
			solModifiers[i].pushCopySol();
		}
	};
	Runtime.prototype.popSol = function (solModifiers)
	{
		var i, len;
		for (i = 0, len = solModifiers.length; i < len; i++)
		{
			solModifiers[i].popSol();
		}
	};
	Runtime.prototype.testAndSelectCanvasPointOverlap = function (type, ptx, pty, inverted)
	{
		var sol = type.getCurrentSol();
		var i, j, inst, len;
		var lx, ly;
		if (sol.select_all)
		{
			if (!inverted)
			{
				sol.select_all = false;
				sol.instances.length = 0;   // clear contents
			}
			for (i = 0, len = type.instances.length; i < len; i++)
			{
				inst = type.instances[i];
				inst.update_bbox();
				lx = inst.layer.canvasToLayer(ptx, pty, true);
				ly = inst.layer.canvasToLayer(ptx, pty, false);
				if (inst.contains_pt(lx, ly))
				{
					if (inverted)
						return false;
					else
						sol.instances.push(inst);
				}
			}
		}
		else
		{
			j = 0;
			for (i = 0, len = sol.instances.length; i < len; i++)
			{
				inst = sol.instances[i];
				inst.update_bbox();
				lx = inst.layer.canvasToLayer(ptx, pty, true);
				ly = inst.layer.canvasToLayer(ptx, pty, false);
				if (inst.contains_pt(lx, ly))
				{
					if (inverted)
						return false;
					else
					{
						sol.instances[j] = sol.instances[i];
						j++;
					}
				}
			}
			if (!inverted)
				sol.instances.length = j;
		}
		type.applySolToContainer();
		if (inverted)
			return true;		// did not find anything overlapping
		else
			return sol.hasObjects();
	};
	Runtime.prototype.testOverlap = function (a, b)
	{
		if (!a || !b || a === b || !a.collisionsEnabled || !b.collisionsEnabled)
			return false;
		a.update_bbox();
		b.update_bbox();
		var layera = a.layer;
		var layerb = b.layer;
		var different_layers = (layera !== layerb && (layera.parallaxX !== layerb.parallaxX || layerb.parallaxY !== layerb.parallaxY || layera.scale !== layerb.scale || layera.angle !== layerb.angle || layera.zoomRate !== layerb.zoomRate));
		var i, len, x, y, haspolya, haspolyb, polya, polyb;
		if (!different_layers)	// same layers: easy check
		{
			if (!a.bbox.intersects_rect(b.bbox))
				return false;
			if (!a.bquad.intersects_quad(b.bquad))
				return false;
			haspolya = (a.collision_poly && !a.collision_poly.is_empty());
			haspolyb = (b.collision_poly && !b.collision_poly.is_empty());
			if (!haspolya && !haspolyb)
				return true;
			if (haspolya)
			{
				a.collision_poly.cache_poly(a.width, a.height, a.angle);
				polya = a.collision_poly;
			}
			else
			{
				this.temp_poly.set_from_quad(a.bquad, a.x, a.y, a.width, a.height);
				polya = this.temp_poly;
			}
			if (haspolyb)
			{
				b.collision_poly.cache_poly(b.width, b.height, b.angle);
				polyb = b.collision_poly;
			}
			else
			{
				this.temp_poly.set_from_quad(b.bquad, b.x, b.y, b.width, b.height);
				polyb = this.temp_poly;
			}
			return polya.intersects_poly(polyb, b.x - a.x, b.y - a.y);
		}
		else	// different layers: need to do full translated check
		{
			haspolya = (a.collision_poly && !a.collision_poly.is_empty());
			haspolyb = (b.collision_poly && !b.collision_poly.is_empty());
			if (haspolya)
			{
				a.collision_poly.cache_poly(a.width, a.height, a.angle);
				this.temp_poly.set_from_poly(a.collision_poly);
			}
			else
			{
				this.temp_poly.set_from_quad(a.bquad, a.x, a.y, a.width, a.height);
			}
			polya = this.temp_poly;
			if (haspolyb)
			{
				b.collision_poly.cache_poly(b.width, b.height, b.angle);
				this.temp_poly2.set_from_poly(b.collision_poly);
			}
			else
			{
				this.temp_poly2.set_from_quad(b.bquad, b.x, b.y, b.width, b.height);
			}
			polyb = this.temp_poly2;
			for (i = 0, len = polya.pts_count; i < len; i++)
			{
				x = polya.pts_cache[i*2];
				y = polya.pts_cache[i*2+1];
				polya.pts_cache[i*2] = layera.layerToCanvas(x + a.x, y + a.y, true);
				polya.pts_cache[i*2+1] = layera.layerToCanvas(x + a.x, y + a.y, false);
			}
			for (i = 0, len = polyb.pts_count; i < len; i++)
			{
				x = polyb.pts_cache[i*2];
				y = polyb.pts_cache[i*2+1];
				polyb.pts_cache[i*2] = layerb.layerToCanvas(x + b.x, y + b.y, true);
				polyb.pts_cache[i*2+1] = layerb.layerToCanvas(x + b.x, y + b.y, false);
			}
			return polya.intersects_poly(polyb, 0, 0);
		}
	};
	var tmpQuad = new cr.quad();
	var tmpRect = new cr.rect(0, 0, 0, 0);
	Runtime.prototype.testRectOverlap = function (r, b)
	{
		if (!b || !b.collisionsEnabled)
			return false;
		b.update_bbox();
		var layerb = b.layer;
		var haspolyb, polyb;
		if (!b.bbox.intersects_rect(r))
			return false;
		tmpQuad.set_from_rect(r);
		if (!b.bquad.intersects_quad(tmpQuad))
			return false;
		haspolyb = (b.collision_poly && !b.collision_poly.is_empty());
		if (!haspolyb)
			return true;
		b.collision_poly.cache_poly(b.width, b.height, b.angle);
		tmpQuad.offset(-r.left, -r.top);
		this.temp_poly.set_from_quad(tmpQuad, 0, 0, 1, 1);
		return b.collision_poly.intersects_poly(this.temp_poly, r.left - b.x, r.top - b.y);
	};
	Runtime.prototype.testSegmentOverlap = function (x1, y1, x2, y2, b)
	{
		if (!b || !b.collisionsEnabled)
			return false;
		b.update_bbox();
		var layerb = b.layer;
		var haspolyb, polyb;
		tmpRect.set(cr.min(x1, x2), cr.min(y1, y2), cr.max(x1, x2), cr.max(y1, y2));
		if (!b.bbox.intersects_rect(tmpRect))
			return false;
		if (!b.bquad.intersects_segment(x1, y1, x2, y2))
			return false;
		haspolyb = (b.collision_poly && !b.collision_poly.is_empty());
		if (!haspolyb)
			return true;
		b.collision_poly.cache_poly(b.width, b.height, b.angle);
		return b.collision_poly.intersects_segment(b.x, b.y, x1, y1, x2, y2);
	};
	Runtime.prototype.typeHasBehavior = function (t, b)
	{
		if (!b)
			return false;
		var i, len, j, lenj, f;
		for (i = 0, len = t.behaviors.length; i < len; i++)
		{
			if (t.behaviors[i].behavior instanceof b)
				return true;
		}
		if (!t.is_family)
		{
			for (i = 0, len = t.families.length; i < len; i++)
			{
				f = t.families[i];
				for (j = 0, lenj = f.behaviors.length; j < lenj; j++)
				{
					if (f.behaviors[j].behavior instanceof b)
						return true;
				}
			}
		}
		return false;
	};
	Runtime.prototype.typeHasNoSaveBehavior = function (t)
	{
		return this.typeHasBehavior(t, cr.behaviors.NoSave);
	};
	Runtime.prototype.typeHasPersistBehavior = function (t)
	{
		return this.typeHasBehavior(t, cr.behaviors.Persist);
	};
	Runtime.prototype.getSolidBehavior = function ()
	{
		if (!cr.behaviors.solid)
			return null;
		var i, len;
		for (i = 0, len = this.behaviors.length; i < len; i++)
		{
			if (this.behaviors[i] instanceof cr.behaviors.solid)
				return this.behaviors[i];
		}
		return null;
	};
	Runtime.prototype.testOverlapSolid = function (inst)
	{
		var solid = this.getSolidBehavior();
		if (!solid)
			return null;
		var i, len, s;
		var solids = solid.my_instances.valuesRef();
		for (i = 0, len = solids.length; i < len; ++i)
		{
			s = solids[i];
			if (!s.extra.solidEnabled)
				continue;
			if (this.testOverlap(inst, s))
				return s;
		}
		return null;
	};
	Runtime.prototype.testRectOverlapSolid = function (r)
	{
		var solid = this.getSolidBehavior();
		if (!solid)
			return null;
		var i, len, s;
		var solids = solid.my_instances.valuesRef();
		for (i = 0, len = solids.length; i < len; ++i)
		{
			s = solids[i];
			if (!s.extra.solidEnabled)
				continue;
			if (this.testRectOverlap(r, s))
				return s;
		}
		return null;
	};
	var jumpthru_array_ret = [];
	Runtime.prototype.testOverlapJumpThru = function (inst, all)
	{
		var jumpthru = null;
		var i, len, s;
		if (!cr.behaviors.jumpthru)
			return null;
		for (i = 0, len = this.behaviors.length; i < len; i++)
		{
			if (this.behaviors[i] instanceof cr.behaviors.jumpthru)
			{
				jumpthru = this.behaviors[i];
				break;
			}
		}
		if (!jumpthru)
			return null;
		var ret = null;
		if (all)
		{
			ret = jumpthru_array_ret;
			ret.length = 0;
		}
		var jumpthrus = jumpthru.my_instances.valuesRef();
		for (i = 0, len = jumpthrus.length; i < len; ++i)
		{
			s = jumpthrus[i];
			if (!s.extra.jumpthruEnabled)
				continue;
			if (this.testOverlap(inst, s))
			{
				if (all)
					ret.push(s);
				else
					return s;
			}
		}
		return ret;
	};
	Runtime.prototype.pushOutSolid = function (inst, xdir, ydir, dist, include_jumpthrus, specific_jumpthru)
	{
		var push_dist = dist || 50;
		var oldx = inst.x
		var oldy = inst.y;
		var i;
		var last_overlapped = null, secondlast_overlapped = null;
		for (i = 0; i < push_dist; i++)
		{
			inst.x = (oldx + (xdir * i));
			inst.y = (oldy + (ydir * i));
			inst.set_bbox_changed();
			if (!this.testOverlap(inst, last_overlapped))
			{
				last_overlapped = this.testOverlapSolid(inst);
				if (last_overlapped)
					secondlast_overlapped = last_overlapped;
				if (!last_overlapped)
				{
					if (include_jumpthrus)
					{
						if (specific_jumpthru)
							last_overlapped = (this.testOverlap(inst, specific_jumpthru) ? specific_jumpthru : null);
						else
							last_overlapped = this.testOverlapJumpThru(inst);
						if (last_overlapped)
							secondlast_overlapped = last_overlapped;
					}
					if (!last_overlapped)
					{
						if (secondlast_overlapped)
							this.pushInFractional(inst, xdir, ydir, secondlast_overlapped, 16);
						return true;
					}
				}
			}
		}
		inst.x = oldx;
		inst.y = oldy;
		inst.set_bbox_changed();
		return false;
	};
	Runtime.prototype.pushOut = function (inst, xdir, ydir, dist, otherinst)
	{
		var push_dist = dist || 50;
		var oldx = inst.x
		var oldy = inst.y;
		var i;
		for (i = 0; i < push_dist; i++)
		{
			inst.x = (oldx + (xdir * i));
			inst.y = (oldy + (ydir * i));
			inst.set_bbox_changed();
			if (!this.testOverlap(inst, otherinst))
				return true;
		}
		inst.x = oldx;
		inst.y = oldy;
		inst.set_bbox_changed();
		return false;
	};
	Runtime.prototype.pushInFractional = function (inst, xdir, ydir, obj, limit)
	{
		var divisor = 2;
		var frac;
		var forward = false;
		var overlapping = false;
		var bestx = inst.x;
		var besty = inst.y;
		while (divisor <= limit)
		{
			frac = 1 / divisor;
			divisor *= 2;
			inst.x += xdir * frac * (forward ? 1 : -1);
			inst.y += ydir * frac * (forward ? 1 : -1);
			inst.set_bbox_changed();
			if (this.testOverlap(inst, obj))
			{
				forward = true;
				overlapping = true;
			}
			else
			{
				forward = false;
				overlapping = false;
				bestx = inst.x;
				besty = inst.y;
			}
		}
		if (overlapping)
		{
			inst.x = bestx;
			inst.y = besty;
			inst.set_bbox_changed();
		}
	};
	Runtime.prototype.pushOutSolidNearest = function (inst, max_dist_)
	{
		var max_dist = (cr.is_undefined(max_dist_) ? 100 : max_dist_);
		var dist = 0;
		var oldx = inst.x
		var oldy = inst.y;
		var dir = 0;
		var dx = 0, dy = 0;
		var last_overlapped = this.testOverlapSolid(inst);
		if (!last_overlapped)
			return true;		// already clear of solids
		while (dist <= max_dist)
		{
			switch (dir) {
			case 0:		dx = 0; dy = -1; dist++; break;
			case 1:		dx = 1; dy = -1; break;
			case 2:		dx = 1; dy = 0; break;
			case 3:		dx = 1; dy = 1; break;
			case 4:		dx = 0; dy = 1; break;
			case 5:		dx = -1; dy = 1; break;
			case 6:		dx = -1; dy = 0; break;
			case 7:		dx = -1; dy = -1; break;
			}
			dir = (dir + 1) % 8;
			inst.x = cr.floor(oldx + (dx * dist));
			inst.y = cr.floor(oldy + (dy * dist));
			inst.set_bbox_changed();
			if (!this.testOverlap(inst, last_overlapped))
			{
				last_overlapped = this.testOverlapSolid(inst);
				if (!last_overlapped)
					return true;
			}
		}
		inst.x = oldx;
		inst.y = oldy;
		inst.set_bbox_changed();
		return false;
	};
	Runtime.prototype.registerCollision = function (a, b)
	{
		if (!a.collisionsEnabled || !b.collisionsEnabled)
			return;
		this.registered_collisions.push([a, b]);
	};
	Runtime.prototype.checkRegisteredCollision = function (a, b)
	{
		var i, len, x;
		for (i = 0, len = this.registered_collisions.length; i < len; i++)
		{
			x = this.registered_collisions[i];
			if ((x[0] == a && x[1] == b) || (x[0] == b && x[1] == a))
				return true;
		}
		return false;
	};
	Runtime.prototype.calculateSolidBounceAngle = function(inst, startx, starty, obj)
	{
		var objx = inst.x;
		var objy = inst.y;
		var radius = cr.max(10, cr.distanceTo(startx, starty, objx, objy));
		var startangle = cr.angleTo(startx, starty, objx, objy);
		var firstsolid = obj || this.testOverlapSolid(inst);
		if (!firstsolid)
			return cr.clamp_angle(startangle + cr.PI);
		var cursolid = firstsolid;
		var i, curangle, anticlockwise_free_angle, clockwise_free_angle;
		var increment = cr.to_radians(5);	// 5 degree increments
		for (i = 1; i < 36; i++)
		{
			curangle = startangle - i * increment;
			inst.x = startx + Math.cos(curangle) * radius;
			inst.y = starty + Math.sin(curangle) * radius;
			inst.set_bbox_changed();
			if (!this.testOverlap(inst, cursolid))
			{
				cursolid = obj ? null : this.testOverlapSolid(inst);
				if (!cursolid)
				{
					anticlockwise_free_angle = curangle;
					break;
				}
			}
		}
		if (i === 36)
			anticlockwise_free_angle = cr.clamp_angle(startangle + cr.PI);
		var cursolid = firstsolid;
		for (i = 1; i < 36; i++)
		{
			curangle = startangle + i * increment;
			inst.x = startx + Math.cos(curangle) * radius;
			inst.y = starty + Math.sin(curangle) * radius;
			inst.set_bbox_changed();
			if (!this.testOverlap(inst, cursolid))
			{
				cursolid = obj ? null : this.testOverlapSolid(inst);
				if (!cursolid)
				{
					clockwise_free_angle = curangle;
					break;
				}
			}
		}
		if (i === 36)
			clockwise_free_angle = cr.clamp_angle(startangle + cr.PI);
		inst.x = objx;
		inst.y = objy;
		inst.set_bbox_changed();
		if (clockwise_free_angle === anticlockwise_free_angle)
			return clockwise_free_angle;
		var half_diff = cr.angleDiff(clockwise_free_angle, anticlockwise_free_angle) / 2;
		var normal;
		if (cr.angleClockwise(clockwise_free_angle, anticlockwise_free_angle))
		{
			normal = cr.clamp_angle(anticlockwise_free_angle + half_diff + cr.PI);
		}
		else
		{
			normal = cr.clamp_angle(clockwise_free_angle + half_diff);
		}
;
		var vx = Math.cos(startangle);
		var vy = Math.sin(startangle);
		var nx = Math.cos(normal);
		var ny = Math.sin(normal);
		var v_dot_n = vx * nx + vy * ny;
		var rx = vx - 2 * v_dot_n * nx;
		var ry = vy - 2 * v_dot_n * ny;
		return cr.angleTo(0, 0, rx, ry);
	};
	var triggerSheetStack = [];
	var triggerSheetIndex = -1;
	Runtime.prototype.trigger = function (method, inst, value /* for fast triggers */)
	{
;
		if (!this.running_layout)
			return false;
		var sheet = this.running_layout.event_sheet;
		if (!sheet)
			return false;     // no event sheet active; nothing to trigger
		triggerSheetIndex++;
		if (triggerSheetIndex === triggerSheetStack.length)
			triggerSheetStack.push(new cr.ObjectSet());
		else
			triggerSheetStack[triggerSheetIndex].clear();
        var ret = this.triggerOnSheet(method, inst, sheet, value);
		triggerSheetIndex--;
		return ret;
    };
    Runtime.prototype.triggerOnSheet = function (method, inst, sheet, value)
    {
		var alreadyTriggeredSheets = triggerSheetStack[triggerSheetIndex];
        if (alreadyTriggeredSheets.contains(sheet))
            return false;
        alreadyTriggeredSheets.add(sheet);
        var includes = sheet.includes.valuesRef();
        var ret = false;
		var i, leni, r;
        for (i = 0, leni = includes.length; i < leni; i++)
        {
			if (includes[i].isActive())
			{
				r = this.triggerOnSheet(method, inst, includes[i].include_sheet, value);
				ret = ret || r;
			}
        }
		if (!inst)
		{
			r = this.triggerOnSheetForTypeName(method, inst, "system", sheet, value);
			ret = ret || r;
		}
		else
		{
			r = this.triggerOnSheetForTypeName(method, inst, inst.type.name, sheet, value);
			ret = ret || r;
			for (i = 0, leni = inst.type.families.length; i < leni; i++)
			{
				r = this.triggerOnSheetForTypeName(method, inst, inst.type.families[i].name, sheet, value);
				ret = ret || r;
			}
		}
		return ret;             // true if anything got triggered
	};
	Runtime.prototype.triggerOnSheetForTypeName = function (method, inst, type_name, sheet, value)
	{
		var i, leni;
		var ret = false, ret2 = false;
		var trig, index;
		var fasttrigger = (typeof value !== "undefined");
		var triggers = (fasttrigger ? sheet.fasttriggers : sheet.triggers);
		var obj_entry = triggers[type_name];
		if (!obj_entry)
			return ret;
		var triggers_list = null;
		for (i = 0, leni = obj_entry.length; i < leni; i++)
		{
			if (obj_entry[i].method == method)
			{
				triggers_list = obj_entry[i].evs;
				break;
			}
		}
		if (!triggers_list)
			return ret;
		var triggers_to_fire;
		if (fasttrigger)
		{
			triggers_to_fire = triggers_list[value];
		}
		else
		{
			triggers_to_fire = triggers_list;
		}
		if (!triggers_to_fire)
			return null;
		for (i = 0, leni = triggers_to_fire.length; i < leni; i++)
		{
			trig = triggers_to_fire[i][0];
			index = triggers_to_fire[i][1];
			ret2 = this.executeSingleTrigger(inst, type_name, trig, index);
			ret = ret || ret2;
		}
		return ret;
	};
	Runtime.prototype.executeSingleTrigger = function (inst, type_name, trig, index)
	{
		var i, leni;
		var ret = false;
		this.trigger_depth++;
		var current_event = this.getCurrentEventStack().current_event;
		if (current_event)
			this.pushCleanSol(current_event.solModifiersIncludingParents);
		var isrecursive = (this.trigger_depth > 1);		// calling trigger from inside another trigger
		this.pushCleanSol(trig.solModifiersIncludingParents);
		if (isrecursive)
			this.pushLocalVarStack();
		var event_stack = this.pushEventStack(trig);
		event_stack.current_event = trig;
		if (inst)
		{
			var sol = this.types[type_name].getCurrentSol();
			sol.select_all = false;
			sol.instances.length = 1;
			sol.instances[0] = inst;
			this.types[type_name].applySolToContainer();
		}
		var ok_to_run = true;
		if (trig.parent)
		{
			var temp_parents_arr = event_stack.temp_parents_arr;
			var cur_parent = trig.parent;
			while (cur_parent)
			{
				temp_parents_arr.push(cur_parent);
				cur_parent = cur_parent.parent;
			}
			temp_parents_arr.reverse();
			for (i = 0, leni = temp_parents_arr.length; i < leni; i++)
			{
				if (!temp_parents_arr[i].run_pretrigger())   // parent event failed
				{
					ok_to_run = false;
					break;
				}
			}
		}
		if (ok_to_run)
		{
			this.execcount++;
			if (trig.orblock)
				trig.run_orblocktrigger(index);
			else
				trig.run();
			ret = ret || event_stack.last_event_true;
		}
		this.popEventStack();
		if (isrecursive)
			this.popLocalVarStack();
		this.popSol(trig.solModifiersIncludingParents);
		if (current_event)
			this.popSol(current_event.solModifiersIncludingParents);
		if (this.isInOnDestroy === 0 && triggerSheetIndex === 0 && !this.isRunningEvents && (!this.deathRow.isEmpty() || this.createRow.length))
		{
			this.ClearDeathRow();
		}
		this.trigger_depth--;
		return ret;
	};
	Runtime.prototype.getCurrentCondition = function ()
	{
		var evinfo = this.getCurrentEventStack();
		return evinfo.current_event.conditions[evinfo.cndindex];
	};
	Runtime.prototype.getCurrentAction = function ()
	{
		var evinfo = this.getCurrentEventStack();
		return evinfo.current_event.actions[evinfo.actindex];
	};
	Runtime.prototype.pushLocalVarStack = function ()
	{
		this.localvar_stack_index++;
		if (this.localvar_stack_index >= this.localvar_stack.length)
			this.localvar_stack.push([]);
	};
	Runtime.prototype.popLocalVarStack = function ()
	{
;
		this.localvar_stack_index--;
	};
	Runtime.prototype.getCurrentLocalVarStack = function ()
	{
		return this.localvar_stack[this.localvar_stack_index];
	};
	Runtime.prototype.pushEventStack = function (cur_event)
	{
		this.event_stack_index++;
		if (this.event_stack_index >= this.event_stack.length)
			this.event_stack.push(new cr.eventStackFrame());
		var ret = this.getCurrentEventStack();
		ret.reset(cur_event);
		return ret;
	};
	Runtime.prototype.popEventStack = function ()
	{
;
		this.event_stack_index--;
	};
	Runtime.prototype.getCurrentEventStack = function ()
	{
		return this.event_stack[this.event_stack_index];
	};
	Runtime.prototype.pushLoopStack = function (name_)
	{
		this.loop_stack_index++;
		if (this.loop_stack_index >= this.loop_stack.length)
		{
			this.loop_stack.push(cr.seal({ name: name_, index: 0, stopped: false }));
		}
		var ret = this.getCurrentLoop();
		ret.name = name_;
		ret.index = 0;
		ret.stopped = false;
		return ret;
	};
	Runtime.prototype.popLoopStack = function ()
	{
;
		this.loop_stack_index--;
	};
	Runtime.prototype.getCurrentLoop = function ()
	{
		return this.loop_stack[this.loop_stack_index];
	};
	Runtime.prototype.getEventVariableByName = function (name, scope)
	{
		var i, leni, j, lenj, sheet, e;
		while (scope)
		{
			for (i = 0, leni = scope.subevents.length; i < leni; i++)
			{
				e = scope.subevents[i];
				if (e instanceof cr.eventvariable && cr.equals_nocase(name, e.name))
					return e;
			}
			scope = scope.parent;
		}
		for (i = 0, leni = this.eventsheets_by_index.length; i < leni; i++)
		{
			sheet = this.eventsheets_by_index[i];
			for (j = 0, lenj = sheet.events.length; j < lenj; j++)
			{
				e = sheet.events[j];
				if (e instanceof cr.eventvariable && cr.equals_nocase(name, e.name))
					return e;
			}
		}
		return null;
	};
	Runtime.prototype.getLayoutBySid = function (sid_)
	{
		var i, len;
		for (i = 0, len = this.layouts_by_index.length; i < len; i++)
		{
			if (this.layouts_by_index[i].sid === sid_)
				return this.layouts_by_index[i];
		}
		return null;
	};
	Runtime.prototype.getObjectTypeBySid = function (sid_)
	{
		var i, len;
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			if (this.types_by_index[i].sid === sid_)
				return this.types_by_index[i];
		}
		return null;
	};
	Runtime.prototype.getGroupBySid = function (sid_)
	{
		var i, len;
		for (i = 0, len = this.allGroups.length; i < len; i++)
		{
			if (this.allGroups[i].sid === sid_)
				return this.allGroups[i];
		}
		return null;
	};
	function makeSaveDb(e)
	{
		var db = e.target.result;
		db.createObjectStore("saves", { keyPath: "slot" });
	};
	function IndexedDB_WriteSlot(slot_, data_, oncomplete_, onerror_)
	{
		var request = indexedDB.open("_C2SaveStates");
		request.onupgradeneeded = makeSaveDb;
		request.onerror = onerror_;
		request.onsuccess = function (e)
		{
			var db = e.target.result;
			db.onerror = onerror_;
			var transaction = db.transaction(["saves"], "readwrite");
			var objectStore = transaction.objectStore("saves");
			var putReq = objectStore.put({"slot": slot_, "data": data_ });
			putReq.onsuccess = oncomplete_;
		};
	};
	function IndexedDB_ReadSlot(slot_, oncomplete_, onerror_)
	{
		var request = indexedDB.open("_C2SaveStates");
		request.onupgradeneeded = makeSaveDb;
		request.onerror = onerror_;
		request.onsuccess = function (e)
		{
			var db = e.target.result;
			db.onerror = onerror_;
			var transaction = db.transaction(["saves"]);
			var objectStore = transaction.objectStore("saves");
			var readReq = objectStore.get(slot_);
			readReq.onsuccess = function (e)
			{
				if (readReq.result)
					oncomplete_(readReq.result["data"]);
				else
					oncomplete_(null);
			};
		};
	};
	Runtime.prototype.signalContinuousPreview = function ()
	{
		this.signalledContinuousPreview = true;
	};
	function doContinuousPreviewReload()
	{
		cr.logexport("Reloading for continuous preview");
		if (!!window["c2cocoonjs"])
		{
			CocoonJS["App"]["reload"]();
		}
		else
		{
			if (window.location.search.indexOf("continuous") > -1)
				window.location.reload(true);
			else
				window.location = window.location + "?continuous";
		}
	};
	Runtime.prototype.handleSaveLoad = function ()
	{
		var self = this;
		var savingToSlot = this.saveToSlot;
		var savingJson = this.lastSaveJson;
		var loadingFromSlot = this.loadFromSlot;
		var continuous = false;
		if (this.signalledContinuousPreview)
		{
			continuous = true;
			savingToSlot = "__c2_continuouspreview";
			this.signalledContinuousPreview = false;
		}
		if (savingToSlot.length)
		{
			this.ClearDeathRow();
			savingJson = this.saveToJSONString();
			if (window.indexedDB && !this.isCocoonJs)
			{
				IndexedDB_WriteSlot(savingToSlot, savingJson, function ()
				{
					cr.logexport("Saved state to IndexedDB storage (" + savingJson.length + " bytes)");
					self.lastSaveJson = savingJson;
					self.trigger(cr.system_object.prototype.cnds.OnSaveComplete, null);
					self.lastSaveJson = "";
					if (continuous)
						doContinuousPreviewReload();
				}, function (e)
				{
					try {
						localStorage.setItem("__c2save_" + savingToSlot, savingJson);
						cr.logexport("Saved state to WebStorage (" + savingJson.length + " bytes)");
						self.lastSaveJson = savingJson;
						self.trigger(cr.system_object.prototype.cnds.OnSaveComplete, null);
						self.lastSaveJson = "";
						if (continuous)
							doContinuousPreviewReload();
					}
					catch (f)
					{
						cr.logexport("Failed to save game state: " + e + "; " + f);
					}
				});
			}
			else
			{
				try {
					localStorage.setItem("__c2save_" + savingToSlot, savingJson);
					cr.logexport("Saved state to WebStorage (" + savingJson.length + " bytes)");
					self.lastSaveJson = savingJson;
					this.trigger(cr.system_object.prototype.cnds.OnSaveComplete, null);
					self.lastSaveJson = "";
					if (continuous)
						doContinuousPreviewReload();
				}
				catch (e)
				{
					cr.logexport("Error saving to WebStorage: " + e);
				}
			}
			this.saveToSlot = "";
			this.loadFromSlot = "";
			this.loadFromJson = "";
		}
		if (loadingFromSlot.length)
		{
			if (window.indexedDB && !this.isCocoonJs)
			{
				IndexedDB_ReadSlot(loadingFromSlot, function (result_)
				{
					if (result_)
					{
						self.loadFromJson = result_;
						cr.logexport("Loaded state from IndexedDB storage (" + self.loadFromJson.length + " bytes)");
					}
					else
					{
						self.loadFromJson = localStorage.getItem("__c2save_" + loadingFromSlot) || "";
						cr.logexport("Loaded state from WebStorage (" + self.loadFromJson.length + " bytes)");
					}
					self.suspendDrawing = false;
					if (!self.loadFromJson.length)
						self.trigger(cr.system_object.prototype.cnds.OnLoadFailed, null);
				}, function (e)
				{
					self.loadFromJson = localStorage.getItem("__c2save_" + loadingFromSlot) || "";
					cr.logexport("Loaded state from WebStorage (" + self.loadFromJson.length + " bytes)");
					self.suspendDrawing = false;
					if (!self.loadFromJson.length)
						self.trigger(cr.system_object.prototype.cnds.OnLoadFailed, null);
				});
			}
			else
			{
				this.loadFromJson = localStorage.getItem("__c2save_" + loadingFromSlot) || "";
				cr.logexport("Loaded state from WebStorage (" + this.loadFromJson.length + " bytes)");
				this.suspendDrawing = false;
				if (!self.loadFromJson.length)
					self.trigger(cr.system_object.prototype.cnds.OnLoadFailed, null);
			}
			this.loadFromSlot = "";
			this.saveToSlot = "";
		}
		if (this.loadFromJson.length)
		{
			this.ClearDeathRow();
			this.loadFromJSONString(this.loadFromJson);
			this.lastSaveJson = this.loadFromJson;
			this.trigger(cr.system_object.prototype.cnds.OnLoadComplete, null);
			this.lastSaveJson = "";
			this.loadFromJson = "";
		}
	};
	function CopyExtraObject(extra)
	{
		var p, ret = {};
		for (p in extra)
		{
			if (extra.hasOwnProperty(p))
			{
				if (extra[p] instanceof cr.ObjectSet)
					continue;
				if (typeof extra[p].c2userdata !== "undefined")
					continue;
				ret[p] = extra[p];
			}
		}
		return ret;
	};
	Runtime.prototype.saveToJSONString = function()
	{
		var i, len, j, lenj, type, layout, typeobj, g, c, a, v, p;
		var o = {
			"c2save":				true,
			"version":				1,
			"rt": {
				"time":				this.kahanTime.sum,
				"timescale":		this.timescale,
				"tickcount":		this.tickcount,
				"execcount":		this.execcount,
				"next_uid":			this.next_uid,
				"running_layout":	this.running_layout.sid,
				"start_time_offset": (Date.now() - this.start_time)
			},
			"types": {},
			"layouts": {},
			"events": {
				"groups": {},
				"cnds": {},
				"acts": {},
				"vars": {}
			}
		};
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			type = this.types_by_index[i];
			if (type.is_family || this.typeHasNoSaveBehavior(type))
				continue;
			typeobj = {
				"instances": []
			};
			if (cr.hasAnyOwnProperty(type.extra))
				typeobj["ex"] = CopyExtraObject(type.extra);
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				typeobj["instances"].push(this.saveInstanceToJSON(type.instances[j]));
			}
			o["types"][type.sid.toString()] = typeobj;
		}
		for (i = 0, len = this.layouts_by_index.length; i < len; i++)
		{
			layout = this.layouts_by_index[i];
			o["layouts"][layout.sid.toString()] = layout.saveToJSON();
		}
		var ogroups = o["events"]["groups"];
		for (i = 0, len = this.allGroups.length; i < len; i++)
		{
			g = this.allGroups[i];
			ogroups[g.sid.toString()] = !!this.activeGroups[g.group_name];
		}
		var ocnds = o["events"]["cnds"];
		for (p in this.cndsBySid)
		{
			if (this.cndsBySid.hasOwnProperty(p))
			{
				c = this.cndsBySid[p];
				if (cr.hasAnyOwnProperty(c.extra))
					ocnds[p] = { "ex": CopyExtraObject(c.extra) };
			}
		}
		var oacts = o["events"]["acts"];
		for (p in this.actsBySid)
		{
			if (this.actsBySid.hasOwnProperty(p))
			{
				a = this.actsBySid[p];
				if (cr.hasAnyOwnProperty(a.extra))
					oacts[p] = { "ex": a.extra };
			}
		}
		var ovars = o["events"]["vars"];
		for (p in this.varsBySid)
		{
			if (this.varsBySid.hasOwnProperty(p))
			{
				v = this.varsBySid[p];
				if (!v.is_constant && (!v.parent || v.is_static))
					ovars[p] = v.data;
			}
		}
		o["system"] = this.system.saveToJSON();
		return JSON.stringify(o);
	};
	Runtime.prototype.refreshUidMap = function ()
	{
		var i, len, type, j, lenj, inst;
		this.objectsByUid = {};
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			type = this.types_by_index[i];
			if (type.is_family)
				continue;
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				inst = type.instances[j];
				this.objectsByUid[inst.uid.toString()] = inst;
			}
		}
	};
	Runtime.prototype.loadFromJSONString = function (str)
	{
		var o = JSON.parse(str);
		if (!o["c2save"])
			return;		// probably not a c2 save state
		if (o["version"] > 1)
			return;		// from future version of c2; assume not compatible
		var rt = o["rt"];
		this.kahanTime.reset();
		this.kahanTime.sum = rt["time"];
		this.timescale = rt["timescale"];
		this.tickcount = rt["tickcount"];
		this.execcount = rt["execcount"];
		this.start_time = Date.now() - rt["start_time_offset"];
		var layout_sid = rt["running_layout"];
		if (layout_sid !== this.running_layout.sid)
		{
			var changeToLayout = this.getLayoutBySid(layout_sid);
			if (changeToLayout)
				this.doChangeLayout(changeToLayout);
			else
				return;		// layout that was saved on has gone missing (deleted?)
		}
		this.isLoadingState = true;
		var i, len, j, lenj, k, lenk, p, type, existing_insts, load_insts, inst, binst, layout, layer, g, iid, t;
		var otypes = o["types"];
		for (p in otypes)
		{
			if (otypes.hasOwnProperty(p))
			{
				type = this.getObjectTypeBySid(parseInt(p, 10));
				if (!type || type.is_family || this.typeHasNoSaveBehavior(type))
					continue;
				if (otypes[p]["ex"])
					type.extra = otypes[p]["ex"];
				else
					cr.wipe(type.extra);
				existing_insts = type.instances;
				load_insts = otypes[p]["instances"];
				for (i = 0, len = cr.min(existing_insts.length, load_insts.length); i < len; i++)
				{
					this.loadInstanceFromJSON(existing_insts[i], load_insts[i]);
				}
				for (i = load_insts.length, len = existing_insts.length; i < len; i++)
					this.DestroyInstance(existing_insts[i]);
				for (i = existing_insts.length, len = load_insts.length; i < len; i++)
				{
					layer = null;
					if (type.plugin.is_world)
					{
						layer = this.running_layout.getLayerBySid(load_insts[i]["w"]["l"]);
						if (!layer)
							continue;
					}
					inst = this.createInstanceFromInit(type.default_instance, layer, false, 0, 0, true);
					this.loadInstanceFromJSON(inst, load_insts[i]);
				}
				type.stale_iids = true;
			}
		}
		this.ClearDeathRow();
		this.refreshUidMap();
		var olayouts = o["layouts"];
		for (p in olayouts)
		{
			if (olayouts.hasOwnProperty(p))
			{
				layout = this.getLayoutBySid(parseInt(p, 10));
				if (!layout)
					continue;		// must've gone missing
				layout.loadFromJSON(olayouts[p]);
			}
		}
		var ogroups = o["events"]["groups"];
		for (p in ogroups)
		{
			if (ogroups.hasOwnProperty(p))
			{
				g = this.getGroupBySid(parseInt(p, 10));
				if (g)
					this.activeGroups[g.group_name] = ogroups[p];
			}
		}
		var ocnds = o["events"]["cnds"];
		for (p in ocnds)
		{
			if (ocnds.hasOwnProperty(p) && this.cndsBySid.hasOwnProperty(p))
			{
				this.cndsBySid[p].extra = ocnds[p]["ex"];
			}
		}
		var oacts = o["events"]["acts"];
		for (p in oacts)
		{
			if (oacts.hasOwnProperty(p) && this.actsBySid.hasOwnProperty(p))
			{
				this.actsBySid[p].extra = oacts[p]["ex"];
			}
		}
		var ovars = o["events"]["vars"];
		for (p in ovars)
		{
			if (ovars.hasOwnProperty(p) && this.varsBySid.hasOwnProperty(p))
			{
				this.varsBySid[p].data = ovars[p];
			}
		}
		this.next_uid = rt["next_uid"];
		this.isLoadingState = false;
		this.system.loadFromJSON(o["system"]);
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			type = this.types_by_index[i];
			if (type.is_family)
				continue;
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				inst = type.instances[j];
				if (type.is_contained)
				{
					iid = inst.get_iid();
					inst.siblings.length = 0;
					for (k = 0, lenk = type.container.length; k < lenk; k++)
					{
						t = type.container[k];
						if (type === t)
							continue;
;
						inst.siblings.push(t.instances[iid]);
					}
				}
				if (inst.afterLoad)
					inst.afterLoad();
				if (inst.behavior_insts)
				{
					for (k = 0, lenk = inst.behavior_insts.length; k < lenk; k++)
					{
						binst = inst.behavior_insts[k];
						if (binst.afterLoad)
							binst.afterLoad();
					}
				}
			}
		}
		this.redraw = true;
	};
	Runtime.prototype.saveInstanceToJSON = function(inst)
	{
		var i, len, world, behinst, et;
		var type = inst.type;
		var plugin = type.plugin;
		var o = {
			"uid": inst.uid
		};
		if (cr.hasAnyOwnProperty(inst.extra))
			o["ex"] = CopyExtraObject(inst.extra);
		if (inst.instance_vars && inst.instance_vars.length)
		{
			o["ivs"] = {};
			for (i = 0, len = inst.instance_vars.length; i < len; i++)
			{
				o["ivs"][inst.type.instvar_sids[i].toString()] = inst.instance_vars[i];
			}
		}
		if (plugin.is_world)
		{
			world = {
				"x": inst.x,
				"y": inst.y,
				"w": inst.width,
				"h": inst.height,
				"l": inst.layer.sid,
				"zi": inst.get_zindex()
			};
			if (inst.angle !== 0)
				world["a"] = inst.angle;
			if (inst.opacity !== 1)
				world["o"] = inst.opacity;
			if (inst.hotspotX !== 0.5)
				world["hX"] = inst.hotspotX;
			if (inst.hotspotY !== 0.5)
				world["hY"] = inst.hotspotY;
			if (inst.blend_mode !== 0)
				world["bm"] = inst.blend_mode;
			if (!inst.visible)
				world["v"] = inst.visible;
			if (!inst.collisionsEnabled)
				world["ce"] = inst.collisionsEnabled;
			if (inst.my_timescale !== -1)
				world["mts"] = inst.my_timescale;
			if (type.effect_types.length)
			{
				world["fx"] = [];
				for (i = 0, len = type.effect_types.length; i < len; i++)
				{
					et = type.effect_types[i];
					world["fx"].push({"name": et.name,
									  "active": inst.active_effect_flags[et.index],
									  "params": inst.effect_params[et.index] });
				}
			}
			o["w"] = world;
		}
		if (inst.behavior_insts && inst.behavior_insts.length)
		{
			o["behs"] = {};
			for (i = 0, len = inst.behavior_insts.length; i < len; i++)
			{
				behinst = inst.behavior_insts[i];
				if (behinst.saveToJSON)
					o["behs"][behinst.type.sid.toString()] = behinst.saveToJSON();
			}
		}
		if (inst.saveToJSON)
			o["data"] = inst.saveToJSON();
		return o;
	};
	Runtime.prototype.getInstanceVarIndexBySid = function (type, sid_)
	{
		var i, len;
		for (i = 0, len = type.instvar_sids.length; i < len; i++)
		{
			if (type.instvar_sids[i] === sid_)
				return i;
		}
		return -1;
	};
	Runtime.prototype.getBehaviorIndexBySid = function (inst, sid_)
	{
		var i, len;
		for (i = 0, len = inst.behavior_insts.length; i < len; i++)
		{
			if (inst.behavior_insts[i].type.sid === sid_)
				return i;
		}
		return -1;
	};
	Runtime.prototype.loadInstanceFromJSON = function(inst, o)
	{
		var p, i, len, iv, oivs, world, fxindex, obehs, behindex;
		var oldlayer;
		var type = inst.type;
		var plugin = type.plugin;
		inst.uid = o["uid"];
		if (o["ex"])
			inst.extra = o["ex"];
		else
			cr.wipe(inst.extra);
		oivs = o["ivs"];
		if (oivs)
		{
			for (p in oivs)
			{
				if (oivs.hasOwnProperty(p))
				{
					iv = this.getInstanceVarIndexBySid(type, parseInt(p, 10));
					if (iv < 0 || iv >= inst.instance_vars.length)
						continue;		// must've gone missing
					inst.instance_vars[iv] = oivs[p];
				}
			}
		}
		if (plugin.is_world)
		{
			world = o["w"];
			if (inst.layer.sid !== world["l"])
			{
				oldlayer = inst.layer;
				inst.layer = this.running_layout.getLayerBySid(world["l"]);
				if (inst.layer)
				{
					inst.layer.instances.push(inst);
					inst.layer.zindices_stale = true;
					cr.arrayFindRemove(oldlayer.instances, inst);
					oldlayer.zindices_stale = true;
				}
				else
				{
					inst.layer = oldlayer;
					this.DestroyInstance(inst);
				}
			}
			inst.x = world["x"];
			inst.y = world["y"];
			inst.width = world["w"];
			inst.height = world["h"];
			inst.zindex = world["zi"];
			inst.angle = world.hasOwnProperty("a") ? world["a"] : 0;
			inst.opacity = world.hasOwnProperty("o") ? world["o"] : 1;
			inst.hotspotX = world.hasOwnProperty("hX") ? world["hX"] : 0.5;
			inst.hotspotY = world.hasOwnProperty("hY") ? world["hY"] : 0.5;
			inst.visible = world.hasOwnProperty("v") ? world["v"] : true;
			inst.collisionsEnabled = world.hasOwnProperty("ce") ? world["ce"] : true;
			inst.my_timescale = world.hasOwnProperty("mts") ? world["mts"] : -1;
			inst.blend_mode = world.hasOwnProperty("bm") ? world["bm"] : 0;;
			inst.compositeOp = cr.effectToCompositeOp(inst.blend_mode);
			if (this.gl)
				cr.setGLBlend(inst, inst.blend_mode, this.gl);
			inst.set_bbox_changed();
			if (world.hasOwnProperty("fx"))
			{
				for (i = 0, len = world["fx"].length; i < len; i++)
				{
					fxindex = type.getEffectIndexByName(world["fx"][i]["name"]);
					if (fxindex < 0)
						continue;		// must've gone missing
					inst.active_effect_flags[fxindex] = world["fx"][i]["active"];
					inst.effect_params[fxindex] = world["fx"][i]["params"];
				}
			}
			inst.updateActiveEffects();
		}
		obehs = o["behs"];
		if (obehs)
		{
			for (p in obehs)
			{
				if (obehs.hasOwnProperty(p))
				{
					behindex = this.getBehaviorIndexBySid(inst, parseInt(p, 10));
					if (behindex < 0)
						continue;		// must've gone missing
					inst.behavior_insts[behindex].loadFromJSON(obehs[p]);
				}
			}
		}
		if (o["data"])
			inst.loadFromJSON(o["data"]);
	};
	cr.runtime = Runtime;
	cr.createRuntime = function (canvasid)
	{
		return new Runtime(document.getElementById(canvasid));
	};
	cr.createDCRuntime = function (w, h)
	{
		return new Runtime({ "dc": true, "width": w, "height": h });
	};
	window["cr_createRuntime"] = cr.createRuntime;
	window["bmSTOP"] = function(){dontUpdate = true;};
	window["bmRESUME"] = function(){dontUpdate = false;};
	window["cr_createDCRuntime"] = cr.createDCRuntime;
	window["createCocoonJSRuntime"] = function ()
	{
		window["c2cocoonjs"] = true;
		var canvas = document.createElement("screencanvas") || document.createElement("canvas");
		document.body.appendChild(canvas);
		var rt = new Runtime(canvas);
		window["c2runtime"] = rt;
		window.addEventListener("orientationchange", function () {
			window["c2runtime"]["setSize"](window.innerWidth, window.innerHeight);
		});
		window["c2runtime"]["setSize"](window.innerWidth, window.innerHeight);
		return rt;
	};
}());
window["cr_getC2Runtime"] = function()
{
	var canvas = document.getElementById("c2canvas");
	if (canvas)
		return canvas["c2runtime"];
	else if (window["c2runtime"])
		return window["c2runtime"];
	else
		return null;
}
window["cr_sizeCanvas"] = function(w, h)
{
	if (w === 0 || h === 0)
		return;
	var runtime = window["cr_getC2Runtime"]();
	if (runtime)
		runtime["setSize"](w, h);
}
window["cr_setSuspended"] = function(s)
{
	var runtime = window["cr_getC2Runtime"]();
	if (runtime)
		runtime["setSuspended"](s);
}
;
(function()
{
	function Layout(runtime, m)
	{
		this.runtime = runtime;
		this.event_sheet = null;
		this.scrollX = (this.runtime.original_width / 2);
		this.scrollY = (this.runtime.original_height / 2);
		this.scale = 1.0;
		this.angle = 0;
		this.first_visit = true;
		this.name = m[0];
		this.width = m[1];
		this.height = m[2];
		this.unbounded_scrolling = m[3];
		this.sheetname = m[4];
		this.sid = m[5];
		var lm = m[6];
		var i, len;
		this.layers = [];
		this.initial_types = [];
		for (i = 0, len = lm.length; i < len; i++)
		{
			var layer = new cr.layer(this, lm[i]);
			layer.number = i;
			cr.seal(layer);
			this.layers.push(layer);
		}
		var im = m[7];
		this.initial_nonworld = [];
		for (i = 0, len = im.length; i < len; i++)
		{
			var inst = im[i];
			var type = this.runtime.types_by_index[inst[1]];
;
			if (!type.default_instance)
				type.default_instance = inst;
			this.initial_nonworld.push(inst);
			if (this.initial_types.indexOf(type) === -1)
				this.initial_types.push(type);
		}
		this.effect_types = [];
		this.active_effect_types = [];
		this.effect_params = [];
		for (i = 0, len = m[8].length; i < len; i++)
		{
			this.effect_types.push({
				id: m[8][i][0],
				name: m[8][i][1],
				shaderindex: -1,
				active: true,
				index: i
			});
			this.effect_params.push(m[8][i][2].slice(0));
		}
		this.updateActiveEffects();
		this.rcTex = new cr.rect(0, 0, 1, 1);
		this.rcTex2 = new cr.rect(0, 0, 1, 1);
		this.persist_data = {};
	};
	Layout.prototype.saveObjectToPersist = function (inst)
	{
		var sidStr = inst.type.sid.toString();
		if (!this.persist_data.hasOwnProperty(sidStr))
			this.persist_data[sidStr] = [];
		var type_persist = this.persist_data[sidStr];
		type_persist.push(this.runtime.saveInstanceToJSON(inst));
	};
	Layout.prototype.hasOpaqueBottomLayer = function ()
	{
		var layer = this.layers[0];
		return !layer.transparent && layer.opacity === 1.0 && !layer.forceOwnTexture && layer.visible;
	};
	Layout.prototype.updateActiveEffects = function ()
	{
		this.active_effect_types.length = 0;
		var i, len, et;
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			et = this.effect_types[i];
			if (et.active)
				this.active_effect_types.push(et);
		}
	};
	Layout.prototype.getEffectByName = function (name_)
	{
		var i, len, et;
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			et = this.effect_types[i];
			if (et.name === name_)
				return et;
		}
		return null;
	};
	var created_instances = [];
	Layout.prototype.startRunning = function ()
	{
		if (this.sheetname)
		{
			this.event_sheet = this.runtime.eventsheets[this.sheetname];
;
		}
		this.runtime.running_layout = this;
		this.scrollX = (this.runtime.original_width / 2);
		this.scrollY = (this.runtime.original_height / 2);
		var i, k, len, lenk, type, type_instances, inst, iid, t, s, p, q, type_data, layer;
		for (i = 0, len = this.runtime.types_by_index.length; i < len; i++)
		{
			type = this.runtime.types_by_index[i];
			if (type.is_family)
				continue;		// instances are only transferred for their real type
			type_instances = type.instances;
			for (k = 0, lenk = type_instances.length; k < lenk; k++)
			{
				inst = type_instances[k];
				if (inst.layer)
				{
					var num = inst.layer.number;
					if (num >= this.layers.length)
						num = this.layers.length - 1;
					inst.layer = this.layers[num];
					inst.layer.instances.push(inst);
					inst.layer.zindices_stale = true;
				}
			}
		}
		var layer;
		created_instances.length = 0;
		this.boundScrolling();
		for (i = 0, len = this.layers.length; i < len; i++)
		{
			layer = this.layers[i];
			layer.createInitialInstances();		// fills created_instances
			layer.disableAngle = true;
			var px = layer.canvasToLayer(0, 0, true);
			var py = layer.canvasToLayer(0, 0, false);
			layer.disableAngle = false;
			if (this.runtime.pixel_rounding)
			{
				px = (px + 0.5) | 0;
				py = (py + 0.5) | 0;
			}
			layer.rotateViewport(px, py, null);
		}
		var uids_changed = false;
		if (!this.first_visit)
		{
			for (p in this.persist_data)
			{
				if (this.persist_data.hasOwnProperty(p))
				{
					type = this.runtime.getObjectTypeBySid(parseInt(p, 10));
					if (!type || type.is_family || !this.runtime.typeHasPersistBehavior(type))
						continue;
					type_data = this.persist_data[p];
					for (i = 0, len = type_data.length; i < len; i++)
					{
						layer = null;
						if (type.plugin.is_world)
						{
							layer = this.getLayerBySid(type_data[i]["w"]["l"]);
							if (!layer)
								continue;
						}
						inst = this.runtime.createInstanceFromInit(type.default_instance, layer, false, 0, 0, true);
						this.runtime.loadInstanceFromJSON(inst, type_data[i]);
						uids_changed = true;
						created_instances.push(inst);
					}
					type_data.length = 0;
				}
			}
			for (i = 0, len = this.layers.length; i < len; i++)
			{
				this.layers[i].instances.sort(sortInstanceByZIndex);
				this.layers[i].zindices_stale = true;		// in case of duplicates/holes
			}
		}
		if (uids_changed)
		{
			this.runtime.ClearDeathRow();
			this.runtime.refreshUidMap();
		}
		for (i = 0; i < created_instances.length; i++)
		{
			inst = created_instances[i];
			if (!inst.type.is_contained)
				continue;
			iid = inst.get_iid();
			for (k = 0, lenk = inst.type.container.length; k < lenk; k++)
			{
				t = inst.type.container[k];
				if (inst.type === t)
					continue;
				if (t.instances.length > iid)
					inst.siblings.push(t.instances[iid]);
				else
				{
					if (!t.default_instance)
					{
					}
					else
					{
						s = this.runtime.createInstanceFromInit(t.default_instance, inst.layer, true, inst.x, inst.y, true);
						this.runtime.ClearDeathRow();
						t.updateIIDs();
						inst.siblings.push(s);
						created_instances.push(s);		// come back around and link up its own instances too
					}
				}
			}
		}
		for (i = 0, len = this.initial_nonworld.length; i < len; i++)
		{
			inst = this.runtime.createInstanceFromInit(this.initial_nonworld[i], null, true);
;
		}
		this.runtime.changelayout = null;
		this.runtime.ClearDeathRow();
		if (this.runtime.ctx && !this.runtime.isDomFree)
		{
			for (i = 0, len = this.runtime.types_by_index.length; i < len; i++)
			{
				t = this.runtime.types_by_index[i];
				if (t.is_family || !t.instances.length || !t.preloadCanvas2D)
					continue;
				t.preloadCanvas2D(this.runtime.ctx);
			}
		}
		/*
		if (this.runtime.glwrap)
		{
			console.log("Estimated VRAM at layout start: " + this.runtime.glwrap.textureCount() + " textures, approx. " + Math.round(this.runtime.glwrap.estimateVRAM() / 1024) + " kb");
		}
		*/
		for (i = 0, len = created_instances.length; i < len; i++)
		{
			inst = created_instances[i];
			this.runtime.trigger(Object.getPrototypeOf(inst.type.plugin).cnds.OnCreated, inst);
		}
		created_instances.length = 0;
		this.runtime.trigger(cr.system_object.prototype.cnds.OnLayoutStart, null);
		this.first_visit = false;
	};
	Layout.prototype.createGlobalNonWorlds = function ()
	{
		var i, k, len, initial_inst, inst, type;
		for (i = 0, k = 0, len = this.initial_nonworld.length; i < len; i++)
		{
			initial_inst = this.initial_nonworld[i];
			type = this.runtime.types_by_index[initial_inst[1]];
			if (type.global)
				inst = this.runtime.createInstanceFromInit(initial_inst, null, true);
			else
			{
				this.initial_nonworld[k] = initial_inst;
				k++;
			}
		}
		this.initial_nonworld.length = k;
	};
	Layout.prototype.stopRunning = function ()
	{
;
		/*
		if (this.runtime.glwrap)
		{
			console.log("Estimated VRAM at layout end: " + this.runtime.glwrap.textureCount() + " textures, approx. " + Math.round(this.runtime.glwrap.estimateVRAM() / 1024) + " kb");
		}
		*/
		this.runtime.trigger(cr.system_object.prototype.cnds.OnLayoutEnd, null);
		this.runtime.system.waits.length = 0;
		var i, leni, j, lenj;
		var layer_instances, inst, type;
		for (i = 0, leni = this.layers.length; i < leni; i++)
		{
			layer_instances = this.layers[i].instances;
			for (j = 0, lenj = layer_instances.length; j < lenj; j++)
			{
				inst = layer_instances[j];
				if (!inst.type.global)
				{
					if (this.runtime.typeHasPersistBehavior(inst.type))
						this.saveObjectToPersist(inst);
					this.runtime.DestroyInstance(inst);
				}
			}
			this.runtime.ClearDeathRow();
			layer_instances.length = 0;
			this.layers[i].zindices_stale = true;
		}
		for (i = 0, leni = this.runtime.types_by_index.length; i < leni; i++)
		{
			type = this.runtime.types_by_index[i];
			if (type.global || type.plugin.is_world || type.plugin.singleglobal || type.is_family)
				continue;
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
				this.runtime.DestroyInstance(type.instances[j]);
			this.runtime.ClearDeathRow();
		}
	};
	Layout.prototype.draw = function (ctx)
	{
		ctx.globalAlpha = 1;
		ctx.globalCompositeOperation = "source-over";
		if (this.runtime.clearBackground && !this.hasOpaqueBottomLayer())
			ctx.clearRect(0, 0, this.runtime.width, this.runtime.height);
		var i, len, l;
		for (i = 0, len = this.layers.length; i < len; i++)
		{
			l = this.layers[i];
			if (l.visible && l.opacity > 0 && l.blend_mode !== 11)
				l.draw(ctx);
		}
	};
	Layout.prototype.drawGL = function (glw)
	{
		var render_to_texture = (this.active_effect_types.length > 0 || this.runtime.uses_background_blending);
		if (render_to_texture)
		{
			if (!this.runtime.layout_tex)
			{
				this.runtime.layout_tex = glw.createEmptyTexture(this.runtime.width, this.runtime.height, this.runtime.linearSampling);
			}
			if (this.runtime.layout_tex.c2width !== this.runtime.width || this.runtime.layout_tex.c2height !== this.runtime.height)
			{
				glw.deleteTexture(this.runtime.layout_tex);
				this.runtime.layout_tex = glw.createEmptyTexture(this.runtime.width, this.runtime.height, this.runtime.linearSampling);
			}
			glw.setRenderingToTexture(this.runtime.layout_tex);
		}
		if (this.runtime.clearBackground && !this.hasOpaqueBottomLayer())
			glw.clear(0, 0, 0, 0);
		var i, len;
		for (i = 0, len = this.layers.length; i < len; i++)
		{
			if (this.layers[i].visible && this.layers[i].opacity > 0)
				this.layers[i].drawGL(glw);
		}
		if (render_to_texture)
		{
			if (this.active_effect_types.length <= 1)
			{
				if (this.active_effect_types.length === 1)
				{
					var etindex = this.active_effect_types[0].index;
					glw.switchProgram(this.active_effect_types[0].shaderindex);
					glw.setProgramParameters(null,								// backTex
											 1.0 / this.runtime.width,			// pixelWidth
											 1.0 / this.runtime.height,			// pixelHeight
											 0.0, 0.0,							// destStart
											 1.0, 1.0,							// destEnd
											 this.scale,						// layerScale
											 this.effect_params[etindex]);		// fx parameters
					if (glw.programIsAnimated(this.active_effect_types[0].shaderindex))
						this.runtime.redraw = true;
				}
				else
					glw.switchProgram(0);
				glw.setRenderingToTexture(null);				// to backbuffer
				glw.setOpacity(1);
				glw.setTexture(this.runtime.layout_tex);
				glw.setAlphaBlend();
				glw.resetModelView();
				glw.updateModelView();
				var halfw = this.runtime.width / 2;
				var halfh = this.runtime.height / 2;
				glw.quad(-halfw, halfh, halfw, halfh, halfw, -halfh, -halfw, -halfh);
				glw.setTexture(null);
			}
			else
			{
				this.renderEffectChain(glw, null, null, null);
			}
		}
	};
	Layout.prototype.getRenderTarget = function()
	{
		return (this.active_effect_types.length > 0 || this.runtime.uses_background_blending) ? this.runtime.layout_tex : null;
	};
	Layout.prototype.getMinLayerScale = function ()
	{
		var m = this.layers[0].getScale();
		var i, len, l;
		for (i = 1, len = this.layers.length; i < len; i++)
		{
			l = this.layers[i];
			if (l.parallaxX === 0 && l.parallaxY === 0)
				continue;
			if (l.getScale() < m)
				m = l.getScale();
		}
		return m;
	};
	Layout.prototype.scrollToX = function (x)
	{
		if (!this.unbounded_scrolling)
		{
			var widthBoundary = (this.runtime.width * (1 / this.getMinLayerScale()) / 2);
			if (x > this.width - widthBoundary)
				x = this.width - widthBoundary;
			if (x < widthBoundary)
				x = widthBoundary;
		}
		if (this.scrollX !== x)
		{
			this.scrollX = x;
			this.runtime.redraw = true;
		}
	};
	Layout.prototype.scrollToY = function (y)
	{
		if (!this.unbounded_scrolling)
		{
			var heightBoundary = (this.runtime.height * (1 / this.getMinLayerScale()) / 2);
			if (y > this.height - heightBoundary)
				y = this.height - heightBoundary;
			if (y < heightBoundary)
				y = heightBoundary;
		}
		if (this.scrollY !== y)
		{
			this.scrollY = y;
			this.runtime.redraw = true;
		}
	};
	Layout.prototype.boundScrolling = function ()
	{
		this.scrollToX(this.scrollX);
		this.scrollToY(this.scrollY);
	};
	Layout.prototype.renderEffectChain = function (glw, layer, inst, rendertarget)
	{
		var active_effect_types = inst ?
							inst.active_effect_types :
							layer ?
								layer.active_effect_types :
								this.active_effect_types;
		var layerScale = inst ? inst.layer.getScale() :
							layer ? layer.getScale() : 1;
		var fx_tex = this.runtime.fx_tex;
		var i, len, last, temp, fx_index = 0, other_fx_index = 1;
		var y, h;
		var windowWidth = this.runtime.width;
		var windowHeight = this.runtime.height;
		var halfw = windowWidth / 2;
		var halfh = windowHeight / 2;
		var rcTex = layer ? layer.rcTex : this.rcTex;
		var rcTex2 = layer ? layer.rcTex2 : this.rcTex2;
		var screenleft = 0, clearleft = 0;
		var screentop = 0, cleartop = 0;
		var screenright = windowWidth, clearright = windowWidth;
		var screenbottom = windowHeight, clearbottom = windowHeight;
		var boxExtendHorizontal = 0;
		var boxExtendVertical = 0;
		var inst_layer_angle = inst ? inst.layer.getAngle() : 0;
		if (inst)
		{
			for (i = 0, len = active_effect_types.length; i < len; i++)
			{
				boxExtendHorizontal += glw.getProgramBoxExtendHorizontal(active_effect_types[i].shaderindex);
				boxExtendVertical += glw.getProgramBoxExtendVertical(active_effect_types[i].shaderindex);
			}
			var bbox = inst.bbox;
			screenleft = layer.layerToCanvas(bbox.left, bbox.top, true);
			screentop = layer.layerToCanvas(bbox.left, bbox.top, false);
			screenright = layer.layerToCanvas(bbox.right, bbox.bottom, true);
			screenbottom = layer.layerToCanvas(bbox.right, bbox.bottom, false);
			if (inst_layer_angle !== 0)
			{
				var screentrx = layer.layerToCanvas(bbox.right, bbox.top, true);
				var screentry = layer.layerToCanvas(bbox.right, bbox.top, false);
				var screenblx = layer.layerToCanvas(bbox.left, bbox.bottom, true);
				var screenbly = layer.layerToCanvas(bbox.left, bbox.bottom, false);
				temp = Math.min(screenleft, screenright, screentrx, screenblx);
				screenright = Math.max(screenleft, screenright, screentrx, screenblx);
				screenleft = temp;
				temp = Math.min(screentop, screenbottom, screentry, screenbly);
				screenbottom = Math.max(screentop, screenbottom, screentry, screenbly);
				screentop = temp;
			}
			screenleft -= boxExtendHorizontal;
			screentop -= boxExtendVertical;
			screenright += boxExtendHorizontal;
			screenbottom += boxExtendVertical;
			rcTex2.left = screenleft / windowWidth;
			rcTex2.top = 1 - screentop / windowHeight;
			rcTex2.right = screenright / windowWidth;
			rcTex2.bottom = 1 - screenbottom / windowHeight;
			clearleft = screenleft = Math.floor(screenleft);
			cleartop = screentop = Math.floor(screentop);
			clearright = screenright = Math.ceil(screenright);
			clearbottom = screenbottom = Math.ceil(screenbottom);
			clearleft -= boxExtendHorizontal;
			cleartop -= boxExtendVertical;
			clearright += boxExtendHorizontal;
			clearbottom += boxExtendVertical;
			if (screenleft < 0)					screenleft = 0;
			if (screentop < 0)					screentop = 0;
			if (screenright > windowWidth)		screenright = windowWidth;
			if (screenbottom > windowHeight)	screenbottom = windowHeight;
			if (clearleft < 0)					clearleft = 0;
			if (cleartop < 0)					cleartop = 0;
			if (clearright > windowWidth)		clearright = windowWidth;
			if (clearbottom > windowHeight)		clearbottom = windowHeight;
			rcTex.left = screenleft / windowWidth;
			rcTex.top = 1 - screentop / windowHeight;
			rcTex.right = screenright / windowWidth;
			rcTex.bottom = 1 - screenbottom / windowHeight;
		}
		else
		{
			rcTex.left = rcTex2.left = 0;
			rcTex.top = rcTex2.top = 0;
			rcTex.right = rcTex2.right = 1;
			rcTex.bottom = rcTex2.bottom = 1;
		}
		var pre_draw = (inst && (((inst.angle || inst_layer_angle) && glw.programUsesDest(active_effect_types[0].shaderindex)) || boxExtendHorizontal !== 0 || boxExtendVertical !== 0 || inst.opacity !== 1 || inst.type.plugin.must_predraw)) || (layer && !inst && layer.opacity !== 1);
		glw.setAlphaBlend();
		if (pre_draw)
		{
			if (!fx_tex[fx_index])
			{
				fx_tex[fx_index] = glw.createEmptyTexture(windowWidth, windowHeight, this.runtime.linearSampling);
			}
			if (fx_tex[fx_index].c2width !== windowWidth || fx_tex[fx_index].c2height !== windowHeight)
			{
				glw.deleteTexture(fx_tex[fx_index]);
				fx_tex[fx_index] = glw.createEmptyTexture(windowWidth, windowHeight, this.runtime.linearSampling);
			}
			glw.switchProgram(0);
			glw.setRenderingToTexture(fx_tex[fx_index]);
			h = clearbottom - cleartop;
			y = (windowHeight - cleartop) - h;
			glw.clearRect(clearleft, y, clearright - clearleft, h);
			if (inst)
			{
				inst.drawGL(glw);
			}
			else
			{
				glw.setTexture(this.runtime.layer_tex);
				glw.setOpacity(layer.opacity);
				glw.resetModelView();
				glw.translate(-halfw, -halfh);
				glw.updateModelView();
				glw.quadTex(screenleft, screenbottom, screenright, screenbottom, screenright, screentop, screenleft, screentop, rcTex);
			}
			rcTex2.left = rcTex2.top = 0;
			rcTex2.right = rcTex2.bottom = 1;
			if (inst)
			{
				temp = rcTex.top;
				rcTex.top = rcTex.bottom;
				rcTex.bottom = temp;
			}
			fx_index = 1;
			other_fx_index = 0;
		}
		glw.setOpacity(1);
		var last = active_effect_types.length - 1;
		var post_draw = glw.programUsesCrossSampling(active_effect_types[last].shaderindex);
		var etindex = 0;
		for (i = 0, len = active_effect_types.length; i < len; i++)
		{
			if (!fx_tex[fx_index])
			{
				fx_tex[fx_index] = glw.createEmptyTexture(windowWidth, windowHeight, this.runtime.linearSampling);
			}
			if (fx_tex[fx_index].c2width !== windowWidth || fx_tex[fx_index].c2height !== windowHeight)
			{
				glw.deleteTexture(fx_tex[fx_index]);
				fx_tex[fx_index] = glw.createEmptyTexture(windowWidth, windowHeight, this.runtime.linearSampling);
			}
			glw.switchProgram(active_effect_types[i].shaderindex);
			etindex = active_effect_types[i].index;
			if (glw.programIsAnimated(active_effect_types[i].shaderindex))
				this.runtime.redraw = true;
			if (i == 0 && !pre_draw)
			{
				glw.setRenderingToTexture(fx_tex[fx_index]);
				h = clearbottom - cleartop;
				y = (windowHeight - cleartop) - h;
				glw.clearRect(clearleft, y, clearright - clearleft, h);
				if (inst)
				{
					glw.setProgramParameters(rendertarget,					// backTex
											 1.0 / inst.width,				// pixelWidth
											 1.0 / inst.height,				// pixelHeight
											 rcTex2.left, rcTex2.top,		// destStart
											 rcTex2.right, rcTex2.bottom,	// destEnd
											 layerScale,
											 inst.effect_params[etindex]);	// fx params
					inst.drawGL(glw);
				}
				else
				{
					glw.setProgramParameters(rendertarget,					// backTex
											 1.0 / windowWidth,				// pixelWidth
											 1.0 / windowHeight,			// pixelHeight
											 0.0, 0.0,						// destStart
											 1.0, 1.0,						// destEnd
											 layerScale,
											 layer ?						// fx params
												layer.effect_params[etindex] :
												this.effect_params[etindex]);
					glw.setTexture(layer ? this.runtime.layer_tex : this.runtime.layout_tex);
					glw.resetModelView();
					glw.translate(-halfw, -halfh);
					glw.updateModelView();
					glw.quadTex(screenleft, screenbottom, screenright, screenbottom, screenright, screentop, screenleft, screentop, rcTex);
				}
				rcTex2.left = rcTex2.top = 0;
				rcTex2.right = rcTex2.bottom = 1;
				if (inst && !post_draw)
				{
					temp = screenbottom;
					screenbottom = screentop;
					screentop = temp;
				}
			}
			else
			{
				glw.setProgramParameters(rendertarget,						// backTex
										 1.0 / windowWidth,					// pixelWidth
										 1.0 / windowHeight,				// pixelHeight
										 rcTex2.left, rcTex2.top,			// destStart
										 rcTex2.right, rcTex2.bottom,		// destEnd
										 layerScale,
										 inst ?								// fx params
											inst.effect_params[etindex] :
											layer ?
												layer.effect_params[etindex] :
												this.effect_params[etindex]);
				if (i === last && !post_draw)
				{
					if (inst)
						glw.setBlend(inst.srcBlend, inst.destBlend);
					else if (layer)
						glw.setBlend(layer.srcBlend, layer.destBlend);
					glw.setRenderingToTexture(rendertarget);
				}
				else
				{
					glw.setRenderingToTexture(fx_tex[fx_index]);
					h = clearbottom - cleartop;
					y = (windowHeight - cleartop) - h;
					glw.clearRect(clearleft, y, clearright - clearleft, h);
				}
				glw.setTexture(fx_tex[other_fx_index]);
				glw.resetModelView();
				glw.translate(-halfw, -halfh);
				glw.updateModelView();
				glw.quadTex(screenleft, screenbottom, screenright, screenbottom, screenright, screentop, screenleft, screentop, rcTex);
				if (i === last && !post_draw)
					glw.setTexture(null);
			}
			fx_index = (fx_index === 0 ? 1 : 0);
			other_fx_index = (fx_index === 0 ? 1 : 0);		// will be opposite to fx_index since it was just assigned
		}
		if (post_draw)
		{
			glw.switchProgram(0);
			if (inst)
				glw.setBlend(inst.srcBlend, inst.destBlend);
			else if (layer)
				glw.setBlend(layer.srcBlend, layer.destBlend);
			glw.setRenderingToTexture(rendertarget);
			glw.setTexture(fx_tex[other_fx_index]);
			glw.resetModelView();
			glw.translate(-halfw, -halfh);
			glw.updateModelView();
			if (inst && active_effect_types.length === 1 && !pre_draw)
				glw.quadTex(screenleft, screentop, screenright, screentop, screenright, screenbottom, screenleft, screenbottom, rcTex);
			else
				glw.quadTex(screenleft, screenbottom, screenright, screenbottom, screenright, screentop, screenleft, screentop, rcTex);
			glw.setTexture(null);
		}
	};
	Layout.prototype.getLayerBySid = function (sid_)
	{
		var i, len;
		for (i = 0, len = this.layers.length; i < len; i++)
		{
			if (this.layers[i].sid === sid_)
				return this.layers[i];
		}
		return null;
	};
	Layout.prototype.saveToJSON = function ()
	{
		var i, len, layer, et;
		var o = {
			"sx": this.scrollX,
			"sy": this.scrollY,
			"s": this.scale,
			"a": this.angle,
			"w": this.width,
			"h": this.height,
			"fv": this.first_visit,			// added r127
			"persist": this.persist_data,
			"fx": [],
			"layers": {}
		};
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			et = this.effect_types[i];
			o["fx"].push({"name": et.name, "active": et.active, "params": this.effect_params[et.index] });
		}
		for (i = 0, len = this.layers.length; i < len; i++)
		{
			layer = this.layers[i];
			o["layers"][layer.sid.toString()] = layer.saveToJSON();
		}
		return o;
	};
	Layout.prototype.loadFromJSON = function (o)
	{
		var i, len, fx, p, layer;
		this.scrollX = o["sx"];
		this.scrollY = o["sy"];
		this.scale = o["s"];
		this.angle = o["a"];
		this.width = o["w"];
		this.height = o["h"];
		this.persist_data = o["persist"];
		if (typeof o["fv"] !== "undefined")
			this.first_visit = o["fv"];
		var ofx = o["fx"];
		for (i = 0, len = ofx.length; i < len; i++)
		{
			fx = this.getEffectByName(ofx[i]["name"]);
			if (!fx)
				continue;		// must've gone missing
			fx.active = ofx[i]["active"];
			this.effect_params[fx.index] = ofx[i]["params"];
		}
		this.updateActiveEffects();
		var olayers = o["layers"];
		for (p in olayers)
		{
			if (olayers.hasOwnProperty(p))
			{
				layer = this.getLayerBySid(parseInt(p, 10));
				if (!layer)
					continue;		// must've gone missing
				layer.loadFromJSON(olayers[p]);
			}
		}
	};
	cr.layout = Layout;
	function Layer(layout, m)
	{
		this.layout = layout;
		this.runtime = layout.runtime;
		this.instances = [];        // running instances
		this.scale = 1.0;
		this.angle = 0;
		this.disableAngle = false;
		this.tmprect = new cr.rect(0, 0, 0, 0);
		this.tmpquad = new cr.quad();
		this.viewLeft = 0;
		this.viewRight = 0;
		this.viewTop = 0;
		this.viewBottom = 0;
		this.zindices_stale = false;
		this.name = m[0];
		this.index = m[1];
		this.sid = m[2];
		this.visible = m[3];		// initially visible
		this.background_color = m[4];
		this.transparent = m[5];
		this.parallaxX = m[6];
		this.parallaxY = m[7];
		this.opacity = m[8];
		this.forceOwnTexture = m[9];
		this.zoomRate = m[10];
		this.blend_mode = m[11];
		this.effect_fallback = m[12];
		this.compositeOp = "source-over";
		this.srcBlend = 0;
		this.destBlend = 0;
		this.render_offscreen = false;
		var im = m[13];
		var i, len;
		this.initial_instances = [];
		for (i = 0, len = im.length; i < len; i++)
		{
			var inst = im[i];
			var type = this.runtime.types_by_index[inst[1]];
;
			if (!type.default_instance)
				type.default_instance = inst;
			this.initial_instances.push(inst);
			if (this.layout.initial_types.indexOf(type) === -1)
				this.layout.initial_types.push(type);
		}
		this.effect_types = [];
		this.active_effect_types = [];
		this.effect_params = [];
		for (i = 0, len = m[14].length; i < len; i++)
		{
			this.effect_types.push({
				id: m[14][i][0],
				name: m[14][i][1],
				shaderindex: -1,
				active: true,
				index: i
			});
			this.effect_params.push(m[14][i][2].slice(0));
		}
		this.updateActiveEffects();
		this.rcTex = new cr.rect(0, 0, 1, 1);
		this.rcTex2 = new cr.rect(0, 0, 1, 1);
	};
	Layer.prototype.updateActiveEffects = function ()
	{
		this.active_effect_types.length = 0;
		var i, len, et;
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			et = this.effect_types[i];
			if (et.active)
				this.active_effect_types.push(et);
		}
	};
	Layer.prototype.getEffectByName = function (name_)
	{
		var i, len, et;
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			et = this.effect_types[i];
			if (et.name === name_)
				return et;
		}
		return null;
	};
	Layer.prototype.createInitialInstances = function ()
	{
		var i, k, len, inst, initial_inst, type, keep, hasPersistBehavior;
		for (i = 0, k = 0, len = this.initial_instances.length; i < len; i++)
		{
			initial_inst = this.initial_instances[i];
			type = this.runtime.types_by_index[initial_inst[1]];
;
			hasPersistBehavior = this.runtime.typeHasPersistBehavior(type);
			keep = true;
			if (!hasPersistBehavior || this.layout.first_visit)
			{
				inst = this.runtime.createInstanceFromInit(initial_inst, this, true);
;
				created_instances.push(inst);
				if (inst.type.global)
					keep = false;
			}
			if (keep)
			{
				this.initial_instances[k] = this.initial_instances[i];
				k++;
			}
		}
		this.initial_instances.length = k;
		this.runtime.ClearDeathRow();		// flushes creation row so IIDs will be correct
		if (!this.runtime.glwrap && this.effect_types.length)	// no WebGL renderer and shaders used
			this.blend_mode = this.effect_fallback;				// use fallback blend mode
		this.compositeOp = cr.effectToCompositeOp(this.blend_mode);
		if (this.runtime.gl)
			cr.setGLBlend(this, this.blend_mode, this.runtime.gl);
	};
	Layer.prototype.updateZIndices = function ()
	{
		if (!this.zindices_stale)
			return;
		var i, len;
		for (i = 0, len = this.instances.length; i < len; i++)
		{
;
;
			this.instances[i].zindex = i;
		}
		this.zindices_stale = false;
	};
	Layer.prototype.getScale = function ()
	{
		return this.getNormalScale() * this.runtime.aspect_scale;
	};
	Layer.prototype.getNormalScale = function ()
	{
		return ((this.scale * this.layout.scale) - 1) * this.zoomRate + 1;
	};
	Layer.prototype.getAngle = function ()
	{
		if (this.disableAngle)
			return 0;
		return cr.clamp_angle(this.layout.angle + this.angle);
	};
	Layer.prototype.draw = function (ctx)
	{
		this.render_offscreen = (this.forceOwnTexture || this.opacity !== 1.0 || this.blend_mode !== 0);
		var layer_canvas = this.runtime.canvas;
		var layer_ctx = ctx;
		ctx.globalAlpha = 1;
		ctx.globalCompositeOperation = "source-over";
		if (this.render_offscreen)
		{
			if (!this.runtime.layer_canvas)
			{
				this.runtime.layer_canvas = document.createElement("canvas");
;
				layer_canvas = this.runtime.layer_canvas;
				layer_canvas.width = this.runtime.width;
				layer_canvas.height = this.runtime.height;
				this.runtime.layer_ctx = layer_canvas.getContext("2d");
;
			}
			layer_canvas = this.runtime.layer_canvas;
			layer_ctx = this.runtime.layer_ctx;
			if (layer_canvas.width !== this.runtime.width)
				layer_canvas.width = this.runtime.width;
			if (layer_canvas.height !== this.runtime.height)
				layer_canvas.height = this.runtime.height;
			if (this.transparent)
				layer_ctx.clearRect(0, 0, this.runtime.width, this.runtime.height);
		}
		if (!this.transparent)
		{
			layer_ctx.fillStyle = "rgb(" + this.background_color[0] + "," + this.background_color[1] + "," + this.background_color[2] + ")";
			layer_ctx.fillRect(0, 0, this.runtime.width, this.runtime.height);
		}
		layer_ctx.save();
		this.disableAngle = true;
		var px = this.canvasToLayer(0, 0, true);
		var py = this.canvasToLayer(0, 0, false);
		this.disableAngle = false;
		if (this.runtime.pixel_rounding)
		{
			px = (px + 0.5) | 0;
			py = (py + 0.5) | 0;
		}
		this.rotateViewport(px, py, layer_ctx);
		var myscale = this.getScale();
		layer_ctx.scale(myscale, myscale);
		layer_ctx.translate(-px, -py);
		var i, len, inst, bbox;
		for (i = 0, len = this.instances.length; i < len; i++)
		{
			inst = this.instances[i];
			if (!inst.visible || inst.width === 0 || inst.height === 0)
				continue;
			inst.update_bbox();
			bbox = inst.bbox;
			if (bbox.right < this.viewLeft || bbox.bottom < this.viewTop || bbox.left > this.viewRight || bbox.top > this.viewBottom)
				continue;
			layer_ctx.globalCompositeOperation = inst.compositeOp;
			inst.draw(layer_ctx);
		}
		layer_ctx.restore();
		if (this.render_offscreen)
		{
			ctx.globalCompositeOperation = this.compositeOp;
			ctx.globalAlpha = this.opacity;
			ctx.drawImage(layer_canvas, 0, 0);
		}
	};
	Layer.prototype.rotateViewport = function (px, py, ctx)
	{
		var myscale = this.getScale();
		this.viewLeft = px;
		this.viewTop = py;
		this.viewRight = px + (this.runtime.width * (1 / myscale));
		this.viewBottom = py + (this.runtime.height * (1 / myscale));
		var myAngle = this.getAngle();
		if (myAngle !== 0)
		{
			if (ctx)
			{
				ctx.translate(this.runtime.width / 2, this.runtime.height / 2);
				ctx.rotate(-myAngle);
				ctx.translate(this.runtime.width / -2, this.runtime.height / -2);
			}
			this.tmprect.set(this.viewLeft, this.viewTop, this.viewRight, this.viewBottom);
			this.tmprect.offset((this.viewLeft + this.viewRight) / -2, (this.viewTop + this.viewBottom) / -2);
			this.tmpquad.set_from_rotated_rect(this.tmprect, myAngle);
			this.tmpquad.bounding_box(this.tmprect);
			this.tmprect.offset((this.viewLeft + this.viewRight) / 2, (this.viewTop + this.viewBottom) / 2);
			this.viewLeft = this.tmprect.left;
			this.viewTop = this.tmprect.top;
			this.viewRight = this.tmprect.right;
			this.viewBottom = this.tmprect.bottom;
		}
	}
	Layer.prototype.drawGL = function (glw)
	{
		var windowWidth = this.runtime.width;
		var windowHeight = this.runtime.height;
		var shaderindex = 0;
		var etindex = 0;
		this.render_offscreen = (this.forceOwnTexture || this.opacity !== 1.0 || this.active_effect_types.length > 0 || this.blend_mode !== 0);
		if (this.render_offscreen)
		{
			if (!this.runtime.layer_tex)
			{
				this.runtime.layer_tex = glw.createEmptyTexture(this.runtime.width, this.runtime.height, this.runtime.linearSampling);
			}
			if (this.runtime.layer_tex.c2width !== this.runtime.width || this.runtime.layer_tex.c2height !== this.runtime.height)
			{
				glw.deleteTexture(this.runtime.layer_tex);
				this.runtime.layer_tex = glw.createEmptyTexture(this.runtime.width, this.runtime.height, this.runtime.linearSampling);
			}
			glw.setRenderingToTexture(this.runtime.layer_tex);
			if (this.transparent)
				glw.clear(0, 0, 0, 0);
		}
		if (!this.transparent)
		{
			glw.clear(this.background_color[0] / 255, this.background_color[1] / 255, this.background_color[2] / 255, 1);
		}
		this.disableAngle = true;
		var px = this.canvasToLayer(0, 0, true);
		var py = this.canvasToLayer(0, 0, false);
		this.disableAngle = false;
		if (this.runtime.pixel_rounding)
		{
			px = (px + 0.5) | 0;
			py = (py + 0.5) | 0;
		}
		this.rotateViewport(px, py, null);
		var myscale = this.getScale();
		glw.resetModelView();
		glw.scale(myscale, myscale);
		glw.rotateZ(-this.getAngle());
		glw.translate((this.viewLeft + this.viewRight) / -2, (this.viewTop + this.viewBottom) / -2);
		glw.updateModelView();
		var i, len, inst, bbox;
		for (i = 0, len = this.instances.length; i < len; i++)
		{
			inst = this.instances[i];
			if (!inst.visible || inst.width === 0 || inst.height === 0)
				continue;
			inst.update_bbox();
			bbox = inst.bbox;
			if (bbox.right < this.viewLeft || bbox.bottom < this.viewTop || bbox.left > this.viewRight || bbox.top > this.viewBottom)
				continue;
			if (inst.uses_shaders)
			{
				shaderindex = inst.active_effect_types[0].shaderindex;
				etindex = inst.active_effect_types[0].index;
				if (inst.active_effect_types.length === 1 && !glw.programUsesCrossSampling(shaderindex) &&
					!glw.programExtendsBox(shaderindex) && ((!inst.angle && !inst.layer.getAngle()) || !glw.programUsesDest(shaderindex)) &&
					inst.opacity === 1 && !inst.type.plugin.must_predraw)
				{
					glw.switchProgram(shaderindex);
					glw.setBlend(inst.srcBlend, inst.destBlend);
					if (glw.programIsAnimated(shaderindex))
						this.runtime.redraw = true;
					var destStartX = 0, destStartY = 0, destEndX = 0, destEndY = 0;
					if (glw.programUsesDest(shaderindex))
					{
						var bbox = inst.bbox;
						var screenleft = this.layerToCanvas(bbox.left, bbox.top, true);
						var screentop = this.layerToCanvas(bbox.left, bbox.top, false);
						var screenright = this.layerToCanvas(bbox.right, bbox.bottom, true);
						var screenbottom = this.layerToCanvas(bbox.right, bbox.bottom, false);
						destStartX = screenleft / windowWidth;
						destStartY = 1 - screentop / windowHeight;
						destEndX = screenright / windowWidth;
						destEndY = 1 - screenbottom / windowHeight;
					}
					glw.setProgramParameters(this.render_offscreen ? this.runtime.layer_tex : this.layout.getRenderTarget(), // backTex
											 1.0 / inst.width,			// pixelWidth
											 1.0 / inst.height,			// pixelHeight
											 destStartX, destStartY,
											 destEndX, destEndY,
											 this.getScale(),
											 inst.effect_params[etindex]);
					inst.drawGL(glw);
				}
				else
				{
					this.layout.renderEffectChain(glw, this, inst, this.render_offscreen ? this.runtime.layer_tex : this.layout.getRenderTarget());
					glw.resetModelView();
					glw.scale(myscale, myscale);
					glw.rotateZ(-this.getAngle());
					glw.translate((this.viewLeft + this.viewRight) / -2, (this.viewTop + this.viewBottom) / -2);
					glw.updateModelView();
				}
			}
			else
			{
				glw.switchProgram(0);		// un-set any previously set shader
				glw.setBlend(inst.srcBlend, inst.destBlend);
				inst.drawGL(glw);
			}
		}
		if (this.render_offscreen)
		{
			shaderindex = this.active_effect_types.length ? this.active_effect_types[0].shaderindex : 0;
			etindex = this.active_effect_types.length ? this.active_effect_types[0].index : 0;
			if (this.active_effect_types.length === 0 || (this.active_effect_types.length === 1 &&
				!glw.programUsesCrossSampling(shaderindex) && this.opacity === 1))
			{
				if (this.active_effect_types.length === 1)
				{
					glw.switchProgram(shaderindex);
					glw.setProgramParameters(this.layout.getRenderTarget(),		// backTex
											 1.0 / this.runtime.width,			// pixelWidth
											 1.0 / this.runtime.height,			// pixelHeight
											 0.0, 0.0,							// destStart
											 1.0, 1.0,							// destEnd
											 this.getScale(),					// layerScale
											 this.effect_params[etindex]);		// fx parameters
					if (glw.programIsAnimated(shaderindex))
						this.runtime.redraw = true;
				}
				else
					glw.switchProgram(0);
				glw.setRenderingToTexture(this.layout.getRenderTarget());
				glw.setOpacity(this.opacity);
				glw.setTexture(this.runtime.layer_tex);
				glw.setBlend(this.srcBlend, this.destBlend);
				glw.resetModelView();
				glw.updateModelView();
				var halfw = this.runtime.width / 2;
				var halfh = this.runtime.height / 2;
				glw.quad(-halfw, halfh, halfw, halfh, halfw, -halfh, -halfw, -halfh);
				glw.setTexture(null);
			}
			else
			{
				this.layout.renderEffectChain(glw, this, null, this.layout.getRenderTarget());
			}
		}
	};
	Layer.prototype.canvasToLayer = function (ptx, pty, getx)
	{
		var multiplier = this.runtime.devicePixelRatio;
		if (this.runtime.isRetina && this.runtime.fullscreen_mode > 0)
		{
			ptx *= multiplier;
			pty *= multiplier;
		}
		var ox = (this.runtime.original_width / 2);
		var oy = (this.runtime.original_height / 2);
		var x = ((this.layout.scrollX - ox) * this.parallaxX) + ox;
		var y = ((this.layout.scrollY - oy) * this.parallaxY) + oy;
		var invScale = 1 / this.getScale();
		x -= (this.runtime.width * invScale) / 2;
		y -= (this.runtime.height * invScale) / 2;
		x += ptx * invScale;
		y += pty * invScale;
		var a = this.getAngle();
		if (a !== 0)
		{
			x -= this.layout.scrollX;
			y -= this.layout.scrollY;
			var cosa = Math.cos(a);
			var sina = Math.sin(a);
			var x_temp = (x * cosa) - (y * sina);
			y = (y * cosa) + (x * sina);
			x = x_temp;
			x += this.layout.scrollX;
			y += this.layout.scrollY;
		}
		return getx ? x : y;
	};
	Layer.prototype.layerToCanvas = function (ptx, pty, getx)
	{
		var a = this.getAngle();
		if (a !== 0)
		{
			ptx -= this.layout.scrollX;
			pty -= this.layout.scrollY;
			var cosa = Math.cos(-a);
			var sina = Math.sin(-a);
			var x_temp = (ptx * cosa) - (pty * sina);
			pty = (pty * cosa) + (ptx * sina);
			ptx = x_temp;
			ptx += this.layout.scrollX;
			pty += this.layout.scrollY;
		}
		var ox = (this.runtime.original_width / 2);
		var oy = (this.runtime.original_height / 2);
		var x = ((this.layout.scrollX - ox) * this.parallaxX) + ox;
		var y = ((this.layout.scrollY - oy) * this.parallaxY) + oy;
		var invScale = 1 / this.getScale();
		x -= (this.runtime.width * invScale) / 2;
		y -= (this.runtime.height * invScale) / 2;
		x = (ptx - x) / invScale;
		y = (pty - y) / invScale;
		var multiplier = this.runtime.devicePixelRatio;
		if (this.runtime.isRetina && this.runtime.fullscreen_mode > 0)
		{
			x /= multiplier;
			y /= multiplier;
		}
		return getx ? x : y;
	};
	Layer.prototype.rotatePt = function (x_, y_, getx)
	{
		if (this.getAngle() === 0)
			return getx ? x_ : y_;
		var nx = this.layerToCanvas(x_, y_, true);
		var ny = this.layerToCanvas(x_, y_, false);
		this.disableAngle = true;
		var px = this.canvasToLayer(nx, ny, true);
		var py = this.canvasToLayer(nx, ny, true);
		this.disableAngle = false;
		return getx ? px : py;
	};
	Layer.prototype.saveToJSON = function ()
	{
		var i, len, et;
		var o = {
			"s": this.scale,
			"a": this.angle,
			"vl": this.viewLeft,
			"vt": this.viewTop,
			"vr": this.viewRight,
			"vb": this.viewBottom,
			"v": this.visible,
			"bc": this.background_color,
			"t": this.transparent,
			"px": this.parallaxX,
			"py": this.parallaxY,
			"o": this.opacity,
			"zr": this.zoomRate,
			"fx": [],
			"instances": []
		};
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			et = this.effect_types[i];
			o["fx"].push({"name": et.name, "active": et.active, "params": this.effect_params[et.index] });
		}
		return o;
	};
	function sortInstanceByZIndex(a, b)
	{
		return a.zindex - b.zindex;
	};
	Layer.prototype.loadFromJSON = function (o)
	{
		var i, len, p, inst, fx;
		this.scale = o["s"];
		this.angle = o["a"];
		this.viewLeft = o["vl"];
		this.viewTop = o["vt"];
		this.viewRight = o["vr"];
		this.viewBottom = o["vb"];
		this.visible = o["v"];
		this.background_color = o["bc"];
		this.transparent = o["t"];
		this.parallaxX = o["px"];
		this.parallaxY = o["py"];
		this.opacity = o["o"];
		this.zoomRate = o["zr"];
		var ofx = o["fx"];
		for (i = 0, len = ofx.length; i < len; i++)
		{
			fx = this.getEffectByName(ofx[i]["name"]);
			if (!fx)
				continue;		// must've gone missing
			fx.active = ofx[i]["active"];
			this.effect_params[fx.index] = ofx[i]["params"];
		}
		this.updateActiveEffects();
		this.instances.sort(sortInstanceByZIndex);
		this.zindices_stale = true;
	};
	cr.layer = Layer;
}());
;
(function()
{
	var allUniqueSolModifiers = [];
	function testSolsMatch(arr1, arr2)
	{
		var i, len = arr1.length;
		switch (len) {
		case 0:
			return true;
		case 1:
			return arr1[0] === arr2[0];
		case 2:
			return arr1[0] === arr2[0] && arr1[1] === arr2[1];
		default:
			for (i = 0; i < len; i++)
			{
				if (arr1[i] !== arr2[i])
					return false;
			}
			return true;
		}
	};
	function solArraySorter(t1, t2)
	{
		return t1.index - t2.index;
	};
	function findMatchingSolModifier(arr)
	{
		var i, len, u, temp, subarr;
		if (arr.length === 2)
		{
			if (arr[0].index > arr[1].index)
			{
				temp = arr[0];
				arr[0] = arr[1];
				arr[1] = temp;
			}
		}
		else if (arr.length > 2)
			arr.sort(solArraySorter);		// so testSolsMatch compares in same order
		if (arr.length >= allUniqueSolModifiers.length)
			allUniqueSolModifiers.length = arr.length + 1;
		if (!allUniqueSolModifiers[arr.length])
			allUniqueSolModifiers[arr.length] = [];
		subarr = allUniqueSolModifiers[arr.length];
		for (i = 0, len = subarr.length; i < len; i++)
		{
			u = subarr[i];
			if (testSolsMatch(arr, u))
				return u;
		}
		subarr.push(arr);
		return arr;
	};
	function EventSheet(runtime, m)
	{
		this.runtime = runtime;
		this.triggers = {};
		this.fasttriggers = {};
        this.hasRun = false;
        this.includes = new cr.ObjectSet(); // all event sheets included by this sheet, at first-level indirection only
		this.name = m[0];
		var em = m[1];		// events model
		this.events = [];       // triggers won't make it to this array
		var i, len;
		for (i = 0, len = em.length; i < len; i++)
			this.init_event(em[i], null, this.events);
	};
    EventSheet.prototype.toString = function ()
    {
        return this.name;
    };
	EventSheet.prototype.init_event = function (m, parent, nontriggers)
	{
		switch (m[0]) {
		case 0:	// event block
		{
			var block = new cr.eventblock(this, parent, m);
			cr.seal(block);
			if (block.orblock)
			{
				nontriggers.push(block);
				var i, len;
				for (i = 0, len = block.conditions.length; i < len; i++)
				{
					if (block.conditions[i].trigger)
						this.init_trigger(block, i);
				}
			}
			else
			{
				if (block.is_trigger())
					this.init_trigger(block, 0);
				else
					nontriggers.push(block);
			}
			break;
		}
		case 1: // variable
		{
			var v = new cr.eventvariable(this, parent, m);
			cr.seal(v);
			nontriggers.push(v);
			break;
		}
        case 2:	// include
        {
            var inc = new cr.eventinclude(this, parent, m);
			cr.seal(inc);
            nontriggers.push(inc);
			break;
        }
		default:
;
		}
	};
	EventSheet.prototype.postInit = function ()
	{
		var i, len;
		for (i = 0, len = this.events.length; i < len; i++)
		{
			this.events[i].postInit(i < len - 1 && this.events[i + 1].is_else_block);
		}
	};
	EventSheet.prototype.run = function (from_include)
	{
		if (!this.runtime.resuming_breakpoint)
		{
			this.hasRun = true;
			if (!from_include)
				this.runtime.isRunningEvents = true;
		}
		var i, len;
		for (i = 0, len = this.events.length; i < len; i++)
		{
			var ev = this.events[i];
			ev.run();
				this.runtime.clearSol(ev.solModifiers);
				if (!this.runtime.deathRow.isEmpty() || this.runtime.createRow.length)
					this.runtime.ClearDeathRow();
		}
			if (!from_include)
				this.runtime.isRunningEvents = false;
	};
	EventSheet.prototype.init_trigger = function (trig, index)
	{
		if (!trig.orblock)
			this.runtime.triggers_to_postinit.push(trig);	// needs to be postInit'd later
		var i, len;
		var cnd = trig.conditions[index];
		var type_name;
		if (cnd.type)
			type_name = cnd.type.name;
		else
			type_name = "system";
		var fasttrigger = cnd.fasttrigger;
		var triggers = (fasttrigger ? this.fasttriggers : this.triggers);
		if (!triggers[type_name])
			triggers[type_name] = [];
		var obj_entry = triggers[type_name];
		var method = cnd.func;
		if (fasttrigger)
		{
			if (!cnd.parameters.length)				// no parameters
				return;
			var firstparam = cnd.parameters[0];
			if (firstparam.type !== 1 ||			// not a string param
				firstparam.expression.type !== 2)	// not a string literal node
			{
				return;
			}
			var fastevs;
			var firstvalue = firstparam.expression.value.toLowerCase();
			var i, len;
			for (i = 0, len = obj_entry.length; i < len; i++)
			{
				if (obj_entry[i].method == method)
				{
					fastevs = obj_entry[i].evs;
					if (!fastevs[firstvalue])
						fastevs[firstvalue] = [[trig, index]];
					else
						fastevs[firstvalue].push([trig, index]);
					return;
				}
			}
			fastevs = {};
			fastevs[firstvalue] = [[trig, index]];
			obj_entry.push({ method: method, evs: fastevs });
		}
		else
		{
			for (i = 0, len = obj_entry.length; i < len; i++)
			{
				if (obj_entry[i].method == method)
				{
					obj_entry[i].evs.push([trig, index]);
					return;
				}
			}
			obj_entry.push({ method: method, evs: [[trig, index]]});
		}
	};
	cr.eventsheet = EventSheet;
	function Selection(type)
	{
		this.type = type;
		this.instances = [];        // subset of picked instances
		this.else_instances = [];	// subset of unpicked instances
		this.select_all = true;
	};
	Selection.prototype.hasObjects = function ()
	{
		if (this.select_all)
			return this.type.instances.length;
		else
			return this.instances.length;
	};
	Selection.prototype.getObjects = function ()
	{
		if (this.select_all)
			return this.type.instances;
		else
			return this.instances;
	};
	/*
	Selection.prototype.ensure_picked = function (inst, skip_siblings)
	{
		var i, len;
		var orblock = inst.runtime.getCurrentEventStack().current_event.orblock;
		if (this.select_all)
		{
			this.select_all = false;
			if (orblock)
			{
				cr.shallowAssignArray(this.else_instances, inst.type.instances);
				cr.arrayFindRemove(this.else_instances, inst);
			}
			this.instances.length = 1;
			this.instances[0] = inst;
		}
		else
		{
			if (orblock)
			{
				i = this.else_instances.indexOf(inst);
				if (i !== -1)
				{
					this.instances.push(this.else_instances[i]);
					this.else_instances.splice(i, 1);
				}
			}
			else
			{
				if (this.instances.indexOf(inst) === -1)
					this.instances.push(inst);
			}
		}
		if (!skip_siblings)
		{
		}
	};
	*/
	Selection.prototype.pick_one = function (inst)
	{
		if (!inst)
			return;
		if (inst.runtime.getCurrentEventStack().current_event.orblock)
		{
			if (this.select_all)
			{
				this.instances.length = 0;
				cr.shallowAssignArray(this.else_instances, inst.type.instances);
				this.select_all = false;
			}
			var i = this.else_instances.indexOf(inst);
			if (i !== -1)
			{
				this.instances.push(this.else_instances[i]);
				this.else_instances.splice(i, 1);
			}
		}
		else
		{
			this.select_all = false;
			this.instances.length = 1;
			this.instances[0] = inst;
		}
	};
	cr.selection = Selection;
	function EventBlock(sheet, parent, m)
	{
		this.sheet = sheet;
		this.parent = parent;
		this.runtime = sheet.runtime;
		this.solModifiers = [];
		this.solModifiersIncludingParents = [];
		this.solWriterAfterCnds = false;	// block does not change SOL after running its conditions
		this.group = false;					// is group of events
		this.initially_activated = false;	// if a group, is active on startup
		this.toplevelevent = false;			// is an event block parented only by a top-level group
		this.toplevelgroup = false;			// is parented only by other groups or is top-level (i.e. not in a subevent)
		this.has_else_block = false;		// is followed by else
;
		this.conditions = [];
		this.actions = [];
		this.subevents = [];
        if (m[1])
        {
			this.group_name = m[1][1].toLowerCase();
			this.group = true;
			this.initially_activated = !!m[1][0];
			this.runtime.allGroups.push(this);
            this.runtime.activeGroups[(/*this.sheet.name + "|" + */this.group_name).toLowerCase()] = this.initially_activated;
        }
		else
		{
			this.group_name = "";
			this.group = false;
			this.initially_activated = false;
		}
		this.orblock = m[2];
		this.sid = m[4];
		if (!this.group)
			this.runtime.blocksBySid[this.sid.toString()] = this;
		var i, len;
		var cm = m[5];
		for (i = 0, len = cm.length; i < len; i++)
		{
			var cnd = new cr.condition(this, cm[i]);
			cnd.index = i;
			cr.seal(cnd);
			this.conditions.push(cnd);
			/*
			if (cnd.is_logical())
				this.is_logical = true;
			if (cnd.type && !cnd.type.plugin.singleglobal && this.cndReferences.indexOf(cnd.type) === -1)
				this.cndReferences.push(cnd.type);
			*/
			this.addSolModifier(cnd.type);
		}
		var am = m[6];
		for (i = 0, len = am.length; i < len; i++)
		{
			var act = new cr.action(this, am[i]);
			act.index = i;
			cr.seal(act);
			this.actions.push(act);
		}
		if (m.length === 8)
		{
			var em = m[7];
			for (i = 0, len = em.length; i < len; i++)
				this.sheet.init_event(em[i], this, this.subevents);
		}
		this.is_else_block = false;
		if (this.conditions.length)
		{
			this.is_else_block = (this.conditions[0].type == null && this.conditions[0].func == cr.system_object.prototype.cnds.Else);
		}
	};
	EventBlock.prototype.postInit = function (hasElse/*, prevBlock_*/)
	{
		var i, len;
		var p = this.parent;
		if (this.group)
		{
			this.toplevelgroup = true;
			while (p)
			{
				if (!p.group)
				{
					this.toplevelgroup = false;
					break;
				}
				p = p.parent;
			}
		}
		this.toplevelevent = !this.is_trigger() && (!this.parent || (this.parent.group && this.parent.toplevelgroup));
		this.has_else_block = !!hasElse;
		this.solModifiersIncludingParents = this.solModifiers.slice(0);
		p = this.parent;
		while (p)
		{
			for (i = 0, len = p.solModifiers.length; i < len; i++)
				this.addParentSolModifier(p.solModifiers[i]);
			p = p.parent;
		}
		this.solModifiers = findMatchingSolModifier(this.solModifiers);
		this.solModifiersIncludingParents = findMatchingSolModifier(this.solModifiersIncludingParents);
		var i, len/*, s*/;
		for (i = 0, len = this.conditions.length; i < len; i++)
			this.conditions[i].postInit();
		for (i = 0, len = this.actions.length; i < len; i++)
			this.actions[i].postInit();
		for (i = 0, len = this.subevents.length; i < len; i++)
		{
			this.subevents[i].postInit(i < len - 1 && this.subevents[i + 1].is_else_block);
		}
		/*
		if (this.is_else_block && this.prev_block)
		{
			for (i = 0, len = this.prev_block.solModifiers.length; i < len; i++)
			{
				s = this.prev_block.solModifiers[i];
				if (this.solModifiers.indexOf(s) === -1)
					this.solModifiers.push(s);
			}
		}
		*/
	}
	function addSolModifierToList(type, arr)
	{
		var i, len, t;
		if (!type)
			return;
		if (arr.indexOf(type) === -1)
			arr.push(type);
		if (type.is_contained)
		{
			for (i = 0, len = type.container.length; i < len; i++)
			{
				t = type.container[i];
				if (type === t)
					continue;		// already handled
				if (arr.indexOf(t) === -1)
					arr.push(t);
			}
		}
	};
	EventBlock.prototype.addSolModifier = function (type)
	{
		addSolModifierToList(type, this.solModifiers);
	};
	EventBlock.prototype.addParentSolModifier = function (type)
	{
		addSolModifierToList(type, this.solModifiersIncludingParents);
	};
	EventBlock.prototype.setSolWriterAfterCnds = function ()
	{
		this.solWriterAfterCnds = true;
		if (this.parent)
			this.parent.setSolWriterAfterCnds();
	};
	EventBlock.prototype.is_trigger = function ()
	{
		if (!this.conditions.length)    // no conditions
			return false;
		else
			return this.conditions[0].trigger;
	};
	EventBlock.prototype.run = function ()
	{
		var i, len, any_true = false, cnd_result;
		var evinfo = this.runtime.getCurrentEventStack();
		evinfo.current_event = this;
			if (!this.is_else_block)
				evinfo.else_branch_ran = false;
		if (this.orblock)
		{
			if (this.conditions.length === 0)
				any_true = true;		// be sure to run if empty block
				evinfo.cndindex = 0
			for (len = this.conditions.length; evinfo.cndindex < len; evinfo.cndindex++)
			{
				if (this.conditions[evinfo.cndindex].trigger)		// skip triggers when running OR block
					continue;
				cnd_result = this.conditions[evinfo.cndindex].run();
				if (cnd_result)			// make sure all conditions run and run if any were true
					any_true = true;
			}
			evinfo.last_event_true = any_true;
			if (any_true)
				this.run_actions_and_subevents();
		}
		else
		{
				evinfo.cndindex = 0
			for (len = this.conditions.length; evinfo.cndindex < len; evinfo.cndindex++)
			{
				cnd_result = this.conditions[evinfo.cndindex].run();
				if (!cnd_result)    // condition failed
				{
					evinfo.last_event_true = false;
					if (this.toplevelevent && (!this.runtime.deathRow.isEmpty() || this.runtime.createRow.length))
						this.runtime.ClearDeathRow();
					return;		// bail out now
				}
			}
			evinfo.last_event_true = true;
			this.run_actions_and_subevents();
		}
		this.end_run(evinfo);
	};
	EventBlock.prototype.end_run = function (evinfo)
	{
		if (evinfo.last_event_true && this.has_else_block)
			evinfo.else_branch_ran = true;
		if (this.toplevelevent && (!this.runtime.deathRow.isEmpty() || this.runtime.createRow.length))
			this.runtime.ClearDeathRow();
	};
	EventBlock.prototype.run_orblocktrigger = function (index)
	{
		var evinfo = this.runtime.getCurrentEventStack();
		evinfo.current_event = this;
		if (this.conditions[index].run())
		{
			this.run_actions_and_subevents();
		}
	};
	EventBlock.prototype.run_actions_and_subevents = function ()
	{
		var evinfo = this.runtime.getCurrentEventStack();
		var len;
		for (evinfo.actindex = 0, len = this.actions.length; evinfo.actindex < len; evinfo.actindex++)
		{
			if (this.actions[evinfo.actindex].run())
				return;
		}
		this.run_subevents();
	};
	EventBlock.prototype.resume_actions_and_subevents = function ()
	{
		var evinfo = this.runtime.getCurrentEventStack();
		var len;
		for (len = this.actions.length; evinfo.actindex < len; evinfo.actindex++)
		{
			if (this.actions[evinfo.actindex].run())
				return;
		}
		this.run_subevents();
	};
	EventBlock.prototype.run_subevents = function ()
	{
		if (!this.subevents.length)
			return;
		var i, len, subev, pushpop/*, skipped_pop = false, pop_modifiers = null*/;
		var last = this.subevents.length - 1;
			this.runtime.pushEventStack(this);
		if (this.solWriterAfterCnds)
		{
			for (i = 0, len = this.subevents.length; i < len; i++)
			{
				subev = this.subevents[i];
					pushpop = (!this.toplevelgroup || (!this.group && i < last));
					if (pushpop)
						this.runtime.pushCopySol(subev.solModifiers);
				subev.run();
					if (pushpop)
						this.runtime.popSol(subev.solModifiers);
					else
						this.runtime.clearSol(subev.solModifiers);
			}
		}
		else
		{
			for (i = 0, len = this.subevents.length; i < len; i++)
			{
				this.subevents[i].run();
			}
		}
			this.runtime.popEventStack();
	};
	EventBlock.prototype.run_pretrigger = function ()
	{
		var evinfo = this.runtime.getCurrentEventStack();
		evinfo.current_event = this;
		var any_true = false;
		var i, len;
		for (evinfo.cndindex = 0, len = this.conditions.length; evinfo.cndindex < len; evinfo.cndindex++)
		{
;
			if (this.conditions[evinfo.cndindex].run())
				any_true = true;
			else if (!this.orblock)			// condition failed (let OR blocks run all conditions anyway)
				return false;               // bail out
		}
		return this.orblock ? any_true : true;
	};
	EventBlock.prototype.retrigger = function ()
	{
		this.runtime.execcount++;
		var prevcndindex = this.runtime.getCurrentEventStack().cndindex;
		var len;
		var evinfo = this.runtime.pushEventStack(this);
		if (!this.orblock)
		{
			for (evinfo.cndindex = prevcndindex + 1, len = this.conditions.length; evinfo.cndindex < len; evinfo.cndindex++)
			{
				if (!this.conditions[evinfo.cndindex].run())    // condition failed
				{
					this.runtime.popEventStack();               // moving up level of recursion
					return false;                               // bail out
				}
			}
		}
		this.run_actions_and_subevents();
		this.runtime.popEventStack();
		return true;		// ran an iteration
	};
	EventBlock.prototype.isFirstConditionOfType = function (cnd)
	{
		var cndindex = cnd.index;
		if (cndindex === 0)
			return true;
		--cndindex;
		for ( ; cndindex >= 0; --cndindex)
		{
			if (this.conditions[cndindex].type === cnd.type)
				return false;
		}
		return true;
	};
	cr.eventblock = EventBlock;
	function Condition(block, m)
	{
		this.block = block;
		this.sheet = block.sheet;
		this.runtime = block.runtime;
		this.parameters = [];
		this.results = [];
		this.extra = {};		// for plugins to stow away some custom info
		this.index = -1;
		this.func = m[1];
;
		this.trigger = (m[3] > 0);
		this.fasttrigger = (m[3] === 2);
		this.looping = m[4];
		this.inverted = m[5];
		this.isstatic = m[6];
		this.sid = m[7];
		this.runtime.cndsBySid[this.sid.toString()] = this;
		if (m[0] === -1)		// system object
		{
			this.type = null;
			this.run = this.run_system;
			this.behaviortype = null;
			this.beh_index = -1;
		}
		else
		{
			this.type = this.runtime.types_by_index[m[0]];
;
			if (this.isstatic)
				this.run = this.run_static;
			else
				this.run = this.run_object;
			if (m[2])
			{
				this.behaviortype = this.type.getBehaviorByName(m[2]);
;
				this.beh_index = this.type.getBehaviorIndexByName(m[2]);
;
			}
			else
			{
				this.behaviortype = null;
				this.beh_index = -1;
			}
			if (this.block.parent)
				this.block.parent.setSolWriterAfterCnds();
		}
		if (this.fasttrigger)
			this.run = this.run_true;
		if (m.length === 10)
		{
			var i, len;
			var em = m[9];
			for (i = 0, len = em.length; i < len; i++)
			{
				var param = new cr.parameter(this, em[i]);
				cr.seal(param);
				this.parameters.push(param);
			}
			this.results.length = em.length;
		}
	};
	Condition.prototype.postInit = function ()
	{
		var i, len;
		for (i = 0, len = this.parameters.length; i < len; i++)
			this.parameters[i].postInit();
	};
	/*
	Condition.prototype.is_logical = function ()
	{
		return !this.type || this.type.plugin.singleglobal;
	};
	*/
	Condition.prototype.run_true = function ()
	{
		return true;
	};
	Condition.prototype.run_system = function ()
	{
		var i, len;
		for (i = 0, len = this.parameters.length; i < len; i++)
			this.results[i] = this.parameters[i].get();
		return cr.xor(this.func.apply(this.runtime.system, this.results), this.inverted);
	};
	Condition.prototype.run_static = function ()
	{
		var i, len;
		for (i = 0, len = this.parameters.length; i < len; i++)
			this.results[i] = this.parameters[i].get(i);
		var ret = this.func.apply(this.behaviortype ? this.behaviortype : this.type, this.results);
		this.type.applySolToContainer();
		return ret;
	};
	Condition.prototype.run_object = function ()
	{
		var i, j, leni, lenj, ret, met, inst, s, sol2;
		var sol = this.type.getCurrentSol();
		var is_orblock = this.block.orblock && !this.trigger;		// triggers in OR blocks need to work normally
		var offset = 0;
		var is_contained = this.type.is_contained;
		if (sol.select_all) {
			sol.instances.length = 0;       // clear contents
			sol.else_instances.length = 0;
			for (i = 0, leni = this.type.instances.length; i < leni; i++)
			{
				inst = this.type.instances[i];
;
				for (j = 0, lenj = this.parameters.length; j < lenj; j++)
					this.results[j] = this.parameters[j].get(i);        // default SOL index is current object
				if (this.beh_index > -1)
				{
					if (this.type.is_family)
					{
						offset = inst.type.family_beh_map[this.type.family_index];
					}
					ret = this.func.apply(inst.behavior_insts[this.beh_index + offset], this.results);
				}
				else
					ret = this.func.apply(inst, this.results);
				met = cr.xor(ret, this.inverted);
				if (met)
					sol.instances.push(inst);
				else if (is_orblock)					// in OR blocks, keep the instances not meeting the condition for subsequent testing
					sol.else_instances.push(inst);
			}
			if (this.type.finish)
				this.type.finish(true);
			sol.select_all = false;
			this.type.applySolToContainer();
			return sol.hasObjects();
		}
		else {
			var k = 0;
			var using_else_instances = (is_orblock && !this.block.isFirstConditionOfType(this));
			var arr = (using_else_instances ? sol.else_instances : sol.instances);
			var any_true = false;
			for (i = 0, leni = arr.length; i < leni; i++)
			{
				inst = arr[i];
;
				for (j = 0, lenj = this.parameters.length; j < lenj; j++)
					this.results[j] = this.parameters[j].get(i);        // default SOL index is current object
				if (this.beh_index > -1)
				{
					if (this.type.is_family)
					{
						offset = inst.type.family_beh_map[this.type.family_index];
					}
					ret = this.func.apply(inst.behavior_insts[this.beh_index + offset], this.results);
				}
				else
					ret = this.func.apply(inst, this.results);
				if (cr.xor(ret, this.inverted))
				{
					any_true = true;
					if (using_else_instances)
					{
						sol.instances.push(inst);
						if (is_contained)
						{
							for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
							{
								s = inst.siblings[j];
								s.type.getCurrentSol().instances.push(s);
							}
						}
					}
					else
					{
						arr[k] = inst;
						if (is_contained)
						{
							for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
							{
								s = inst.siblings[j];
								s.type.getCurrentSol().instances[k] = s;
							}
						}
						k++;
					}
				}
				else
				{
					if (using_else_instances)
					{
						arr[k] = inst;
						if (is_contained)
						{
							for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
							{
								s = inst.siblings[j];
								s.type.getCurrentSol().else_instances[k] = s;
							}
						}
						k++;
					}
					else if (is_orblock)
					{
						sol.else_instances.push(inst);
						if (is_contained)
						{
							for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
							{
								s = inst.siblings[j];
								s.type.getCurrentSol().else_instances.push(s);
							}
						}
					}
				}
			}
			arr.length = k;
			if (is_contained)
			{
				for (i = 0, leni = this.type.container.length; i < leni; i++)
				{
					sol2 = this.type.container[i].getCurrentSol();
					if (using_else_instances)
						sol2.else_instances.length = k;
					else
						sol2.instances.length = k;
				}
			}
			var pick_in_finish = any_true;		// don't pick in finish() if we're only doing the logic test below
			if (using_else_instances && !any_true)
			{
				for (i = 0, leni = sol.instances.length; i < leni; i++)
				{
					inst = sol.instances[i];
					for (j = 0, lenj = this.parameters.length; j < lenj; j++)
						this.results[j] = this.parameters[j].get(i);
					if (this.beh_index > -1)
						ret = this.func.apply(inst.behavior_insts[this.beh_index], this.results);
					else
						ret = this.func.apply(inst, this.results);
					if (cr.xor(ret, this.inverted))
					{
						any_true = true;
						break;		// got our flag, don't need to test any more
					}
				}
			}
			if (this.type.finish)
				this.type.finish(pick_in_finish || is_orblock);
			return is_orblock ? any_true : sol.hasObjects();
		}
	};
	cr.condition = Condition;
	function Action(block, m)
	{
		this.block = block;
		this.sheet = block.sheet;
		this.runtime = block.runtime;
		this.parameters = [];
		this.results = [];
		this.extra = {};		// for plugins to stow away some custom info
		this.index = -1;
		this.func = m[1];
;
		if (m[0] === -1)	// system
		{
			this.type = null;
			this.run = this.run_system;
			this.behaviortype = null;
			this.beh_index = -1;
		}
		else
		{
			this.type = this.runtime.types_by_index[m[0]];
;
			this.run = this.run_object;
			if (m[2])
			{
				this.behaviortype = this.type.getBehaviorByName(m[2]);
;
				this.beh_index = this.type.getBehaviorIndexByName(m[2]);
;
			}
			else
			{
				this.behaviortype = null;
				this.beh_index = -1;
			}
		}
		this.sid = m[3];
		this.runtime.actsBySid[this.sid.toString()] = this;
		if (m.length === 6)
		{
			var i, len;
			var em = m[5];
			for (i = 0, len = em.length; i < len; i++)
			{
				var param = new cr.parameter(this, em[i]);
				cr.seal(param);
				this.parameters.push(param);
			}
			this.results.length = em.length;
		}
	};
	Action.prototype.postInit = function ()
	{
		var i, len;
		for (i = 0, len = this.parameters.length; i < len; i++)
			this.parameters[i].postInit();
	};
	Action.prototype.run_system = function ()
	{
		var i, len;
		for (i = 0, len = this.parameters.length; i < len; i++)
			this.results[i] = this.parameters[i].get();
		return this.func.apply(this.runtime.system, this.results);
	};
	Action.prototype.run_object = function ()
	{
		var instances = this.type.getCurrentSol().getObjects();
		var i, j, leni, lenj, inst;
		for (i = 0, leni = instances.length; i < leni; i++)
		{
			inst = instances[i];
			for (j = 0, lenj = this.parameters.length; j < lenj; j++)
				this.results[j] = this.parameters[j].get(i);    // pass i to use as default SOL index
			if (this.beh_index > -1)
			{
				var offset = 0;
				if (this.type.is_family)
				{
					offset = inst.type.family_beh_map[this.type.family_index];
				}
				this.func.apply(inst.behavior_insts[this.beh_index + offset], this.results);
			}
			else
				this.func.apply(inst, this.results);
		}
		return false;
	};
	cr.action = Action;
	var tempValues = [];
	var tempValuesPtr = -1;
	function Parameter(owner, m)
	{
		this.owner = owner;
		this.block = owner.block;
		this.sheet = owner.sheet;
		this.runtime = owner.runtime;
		this.type = m[0];
		this.expression = null;
		this.solindex = 0;
		this.combosel = 0;
		this.layout = null;
		this.key = 0;
		this.object = null;
		this.index = 0;
		this.varname = null;
		this.eventvar = null;
		this.fileinfo = null;
		this.subparams = null;
		this.variadicret = null;
		var i, len, param;
		switch (m[0])
		{
			case 0:		// number
			case 7:		// any
				this.expression = new cr.expNode(this, m[1]);
				this.solindex = 0;
				this.get = this.get_exp;
				break;
			case 1:		// string
				this.expression = new cr.expNode(this, m[1]);
				this.solindex = 0;
				this.get = this.get_exp_str;
				break;
			case 5:		// layer
				this.expression = new cr.expNode(this, m[1]);
				this.solindex = 0;
				this.get = this.get_layer;
				break;
			case 3:		// combo
			case 8:		// cmp
				this.combosel = m[1];
				this.get = this.get_combosel;
				break;
			case 6:		// layout
				this.layout = this.runtime.layouts[m[1]];
;
				this.get = this.get_layout;
				break;
			case 9:		// keyb
				this.key = m[1];
				this.get = this.get_key;
				break;
			case 4:		// object
				this.object = this.runtime.types_by_index[m[1]];
;
				this.get = this.get_object;
				this.block.addSolModifier(this.object);
				if (this.owner instanceof cr.action)
					this.block.setSolWriterAfterCnds();
				else if (this.block.parent)
					this.block.parent.setSolWriterAfterCnds();
				break;
			case 10:	// instvar
				this.index = m[1];
				if (owner.type.is_family)
					this.get = this.get_familyvar;
				else
					this.get = this.get_instvar;
				break;
			case 11:	// eventvar
				this.varname = m[1];
				this.eventvar = null;
				this.get = this.get_eventvar;
				break;
			case 2:		// audiofile	["name", ismusic]
			case 12:	// fileinfo		"name"
				this.fileinfo = m[1];
				this.get = this.get_audiofile;
				break;
			case 13:	// variadic
				this.get = this.get_variadic;
				this.subparams = [];
				this.variadicret = [];
				for (i = 1, len = m.length; i < len; i++)
				{
					param = new cr.parameter(this.owner, m[i]);
					cr.seal(param);
					this.subparams.push(param);
					this.variadicret.push(0);
				}
				break;
			default:
;
		}
	};
	Parameter.prototype.postInit = function ()
	{
		var i, len;
		if (this.type === 11)		// eventvar
		{
			this.eventvar = this.runtime.getEventVariableByName(this.varname, this.block.parent);
;
		}
		else if (this.type === 13)	// variadic, postInit all sub-params
		{
			for (i = 0, len = this.subparams.length; i < len; i++)
				this.subparams[i].postInit();
		}
		if (this.expression)
			this.expression.postInit();
	};
	Parameter.prototype.pushTempValue = function ()
	{
		tempValuesPtr++;
		if (tempValues.length === tempValuesPtr)
			tempValues.push(new cr.expvalue());
		return tempValues[tempValuesPtr];
	};
	Parameter.prototype.popTempValue = function ()
	{
		tempValuesPtr--;
	};
	Parameter.prototype.get_exp = function (solindex)
	{
		this.solindex = solindex || 0;   // default SOL index to use
		var temp = this.pushTempValue();
		this.expression.get(temp);
		this.popTempValue();
		return temp.data;      			// return actual JS value, not expvalue
	};
	Parameter.prototype.get_exp_str = function (solindex)
	{
		this.solindex = solindex || 0;   // default SOL index to use
		var temp = this.pushTempValue();
		this.expression.get(temp);
		this.popTempValue();
		if (cr.is_string(temp.data))
			return temp.data;
		else
			return "";
	};
	Parameter.prototype.get_object = function ()
	{
		return this.object;
	};
	Parameter.prototype.get_combosel = function ()
	{
		return this.combosel;
	};
	Parameter.prototype.get_layer = function (solindex)
	{
		this.solindex = solindex || 0;   // default SOL index to use
		var temp = this.pushTempValue();
		this.expression.get(temp);
		this.popTempValue();
		if (temp.is_number())
			return this.runtime.getLayerByNumber(temp.data);
		else
			return this.runtime.getLayerByName(temp.data);
	}
	Parameter.prototype.get_layout = function ()
	{
		return this.layout;
	};
	Parameter.prototype.get_key = function ()
	{
		return this.key;
	};
	Parameter.prototype.get_instvar = function ()
	{
		return this.index;
	};
	Parameter.prototype.get_familyvar = function (solindex)
	{
		var familytype = this.owner.type;
		var realtype = null;
		var sol = familytype.getCurrentSol();
		var objs = sol.getObjects();
		if (objs.length)
			realtype = objs[solindex % objs.length].type;
		else
		{
;
			realtype = sol.else_instances[solindex % sol.else_instances.length].type;
		}
		return this.index + realtype.family_var_map[familytype.family_index];
	};
	Parameter.prototype.get_eventvar = function ()
	{
		return this.eventvar;
	};
	Parameter.prototype.get_audiofile = function ()
	{
		return this.fileinfo;
	};
	Parameter.prototype.get_variadic = function ()
	{
		var i, len;
		for (i = 0, len = this.subparams.length; i < len; i++)
		{
			this.variadicret[i] = this.subparams[i].get();
		}
		return this.variadicret;
	};
	cr.parameter = Parameter;
	function EventVariable(sheet, parent, m)
	{
		this.sheet = sheet;
		this.parent = parent;
		this.runtime = sheet.runtime;
		this.solModifiers = [];
		this.name = m[1];
		this.vartype = m[2];
		this.initial = m[3];
		this.is_static = !!m[4];
		this.is_constant = !!m[5];
		this.sid = m[6];
		this.runtime.varsBySid[this.sid.toString()] = this;
		this.data = this.initial;	// note: also stored in event stack frame for local nonstatic nonconst vars
		if (this.parent)			// local var
		{
			if (this.is_static || this.is_constant)
				this.localIndex = -1;
			else
				this.localIndex = this.runtime.stackLocalCount++;
			this.runtime.all_local_vars.push(this);
		}
		else						// global var
		{
			this.localIndex = -1;
			this.runtime.all_global_vars.push(this);
		}
	};
	EventVariable.prototype.postInit = function ()
	{
		this.solModifiers = findMatchingSolModifier(this.solModifiers);
	};
	EventVariable.prototype.setValue = function (x)
	{
;
		var lvs = this.runtime.getCurrentLocalVarStack();
		if (!this.parent || this.is_static || !lvs)
			this.data = x;
		else	// local nonstatic variable: use event stack to keep value at this level of recursion
		{
			if (this.localIndex >= lvs.length)
				lvs.length = this.localIndex + 1;
			lvs[this.localIndex] = x;
		}
	};
	EventVariable.prototype.getValue = function ()
	{
		var lvs = this.runtime.getCurrentLocalVarStack();
		if (!this.parent || this.is_static || !lvs || this.is_constant)
			return this.data;
		else	// local nonstatic variable
		{
			if (this.localIndex >= lvs.length)
			{
;
				return this.initial;
			}
			if (typeof lvs[this.localIndex] === "undefined")
			{
;
				return this.initial;
			}
			return lvs[this.localIndex];
		}
	};
	EventVariable.prototype.run = function ()
	{
			if (this.parent && !this.is_static && !this.is_constant)
				this.setValue(this.initial);
	};
	cr.eventvariable = EventVariable;
	function EventInclude(sheet, parent, m)
	{
		this.sheet = sheet;
		this.parent = parent;
		this.runtime = sheet.runtime;
		this.solModifiers = [];
		this.include_sheet = null;		// determined in postInit
		this.include_sheet_name = m[1];
	};
	EventInclude.prototype.toString = function ()
	{
		return "include:" + this.include_sheet.toString();
	};
	EventInclude.prototype.postInit = function ()
	{
        this.include_sheet = this.runtime.eventsheets[this.include_sheet_name];
;
;
        this.sheet.includes.add(this);
		this.solModifiers = findMatchingSolModifier(this.solModifiers);
	};
	EventInclude.prototype.run = function ()
	{
			if (this.parent)
				this.runtime.pushCleanSol(this.runtime.types_by_index);
        if (!this.include_sheet.hasRun)
            this.include_sheet.run(true);			// from include
			if (this.parent)
				this.runtime.popSol(this.runtime.types_by_index);
	};
	EventInclude.prototype.isActive = function ()
	{
		var p = this.parent;
		while (p)
		{
			if (p.group)
			{
				if (!this.runtime.activeGroups[p.group_name.toLowerCase()])
					return false;
			}
			p = p.parent;
		}
		return true;
	};
	cr.eventinclude = EventInclude;
	function EventStackFrame()
	{
		this.temp_parents_arr = [];
		this.reset(null);
		cr.seal(this);
	};
	EventStackFrame.prototype.reset = function (cur_event)
	{
		this.current_event = cur_event;
		this.cndindex = 0;
		this.actindex = 0;
		this.temp_parents_arr.length = 0;
		this.last_event_true = false;
		this.else_branch_ran = false;
		this.any_true_state = false;
	};
	EventStackFrame.prototype.isModifierAfterCnds = function ()
	{
		if (this.current_event.solWriterAfterCnds)
			return true;
		if (this.cndindex < this.current_event.conditions.length - 1)
			return !!this.current_event.solModifiers.length;
		return false;
	};
	cr.eventStackFrame = EventStackFrame;
}());
(function()
{
	function ExpNode(owner_, m)
	{
		this.owner = owner_;
		this.runtime = owner_.runtime;
		this.type = m[0];
;
		this.get = [this.eval_int,
					this.eval_float,
					this.eval_string,
					this.eval_unaryminus,
					this.eval_add,
					this.eval_subtract,
					this.eval_multiply,
					this.eval_divide,
					this.eval_mod,
					this.eval_power,
					this.eval_and,
					this.eval_or,
					this.eval_equal,
					this.eval_notequal,
					this.eval_less,
					this.eval_lessequal,
					this.eval_greater,
					this.eval_greaterequal,
					this.eval_conditional,
					this.eval_system_exp,
					this.eval_object_behavior_exp,
					this.eval_instvar_exp,
					this.eval_object_behavior_exp,
					this.eval_eventvar_exp][this.type];
		var paramsModel = null;
		this.value = null;
		this.first = null;
		this.second = null;
		this.third = null;
		this.func = null;
		this.results = null;
		this.parameters = null;
		this.object_type = null;
		this.beh_index = -1;
		this.instance_expr = null;
		this.varindex = -1;
		this.behavior_type = null;
		this.varname = null;
		this.eventvar = null;
		this.return_string = false;
		switch (this.type) {
		case 0:		// int
		case 1:		// float
		case 2:		// string
			this.value = m[1];
			break;
		case 3:		// unaryminus
			this.first = new cr.expNode(owner_, m[1]);
			break;
		case 18:	// conditional
			this.first = new cr.expNode(owner_, m[1]);
			this.second = new cr.expNode(owner_, m[2]);
			this.third = new cr.expNode(owner_, m[3]);
			break;
		case 19:	// system_exp
			this.func = m[1];
;
			this.results = [];
			this.parameters = [];
			if (m.length === 3)
			{
				paramsModel = m[2];
				this.results.length = paramsModel.length + 1;	// must also fit 'ret'
			}
			else
				this.results.length = 1;      // to fit 'ret'
			break;
		case 20:	// object_exp
			this.object_type = this.runtime.types_by_index[m[1]];
;
			this.beh_index = -1;
			this.func = m[2];
			this.return_string = m[3];
			if (m[4])
				this.instance_expr = new cr.expNode(owner_, m[4]);
			else
				this.instance_expr = null;
			this.results = [];
			this.parameters = [];
			if (m.length === 6)
			{
				paramsModel = m[5];
				this.results.length = paramsModel.length + 1;
			}
			else
				this.results.length = 1;	// to fit 'ret'
			break;
		case 21:		// instvar_exp
			this.object_type = this.runtime.types_by_index[m[1]];
;
			this.return_string = m[2];
			if (m[3])
				this.instance_expr = new cr.expNode(owner_, m[3]);
			else
				this.instance_expr = null;
			this.varindex = m[4];
			break;
		case 22:		// behavior_exp
			this.object_type = this.runtime.types_by_index[m[1]];
;
			this.behavior_type = this.object_type.getBehaviorByName(m[2]);
;
			this.beh_index = this.object_type.getBehaviorIndexByName(m[2]);
			this.func = m[3];
			this.return_string = m[4];
			if (m[5])
				this.instance_expr = new cr.expNode(owner_, m[5]);
			else
				this.instance_expr = null;
			this.results = [];
			this.parameters = [];
			if (m.length === 7)
			{
				paramsModel = m[6];
				this.results.length = paramsModel.length + 1;
			}
			else
				this.results.length = 1;	// to fit 'ret'
			break;
		case 23:		// eventvar_exp
			this.varname = m[1];
			this.eventvar = null;	// assigned in postInit
			break;
		}
		if (this.type >= 4 && this.type <= 17)
		{
			this.first = new cr.expNode(owner_, m[1]);
			this.second = new cr.expNode(owner_, m[2]);
		}
		if (paramsModel)
		{
			var i, len;
			for (i = 0, len = paramsModel.length; i < len; i++)
				this.parameters.push(new cr.expNode(owner_, paramsModel[i]));
		}
		cr.seal(this);
	};
	ExpNode.prototype.postInit = function ()
	{
		if (this.type === 23)	// eventvar_exp
		{
			this.eventvar = this.owner.runtime.getEventVariableByName(this.varname, this.owner.block.parent);
;
		}
		if (this.first)
			this.first.postInit();
		if (this.second)
			this.second.postInit();
		if (this.third)
			this.third.postInit();
		if (this.instance_expr)
			this.instance_expr.postInit();
		if (this.parameters)
		{
			var i, len;
			for (i = 0, len = this.parameters.length; i < len; i++)
				this.parameters[i].postInit();
		}
	};
	ExpNode.prototype.eval_system_exp = function (ret)
	{
		this.results[0] = ret;
		var temp = this.owner.pushTempValue();
		var i, len;
		for (i = 0, len = this.parameters.length; i < len; i++)
		{
			this.parameters[i].get(temp);
			this.results[i + 1] = temp.data;   // passing actual javascript value as argument instead of expvalue
		}
		this.owner.popTempValue();
		this.func.apply(this.runtime.system, this.results);
	};
	ExpNode.prototype.eval_object_behavior_exp = function (ret)
	{
		var sol = this.object_type.getCurrentSol();
		var instances = sol.getObjects();
		if (!instances.length)
		{
			if (sol.else_instances.length)
				instances = sol.else_instances;
			else
			{
				if (this.return_string)
					ret.set_string("");
				else
					ret.set_int(0);
				return;
			}
		}
		this.results[0] = ret;
		ret.object_class = this.object_type;		// so expression can access family type if need be
		var temp = this.owner.pushTempValue();
		var i, len;
		for (i = 0, len = this.parameters.length; i < len; i++) {
			this.parameters[i].get(temp);
			this.results[i + 1] = temp.data;   // passing actual javascript value as argument instead of expvalue
		}
		var index = this.owner.solindex;
		if (this.instance_expr) {
			this.instance_expr.get(temp);
			if (temp.is_number()) {
				index = temp.data;
				instances = this.object_type.instances;    // pick from all instances, not SOL
			}
		}
		this.owner.popTempValue();
		index %= instances.length;      // wraparound
		if (index < 0)
			index += instances.length;
		var returned_val;
		var inst = instances[index];
		if (this.beh_index > -1)
		{
			var offset = 0;
			if (this.object_type.is_family)
			{
				offset = inst.type.family_beh_map[this.object_type.family_index];
			}
			returned_val = this.func.apply(inst.behavior_insts[this.beh_index + offset], this.results);
		}
		else
			returned_val = this.func.apply(inst, this.results);
;
	};
	ExpNode.prototype.eval_instvar_exp = function (ret)
	{
		var sol = this.object_type.getCurrentSol();
		var instances = sol.getObjects();
		if (!instances.length)
		{
			if (sol.else_instances.length)
				instances = sol.else_instances;
			else
			{
				if (this.return_string)
					ret.set_string("");
				else
					ret.set_int(0);
				return;
			}
		}
		var index = this.owner.solindex;
		if (this.instance_expr)
		{
			var temp = this.owner.pushTempValue();
			this.instance_expr.get(temp);
			if (temp.is_number())
			{
				index = temp.data;
				var type_instances = this.object_type.instances;
				index %= type_instances.length;     // wraparound
				if (index < 0)                      // offset
					index += type_instances.length;
				var to_ret = type_instances[index].instance_vars[this.varindex];
				if (cr.is_string(to_ret))
					ret.set_string(to_ret);
				else
					ret.set_float(to_ret);
				this.owner.popTempValue();
				return;         // done
			}
			this.owner.popTempValue();
		}
		index %= instances.length;      // wraparound
		if (index < 0)
			index += instances.length;
		var inst = instances[index];
		var offset = 0;
		if (this.object_type.is_family)
		{
			offset = inst.type.family_var_map[this.object_type.family_index];
		}
		var to_ret = inst.instance_vars[this.varindex + offset];
		if (cr.is_string(to_ret))
			ret.set_string(to_ret);
		else
			ret.set_float(to_ret);
	};
	ExpNode.prototype.eval_int = function (ret)
	{
		ret.type = cr.exptype.Integer;
		ret.data = this.value;
	};
	ExpNode.prototype.eval_float = function (ret)
	{
		ret.type = cr.exptype.Float;
		ret.data = this.value;
	};
	ExpNode.prototype.eval_string = function (ret)
	{
		ret.type = cr.exptype.String;
		ret.data = this.value;
	};
	ExpNode.prototype.eval_unaryminus = function (ret)
	{
		this.first.get(ret);                // retrieve operand
		if (ret.is_number())
			ret.data = -ret.data;
	};
	ExpNode.prototype.eval_add = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			ret.data += temp.data;          // both operands numbers: add
			if (temp.is_float())
				ret.make_float();
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_subtract = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			ret.data -= temp.data;          // both operands numbers: subtract
			if (temp.is_float())
				ret.make_float();
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_multiply = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			ret.data *= temp.data;          // both operands numbers: multiply
			if (temp.is_float())
				ret.make_float();
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_divide = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			ret.data /= temp.data;          // both operands numbers: divide
			ret.make_float();
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_mod = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			ret.data %= temp.data;          // both operands numbers: modulo
			if (temp.is_float())
				ret.make_float();
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_power = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			ret.data = Math.pow(ret.data, temp.data);   // both operands numbers: raise to power
			if (temp.is_float())
				ret.make_float();
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_and = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number())
		{
			if (temp.is_string())
			{
				ret.set_string(ret.data.toString() + temp.data);
			}
			else
			{
				if (ret.data && temp.data)
					ret.set_int(1);
				else
					ret.set_int(0);
			}
		}
		else if (ret.is_string())
		{
			if (temp.is_string())
				ret.data += temp.data;
			else
			{
				ret.data += (Math.round(temp.data * 1e10) / 1e10).toString();
			}
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_or = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			if (ret.data || temp.data)
				ret.set_int(1);
			else
				ret.set_int(0);
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_conditional = function (ret)
	{
		this.first.get(ret);                // condition operand
		if (ret.data)                       // is true
			this.second.get(ret);           // evaluate second operand to ret
		else
			this.third.get(ret);            // evaluate third operand to ret
	};
	ExpNode.prototype.eval_equal = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		ret.set_int(ret.data === temp.data ? 1 : 0);
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_notequal = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		ret.set_int(ret.data !== temp.data ? 1 : 0);
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_less = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		ret.set_int(ret.data < temp.data ? 1 : 0);
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_lessequal = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		ret.set_int(ret.data <= temp.data ? 1 : 0);
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_greater = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		ret.set_int(ret.data > temp.data ? 1 : 0);
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_greaterequal = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		ret.set_int(ret.data >= temp.data ? 1 : 0);
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_eventvar_exp = function (ret)
	{
		var val = this.eventvar.getValue();
		if (cr.is_number(val))
			ret.set_float(val);
		else
			ret.set_string(val);
	};
	cr.expNode = ExpNode;
	function ExpValue(type, data)
	{
		this.type = type || cr.exptype.Integer;
		this.data = data || 0;
		this.object_class = null;
;
;
;
		if (this.type == cr.exptype.Integer)
			this.data = Math.floor(this.data);
		cr.seal(this);
	};
	ExpValue.prototype.is_int = function ()
	{
		return this.type === cr.exptype.Integer;
	};
	ExpValue.prototype.is_float = function ()
	{
		return this.type === cr.exptype.Float;
	};
	ExpValue.prototype.is_number = function ()
	{
		return this.type === cr.exptype.Integer || this.type === cr.exptype.Float;
	};
	ExpValue.prototype.is_string = function ()
	{
		return this.type === cr.exptype.String;
	};
	ExpValue.prototype.make_int = function ()
	{
		if (!this.is_int())
		{
			if (this.is_float())
				this.data = Math.floor(this.data);      // truncate float
			else if (this.is_string())
				this.data = parseInt(this.data, 10);
			this.type = cr.exptype.Integer;
		}
	};
	ExpValue.prototype.make_float = function ()
	{
		if (!this.is_float())
		{
			if (this.is_string())
				this.data = parseFloat(this.data);
			this.type = cr.exptype.Float;
		}
	};
	ExpValue.prototype.make_string = function ()
	{
		if (!this.is_string())
		{
			this.data = this.data.toString();
			this.type = cr.exptype.String;
		}
	};
	ExpValue.prototype.set_int = function (val)
	{
;
		this.type = cr.exptype.Integer;
		this.data = Math.floor(val);
	};
	ExpValue.prototype.set_float = function (val)
	{
;
		this.type = cr.exptype.Float;
		this.data = val;
	};
	ExpValue.prototype.set_string = function (val)
	{
;
		this.type = cr.exptype.String;
		this.data = val;
	};
	ExpValue.prototype.set_any = function (val)
	{
		if (cr.is_number(val))
		{
			this.type = cr.exptype.Float;
			this.data = val;
		}
		else if (cr.is_string(val))
		{
			this.type = cr.exptype.String;
			this.data = val.toString();
		}
		else
		{
			this.type = cr.exptype.Integer;
			this.data = 0;
		}
	};
	cr.expvalue = ExpValue;
	cr.exptype = {
		Integer: 0,     // emulated; no native integer support in javascript
		Float: 1,
		String: 2
	};
}());
;
cr.system_object = function (runtime)
{
    this.runtime = runtime;
	this.waits = [];
};
cr.system_object.prototype.saveToJSON = function ()
{
	var o = {};
	var i, len, j, lenj, p, w, t, sobj;
	o["waits"] = [];
	var owaits = o["waits"];
	var waitobj;
	for (i = 0, len = this.waits.length; i < len; i++)
	{
		w = this.waits[i];
		waitobj = {
			"t": w.time,
			"ev": w.ev.sid,
			"sm": [],
			"sols": {}
		};
		if (w.ev.actions[w.actindex])
			waitobj["act"] = w.ev.actions[w.actindex].sid;
		for (j = 0, lenj = w.solModifiers.length; j < lenj; j++)
			waitobj["sm"].push(w.solModifiers[j].sid);
		for (p in w.sols)
		{
			if (w.sols.hasOwnProperty(p))
			{
				t = this.runtime.types_by_index[parseInt(p, 10)];
;
				sobj = {
					"sa": w.sols[p].sa,
					"insts": []
				};
				for (j = 0, lenj = w.sols[p].insts.length; j < lenj; j++)
					sobj["insts"].push(w.sols[p].insts[j].uid);
				waitobj["sols"][t.sid.toString()] = sobj;
			}
		}
		owaits.push(waitobj);
	}
	return o;
};
cr.system_object.prototype.loadFromJSON = function (o)
{
	var owaits = o["waits"];
	var i, len, j, lenj, p, w, addWait, e, aindex, t, savedsol, nusol, inst;
	this.waits.length = 0;
	for (i = 0, len = owaits.length; i < len; i++)
	{
		w = owaits[i];
		e = this.runtime.blocksBySid[w["ev"].toString()];
		if (!e)
			continue;	// event must've gone missing
		aindex = -1;
		for (j = 0, lenj = e.actions.length; j < lenj; j++)
		{
			if (e.actions[j].sid === w["act"])
			{
				aindex = j;
				break;
			}
		}
		if (aindex === -1)
			continue;	// action must've gone missing
		addWait = {};
		addWait.sols = {};
		addWait.solModifiers = [];
		addWait.deleteme = false;
		addWait.time = w["t"];
		addWait.ev = e;
		addWait.actindex = aindex;
		for (j = 0, lenj = w["sm"].length; j < lenj; j++)
		{
			t = this.runtime.getObjectTypeBySid(w["sm"][j]);
			if (t)
				addWait.solModifiers.push(t);
		}
		for (p in w["sols"])
		{
			if (w["sols"].hasOwnProperty(p))
			{
				t = this.runtime.getObjectTypeBySid(parseInt(p, 10));
				if (!t)
					continue;		// type must've been deleted
				savedsol = w["sols"][p];
				nusol = {
					sa: savedsol["sa"],
					insts: []
				};
				for (j = 0, lenj = savedsol["insts"].length; j < lenj; j++)
				{
					inst = this.runtime.getObjectByUID(savedsol["insts"][j]);
					if (inst)
						nusol.insts.push(inst);
				}
				addWait.sols[t.index.toString()] = nusol;
			}
		}
		this.waits.push(addWait);
	}
};
(function ()
{
	var sysProto = cr.system_object.prototype;
	function SysCnds() {};
    SysCnds.prototype.EveryTick = function()
    {
        return true;
    };
    SysCnds.prototype.OnLayoutStart = function()
    {
        return true;
    };
    SysCnds.prototype.OnLayoutEnd = function()
    {
        return true;
    };
    SysCnds.prototype.Compare = function(x, cmp, y)
    {
        return cr.do_cmp(x, cmp, y);
    };
    SysCnds.prototype.CompareTime = function (cmp, t)
    {
        var elapsed = this.runtime.kahanTime.sum;
        if (cmp === 0)
        {
            var cnd = this.runtime.getCurrentCondition();
            if (!cnd.extra.CompareTime_executed)
            {
                if (elapsed >= t)
                {
                    cnd.extra.CompareTime_executed = true;
                    return true;
                }
            }
            return false;
        }
        return cr.do_cmp(elapsed, cmp, t);
    };
    SysCnds.prototype.LayerVisible = function (layer)
    {
        if (!layer)
            return false;
        else
            return layer.visible;
    };
	SysCnds.prototype.LayerCmpOpacity = function (layer, cmp, opacity_)
	{
		if (!layer)
			return false;
		return cr.do_cmp(layer.opacity * 100, cmp, opacity_);
	};
    SysCnds.prototype.Repeat = function (count)
    {
		var current_frame = this.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var solModifierAfterCnds = current_frame.isModifierAfterCnds();
        var current_loop = this.runtime.pushLoopStack();
        var i;
		if (solModifierAfterCnds)
		{
			for (i = 0; i < count && !current_loop.stopped; i++)
			{
				this.runtime.pushCopySol(current_event.solModifiers);
				current_loop.index = i;
				current_event.retrigger();
				this.runtime.popSol(current_event.solModifiers);
			}
		}
		else
		{
			for (i = 0; i < count && !current_loop.stopped; i++)
			{
				current_loop.index = i;
				current_event.retrigger();
			}
		}
        this.runtime.popLoopStack();
		return false;
    };
	SysCnds.prototype.While = function (count)
    {
		var current_frame = this.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var solModifierAfterCnds = current_frame.isModifierAfterCnds();
        var current_loop = this.runtime.pushLoopStack();
        var i;
		if (solModifierAfterCnds)
		{
			for (i = 0; !current_loop.stopped; i++)
			{
				this.runtime.pushCopySol(current_event.solModifiers);
				current_loop.index = i;
				if (!current_event.retrigger())		// one of the other conditions returned false
					current_loop.stopped = true;	// break
				this.runtime.popSol(current_event.solModifiers);
			}
		}
		else
		{
			for (i = 0; !current_loop.stopped; i++)
			{
				current_loop.index = i;
				if (!current_event.retrigger())
					current_loop.stopped = true;
			}
		}
        this.runtime.popLoopStack();
		return false;
    };
    SysCnds.prototype.For = function (name, start, end)
    {
        var current_frame = this.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var solModifierAfterCnds = current_frame.isModifierAfterCnds();
        var current_loop = this.runtime.pushLoopStack(name);
        var i;
		if (end < start)
		{
			if (solModifierAfterCnds)
			{
				for (i = start; i >= end && !current_loop.stopped; --i)  // inclusive to end
				{
					this.runtime.pushCopySol(current_event.solModifiers);
					current_loop.index = i;
					current_event.retrigger();
					this.runtime.popSol(current_event.solModifiers);
				}
			}
			else
			{
				for (i = start; i >= end && !current_loop.stopped; --i)  // inclusive to end
				{
					current_loop.index = i;
					current_event.retrigger();
				}
			}
		}
		else
		{
			if (solModifierAfterCnds)
			{
				for (i = start; i <= end && !current_loop.stopped; ++i)  // inclusive to end
				{
					this.runtime.pushCopySol(current_event.solModifiers);
					current_loop.index = i;
					current_event.retrigger();
					this.runtime.popSol(current_event.solModifiers);
				}
			}
			else
			{
				for (i = start; i <= end && !current_loop.stopped; ++i)  // inclusive to end
				{
					current_loop.index = i;
					current_event.retrigger();
				}
			}
		}
        this.runtime.popLoopStack();
		return false;
    };
	var foreach_instancestack = [];
	var foreach_instanceptr = -1;
    SysCnds.prototype.ForEach = function (obj)
    {
        var sol = obj.getCurrentSol();
		foreach_instanceptr++;
		if (foreach_instancestack.length === foreach_instanceptr)
			foreach_instancestack.push([]);
		var instances = foreach_instancestack[foreach_instanceptr];
		cr.shallowAssignArray(instances, sol.getObjects());
        var current_frame = this.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var solModifierAfterCnds = current_frame.isModifierAfterCnds();
        var current_loop = this.runtime.pushLoopStack();
        var i, len, j, lenj, inst, s, sol2;
		var is_contained = obj.is_contained;
		if (solModifierAfterCnds)
		{
			for (i = 0, len = instances.length; i < len && !current_loop.stopped; i++)
			{
				this.runtime.pushCopySol(current_event.solModifiers);
				inst = instances[i];
				sol = obj.getCurrentSol();
				sol.select_all = false;
				sol.instances.length = 1;
				sol.instances[0] = inst;
				if (is_contained)
				{
					for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
					{
						s = inst.siblings[j];
						sol2 = s.type.getCurrentSol();
						sol2.select_all = false;
						sol2.instances.length = 1;
						sol2.instances[0] = s;
					}
				}
				current_loop.index = i;
				current_event.retrigger();
				this.runtime.popSol(current_event.solModifiers);
			}
		}
		else
		{
			sol.select_all = false;
			sol.instances.length = 1;
			for (i = 0, len = instances.length; i < len && !current_loop.stopped; i++)
			{
				inst = instances[i];
				sol.instances[0] = inst;
				if (is_contained)
				{
					for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
					{
						s = inst.siblings[j];
						sol2 = s.type.getCurrentSol();
						sol2.select_all = false;
						sol2.instances.length = 1;
						sol2.instances[0] = s;
					}
				}
				current_loop.index = i;
				current_event.retrigger();
			}
		}
		instances.length = 0;
        this.runtime.popLoopStack();
		foreach_instanceptr--;
		return false;
    };
	function foreach_sortinstances(a, b)
	{
		var va = a.extra.c2_foreachordered_val;
		var vb = b.extra.c2_foreachordered_val;
		if (cr.is_number(va) && cr.is_number(vb))
			return va - vb;
		else
		{
			va = "" + va;
			vb = "" + vb;
			if (va < vb)
				return -1;
			else if (va > vb)
				return 1;
			else
				return 0;
		}
	};
	SysCnds.prototype.ForEachOrdered = function (obj, exp, order)
    {
        var sol = obj.getCurrentSol();
		foreach_instanceptr++;
		if (foreach_instancestack.length === foreach_instanceptr)
			foreach_instancestack.push([]);
		var instances = foreach_instancestack[foreach_instanceptr];
		cr.shallowAssignArray(instances, sol.getObjects());
        var current_frame = this.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var current_condition = this.runtime.getCurrentCondition();
		var solModifierAfterCnds = current_frame.isModifierAfterCnds();
        var current_loop = this.runtime.pushLoopStack();
		var i, len, j, lenj, inst, s, sol2;
		for (i = 0, len = instances.length; i < len; i++)
		{
			instances[i].extra.c2_foreachordered_val = current_condition.parameters[1].get(i);
		}
		instances.sort(foreach_sortinstances);
		if (order === 1)
			instances.reverse();
		var is_contained = obj.is_contained;
		if (solModifierAfterCnds)
		{
			for (i = 0, len = instances.length; i < len && !current_loop.stopped; i++)
			{
				this.runtime.pushCopySol(current_event.solModifiers);
				inst = instances[i];
				sol = obj.getCurrentSol();
				sol.select_all = false;
				sol.instances.length = 1;
				sol.instances[0] = inst;
				if (is_contained)
				{
					for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
					{
						s = inst.siblings[j];
						sol2 = s.type.getCurrentSol();
						sol2.select_all = false;
						sol2.instances.length = 1;
						sol2.instances[0] = s;
					}
				}
				current_loop.index = i;
				current_event.retrigger();
				this.runtime.popSol(current_event.solModifiers);
			}
		}
		else
		{
			sol.select_all = false;
			sol.instances.length = 1;
			for (i = 0, len = instances.length; i < len && !current_loop.stopped; i++)
			{
				inst = instances[i];
				sol.instances[0] = inst;
				if (is_contained)
				{
					for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
					{
						s = inst.siblings[j];
						sol2 = s.type.getCurrentSol();
						sol2.select_all = false;
						sol2.instances.length = 1;
						sol2.instances[0] = s;
					}
				}
				current_loop.index = i;
				current_event.retrigger();
			}
		}
		instances.length = 0;
        this.runtime.popLoopStack();
		foreach_instanceptr--;
		return false;
    };
	SysCnds.prototype.PickByComparison = function (obj_, exp_, cmp_, val_)
	{
		var i, len, k, inst;
		if (!obj_)
			return;
		foreach_instanceptr++;
		if (foreach_instancestack.length === foreach_instanceptr)
			foreach_instancestack.push([]);
		var tmp_instances = foreach_instancestack[foreach_instanceptr];
		var sol = obj_.getCurrentSol();
		cr.shallowAssignArray(tmp_instances, sol.getObjects());
		if (sol.select_all)
			sol.else_instances.length = 0;
		var current_condition = this.runtime.getCurrentCondition();
		for (i = 0, k = 0, len = tmp_instances.length; i < len; i++)
		{
			inst = tmp_instances[i];
			tmp_instances[k] = inst;
			exp_ = current_condition.parameters[1].get(i);
			val_ = current_condition.parameters[3].get(i);
			if (cr.do_cmp(exp_, cmp_, val_))
			{
				k++;
			}
			else
			{
				sol.else_instances.push(inst);
			}
		}
		tmp_instances.length = k;
		sol.select_all = false;
		cr.shallowAssignArray(sol.instances, tmp_instances);
		tmp_instances.length = 0;
		foreach_instanceptr--;
		obj_.applySolToContainer();
		return !!sol.instances.length;
	};
	SysCnds.prototype.PickByEvaluate = function (obj_, exp_)
	{
		var i, len, k, inst;
		if (!obj_)
			return;
		foreach_instanceptr++;
		if (foreach_instancestack.length === foreach_instanceptr)
			foreach_instancestack.push([]);
		var tmp_instances = foreach_instancestack[foreach_instanceptr];
		var sol = obj_.getCurrentSol();
		cr.shallowAssignArray(tmp_instances, sol.getObjects());
		if (sol.select_all)
			sol.else_instances.length = 0;
		var current_condition = this.runtime.getCurrentCondition();
		for (i = 0, k = 0, len = tmp_instances.length; i < len; i++)
		{
			inst = tmp_instances[i];
			tmp_instances[k] = inst;
			exp_ = current_condition.parameters[1].get(i);
			if (exp_)
			{
				k++;
			}
			else
			{
				sol.else_instances.push(inst);
			}
		}
		tmp_instances.length = k;
		sol.select_all = false;
		cr.shallowAssignArray(sol.instances, tmp_instances);
		tmp_instances.length = 0;
		foreach_instanceptr--;
		obj_.applySolToContainer();
		return !!sol.instances.length;
	};
    SysCnds.prototype.TriggerOnce = function ()
    {
        var cndextra = this.runtime.getCurrentCondition().extra;
		if (typeof cndextra.TriggerOnce_lastTick === "undefined")
			cndextra.TriggerOnce_lastTick = -1;
        var last_tick = cndextra.TriggerOnce_lastTick;
        var cur_tick = this.runtime.tickcount;
        cndextra.TriggerOnce_lastTick = cur_tick;
        return this.runtime.layout_first_tick || last_tick !== cur_tick - 1;
    };
    SysCnds.prototype.Every = function (seconds)
    {
        var cnd = this.runtime.getCurrentCondition();
        var last_time = cnd.extra.Every_lastTime || 0;
        var cur_time = this.runtime.kahanTime.sum;
		if (typeof cnd.extra.Every_seconds === "undefined")
			cnd.extra.Every_seconds = seconds;
		var this_seconds = cnd.extra.Every_seconds;
        if (cur_time >= last_time + this_seconds)
        {
            cnd.extra.Every_lastTime = last_time + this_seconds;
			if (cur_time >= cnd.extra.Every_lastTime + this_seconds)
				cnd.extra.Every_lastTime = cur_time;
			cnd.extra.Every_seconds = seconds;
            return true;
        }
        else
            return false;
    };
    SysCnds.prototype.PickNth = function (obj, index)
    {
        if (!obj)
            return false;
        var sol = obj.getCurrentSol();
        var instances = sol.getObjects();
		index = cr.floor(index);
        if (index < 0 || index >= instances.length)
            return false;
		var inst = instances[index];
        sol.pick_one(inst);
		obj.applySolToContainer();
        return true;
    };
	SysCnds.prototype.PickRandom = function (obj)
    {
        if (!obj)
            return false;
        var sol = obj.getCurrentSol();
        var instances = sol.getObjects();
		var index = cr.floor(Math.random() * instances.length);
        if (index >= instances.length)
            return false;
		var inst = instances[index];
        sol.pick_one(inst);
		obj.applySolToContainer();
        return true;
    };
	SysCnds.prototype.CompareVar = function (v, cmp, val)
    {
        return cr.do_cmp(v.getValue(), cmp, val);
    };
    SysCnds.prototype.IsGroupActive = function (group)
    {
        return this.runtime.activeGroups[(/*this.runtime.getCurrentCondition().sheet.name + "|" + */group).toLowerCase()];
    };
	SysCnds.prototype.IsPreview = function ()
	{
		return typeof cr_is_preview !== "undefined";
	};
	SysCnds.prototype.PickAll = function (obj)
    {
        if (!obj)
            return false;
		if (!obj.instances.length)
			return false;
        var sol = obj.getCurrentSol();
        sol.select_all = true;
		obj.applySolToContainer();
        return true;
    };
	SysCnds.prototype.IsMobile = function ()
	{
		return this.runtime.isMobile;
	};
	SysCnds.prototype.CompareBetween = function (x, a, b)
	{
		return x >= a && x <= b;
	};
	SysCnds.prototype.Else = function ()
	{
		var current_frame = this.runtime.getCurrentEventStack();
		if (current_frame.else_branch_ran)
			return false;		// another event in this else-if chain has run
		else
			return !current_frame.last_event_true;
		/*
		var current_frame = this.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var prev_event = current_event.prev_block;
		if (!prev_event)
			return false;
		if (prev_event.is_logical)
			return !this.runtime.last_event_true;
		var i, len, j, lenj, s, sol, temp, inst, any_picked = false;
		for (i = 0, len = prev_event.cndReferences.length; i < len; i++)
		{
			s = prev_event.cndReferences[i];
			sol = s.getCurrentSol();
			if (sol.select_all || sol.instances.length === s.instances.length)
			{
				sol.select_all = false;
				sol.instances.length = 0;
			}
			else
			{
				if (sol.instances.length === 1 && sol.else_instances.length === 0 && s.instances.length >= 2)
				{
					inst = sol.instances[0];
					sol.instances.length = 0;
					for (j = 0, lenj = s.instances.length; j < lenj; j++)
					{
						if (s.instances[j] != inst)
							sol.instances.push(s.instances[j]);
					}
					any_picked = true;
				}
				else
				{
					temp = sol.instances;
					sol.instances = sol.else_instances;
					sol.else_instances = temp;
					any_picked = true;
				}
			}
		}
		return any_picked;
		*/
	};
	SysCnds.prototype.OnLoadFinished = function ()
	{
		return true;
	};
	SysCnds.prototype.OnCanvasSnapshot = function ()
	{
		return true;
	};
	SysCnds.prototype.EffectsSupported = function ()
	{
		return !!this.runtime.glwrap;
	};
	SysCnds.prototype.OnSaveComplete = function ()
	{
		return true;
	};
	SysCnds.prototype.OnLoadComplete = function ()
	{
		return true;
	};
	SysCnds.prototype.OnLoadFailed = function ()
	{
		return true;
	};
	SysCnds.prototype.ObjectUIDExists = function (u)
	{
		return !!this.runtime.getObjectByUID(u);
	};
	SysCnds.prototype.IsOnPlatform = function (p)
	{
		var rt = this.runtime;
		switch (p) {
		case 0:		// HTML5 website
			return !rt.isDomFree && !rt.isNodeWebkit && !rt.isPhoneGap && !rt.isWindows8App && !rt.isWindowsPhone8 && !rt.isBlackberry10;
		case 1:		// iOS
			return rt.isiOS;
		case 2:		// Android
			return rt.isAndroid;
		case 3:		// Windows 8
			return rt.isWindows8App;
		case 4:		// Windows Phone 8
			return rt.isWindowsPhone8;
		case 5:		// Blackberry 10
			return rt.isBlackberry10;
		case 6:		// Tizen
			return rt.isTizen;
		case 7:		// node-webkit
			return rt.isNodeWebkit;
		case 8:		// CocoonJS
			return rt.isCocoonJs;
		case 9:		// PhoneGap
			return rt.isPhoneGap;
		case 10:	// Scirra Arcade
			return rt.isArcade;
		case 11:	// node-webkit
			return rt.isNodeWebkit;
		default:	// should not be possible
			return false;
		}
	};
	var cacheRegex = null;
	var lastRegex = "";
	var lastFlags = "";
	function getRegex(regex_, flags_)
	{
		if (!cacheRegex || regex_ !== lastRegex || flags_ !== lastFlags)
		{
			cacheRegex = new RegExp(regex_, flags_);
			lastRegex = regex_;
			lastFlags = flags_;
		}
		cacheRegex.lastIndex = 0;		// reset
		return cacheRegex;
	};
	SysCnds.prototype.RegexTest = function (str_, regex_, flags_)
	{
		var regex = getRegex(regex_, flags_);
		return regex.test(str_);
	};
	var tmp_arr = [];
	SysCnds.prototype.PickOverlappingPoint = function (obj_, x_, y_)
	{
		if (!obj_)
            return false;
        var sol = obj_.getCurrentSol();
        var instances = sol.getObjects();
		var current_event = this.runtime.getCurrentEventStack().current_event;
		var orblock = current_event.orblock;
		var cnd = this.runtime.getCurrentCondition();
		var i, len, inst, pick;
		if (sol.select_all)
		{
			cr.shallowAssignArray(tmp_arr, instances);
			sol.else_instances.length = 0;
			sol.select_all = false;
			sol.instances.length = 0;
		}
		else
		{
			if (orblock)
			{
				cr.shallowAssignArray(tmp_arr, sol.else_instances);
				sol.else_instances.length = 0;
			}
			else
			{
				cr.shallowAssignArray(tmp_arr, instances);
				sol.instances.length = 0;
			}
		}
		for (i = 0, len = tmp_arr.length; i < len; ++i)
		{
			inst = tmp_arr[i];
			pick = cr.xor(inst.contains_pt(x_, y_), cnd.inverted);
			if (pick)
				sol.instances.push(inst);
			else
				sol.else_instances.push(inst);
		}
		obj_.applySolToContainer();
		return cr.xor(!!sol.instances.length, cnd.inverted);
	};
	sysProto.cnds = new SysCnds();
    function SysActs() {};
    SysActs.prototype.GoToLayout = function(to)
    {
		if (this.runtime.isloading)
			return;		// cannot change layout while loading on loader layout
		if (this.runtime.changelayout)
			return;		// already changing to a different layout
;
        this.runtime.changelayout = to;
    };
    SysActs.prototype.CreateObject = function (obj, layer, x, y)
    {
        if (!layer || !obj)
            return;
        var inst = this.runtime.createInstance(obj, layer, x, y);
		if (!inst)
			return;
		this.runtime.isInOnDestroy++;
		var i, len, s;
		this.runtime.trigger(Object.getPrototypeOf(obj.plugin).cnds.OnCreated, inst);
		if (inst.is_contained)
		{
			for (i = 0, len = inst.siblings.length; i < len; i++)
			{
				s = inst.siblings[i];
				this.runtime.trigger(Object.getPrototypeOf(s.type.plugin).cnds.OnCreated, s);
			}
		}
		this.runtime.isInOnDestroy--;
        var sol = obj.getCurrentSol();
        sol.select_all = false;
		sol.instances.length = 1;
		sol.instances[0] = inst;
		if (inst.is_contained)
		{
			for (i = 0, len = inst.siblings.length; i < len; i++)
			{
				s = inst.siblings[i];
				sol = s.type.getCurrentSol();
				sol.select_all = false;
				sol.instances.length = 1;
				sol.instances[0] = s;
			}
		}
    };
    SysActs.prototype.SetLayerVisible = function (layer, visible_)
    {
        if (!layer)
            return;
		if (layer.visible !== visible_)
		{
			layer.visible = visible_;
			this.runtime.redraw = true;
		}
    };
	SysActs.prototype.SetLayerOpacity = function (layer, opacity_)
	{
		if (!layer)
			return;
		opacity_ = cr.clamp(opacity_ / 100, 0, 1);
		if (layer.opacity !== opacity_)
		{
			layer.opacity = opacity_;
			this.runtime.redraw = true;
		}
	};
	SysActs.prototype.SetLayerScaleRate = function (layer, sr)
	{
		if (!layer)
			return;
		if (layer.zoomRate !== sr)
		{
			layer.zoomRate = sr;
			this.runtime.redraw = true;
		}
	};
	SysActs.prototype.SetLayoutScale = function (s)
	{
		if (!this.runtime.running_layout)
			return;
		if (this.runtime.running_layout.scale !== s)
		{
			this.runtime.running_layout.scale = s;
			this.runtime.running_layout.boundScrolling();
			this.runtime.redraw = true;
		}
	};
    SysActs.prototype.ScrollX = function(x)
    {
        this.runtime.running_layout.scrollToX(x);
    };
    SysActs.prototype.ScrollY = function(y)
    {
        this.runtime.running_layout.scrollToY(y);
    };
    SysActs.prototype.Scroll = function(x, y)
    {
        this.runtime.running_layout.scrollToX(x);
        this.runtime.running_layout.scrollToY(y);
    };
    SysActs.prototype.ScrollToObject = function(obj)
    {
        var inst = obj.getFirstPicked();
        if (inst)
        {
            this.runtime.running_layout.scrollToX(inst.x);
            this.runtime.running_layout.scrollToY(inst.y);
        }
    };
	SysActs.prototype.SetVar = function(v, x)
	{
;
		if (v.vartype === 0)
		{
			if (cr.is_number(x))
				v.setValue(x);
			else
				v.setValue(parseFloat(x));
		}
		else if (v.vartype === 1)
			v.setValue(x.toString());
	};
	SysActs.prototype.AddVar = function(v, x)
	{
;
		if (v.vartype === 0)
		{
			if (cr.is_number(x))
				v.setValue(v.getValue() + x);
			else
				v.setValue(v.getValue() + parseFloat(x));
		}
		else if (v.vartype === 1)
			v.setValue(v.getValue() + x.toString());
	};
	SysActs.prototype.SubVar = function(v, x)
	{
;
		if (v.vartype === 0)
		{
			if (cr.is_number(x))
				v.setValue(v.getValue() - x);
			else
				v.setValue(v.getValue() - parseFloat(x));
		}
	};
    SysActs.prototype.SetGroupActive = function (group, active)
    {
		var activeGroups = this.runtime.activeGroups;
		var groupkey = (/*this.runtime.getCurrentAction().sheet.name + "|" + */group).toLowerCase();
		switch (active) {
		case 0:
			activeGroups[groupkey] = false;
			break;
		case 1:
			activeGroups[groupkey] = true;
			break;
		case 2:
			activeGroups[groupkey] = !activeGroups[groupkey];
			break;
		}
    };
    SysActs.prototype.SetTimescale = function (ts_)
    {
        var ts = ts_;
        if (ts < 0)
            ts = 0;
        this.runtime.timescale = ts;
    };
    SysActs.prototype.SetObjectTimescale = function (obj, ts_)
    {
        var ts = ts_;
        if (ts < 0)
            ts = 0;
        if (!obj)
            return;
        var sol = obj.getCurrentSol();
        var instances = sol.getObjects();
        var i, len;
        for (i = 0, len = instances.length; i < len; i++)
        {
            instances[i].my_timescale = ts;
        }
    };
    SysActs.prototype.RestoreObjectTimescale = function (obj)
    {
        if (!obj)
            return false;
        var sol = obj.getCurrentSol();
        var instances = sol.getObjects();
        var i, len;
        for (i = 0, len = instances.length; i < len; i++)
        {
            instances[i].my_timescale = -1.0;
        }
    };
	var waitobjrecycle = [];
	function allocWaitObject()
	{
		var w;
		if (waitobjrecycle.length)
			w = waitobjrecycle.pop();
		else
		{
			w = {};
			w.sols = {};
			w.solModifiers = [];
		}
		w.deleteme = false;
		return w;
	};
	function freeWaitObject(w)
	{
		cr.wipe(w.sols);
		w.solModifiers.length = 0;
		waitobjrecycle.push(w);
	};
	var solstateobjects = [];
	function allocSolStateObject()
	{
		var s;
		if (solstateobjects.length)
			s = solstateobjects.pop();
		else
		{
			s = {};
			s.insts = [];
		}
		s.sa = false;
		return s;
	};
	function freeSolStateObject(s)
	{
		s.insts.length = 0;
		solstateobjects.push(s);
	};
	SysActs.prototype.Wait = function (seconds)
	{
		if (seconds < 0)
			return;
		var i, len, s, t, ss;
		var evinfo = this.runtime.getCurrentEventStack();
		var waitobj = allocWaitObject();
		waitobj.time = this.runtime.kahanTime.sum + seconds;
		waitobj.ev = evinfo.current_event;
		waitobj.actindex = evinfo.actindex + 1;	// pointing at next action
		for (i = 0, len = this.runtime.types_by_index.length; i < len; i++)
		{
			t = this.runtime.types_by_index[i];
			s = t.getCurrentSol();
			if (s.select_all && evinfo.current_event.solModifiers.indexOf(t) === -1)
				continue;
			waitobj.solModifiers.push(t);
			ss = allocSolStateObject();
			ss.sa = s.select_all;
			cr.shallowAssignArray(ss.insts, s.instances);
			waitobj.sols[i.toString()] = ss;
		}
		this.waits.push(waitobj);
		return true;
	};
	SysActs.prototype.SetLayerScale = function (layer, scale)
    {
        if (!layer)
            return;
		if (layer.scale === scale)
			return;
        layer.scale = scale;
        this.runtime.redraw = true;
    };
	SysActs.prototype.ResetGlobals = function ()
	{
		var i, len, g;
		for (i = 0, len = this.runtime.all_global_vars.length; i < len; i++)
		{
			g = this.runtime.all_global_vars[i];
			g.data = g.initial;
		}
	};
	SysActs.prototype.SetLayoutAngle = function (a)
	{
		a = cr.to_radians(a);
		a = cr.clamp_angle(a);
		if (this.runtime.running_layout)
		{
			if (this.runtime.running_layout.angle !== a)
			{
				this.runtime.running_layout.angle = a;
				this.runtime.redraw = true;
			}
		}
	};
	SysActs.prototype.SetLayerAngle = function (layer, a)
    {
        if (!layer)
            return;
		a = cr.to_radians(a);
		a = cr.clamp_angle(a);
		if (layer.angle === a)
			return;
        layer.angle = a;
        this.runtime.redraw = true;
    };
	SysActs.prototype.SetLayerParallax = function (layer, px, py)
    {
        if (!layer)
            return;
		if (layer.parallaxX === px / 100 && layer.parallaxY === py / 100)
			return;
        layer.parallaxX = px / 100;
		layer.parallaxY = py / 100;
        this.runtime.redraw = true;
    };
	SysActs.prototype.SetLayerBackground = function (layer, c)
    {
        if (!layer)
            return;
		var r = cr.GetRValue(c);
		var g = cr.GetGValue(c);
		var b = cr.GetBValue(c);
		if (layer.background_color[0] === r && layer.background_color[1] === g && layer.background_color[2] === b)
			return;
        layer.background_color[0] = r;
		layer.background_color[1] = g;
		layer.background_color[2] = b;
        this.runtime.redraw = true;
    };
	SysActs.prototype.SetLayerTransparent = function (layer, t)
    {
        if (!layer)
            return;
		if (!!t === !!layer.transparent)
			return;
		layer.transparent = !!t;
        this.runtime.redraw = true;
    };
	SysActs.prototype.StopLoop = function ()
	{
		if (this.runtime.loop_stack_index < 0)
			return;		// no loop currently running
		this.runtime.getCurrentLoop().stopped = true;
	};
	SysActs.prototype.GoToLayoutByName = function (layoutname)
	{
		if (this.runtime.isloading)
			return;		// cannot change layout while loading on loader layout
		if (this.runtime.changelayout)
			return;		// already changing to different layout
;
		var l;
		for (l in this.runtime.layouts)
		{
			if (this.runtime.layouts.hasOwnProperty(l) && cr.equals_nocase(l, layoutname))
			{
				this.runtime.changelayout = this.runtime.layouts[l];
				return;
			}
		}
	};
	SysActs.prototype.RestartLayout = function (layoutname)
	{
		if (this.runtime.isloading)
			return;		// cannot restart loader layouts
		if (this.runtime.changelayout)
			return;		// already changing to a different layout
;
		if (!this.runtime.running_layout)
			return;
		this.runtime.changelayout = this.runtime.running_layout;
		var i, len, g;
		for (i = 0, len = this.runtime.allGroups.length; i < len; i++)
		{
			g = this.runtime.allGroups[i];
			this.runtime.activeGroups[g.group_name.toLowerCase()] = g.initially_activated;
		}
	};
	SysActs.prototype.SnapshotCanvas = function (format_, quality_)
	{
		this.runtime.snapshotCanvas = [format_ === 0 ? "image/png" : "image/jpeg", quality_ / 100];
		this.runtime.redraw = true;		// force redraw so snapshot is always taken
	};
	SysActs.prototype.SetCanvasSize = function (w, h)
	{
		if (w <= 0 || h <= 0)
			return;
		this.runtime["setSize"](w, h);
	};
	SysActs.prototype.SetLayoutEffectEnabled = function (enable_, effectname_)
	{
		if (!this.runtime.running_layout || !this.runtime.glwrap)
			return;
		var et = this.runtime.running_layout.getEffectByName(effectname_);
		if (!et)
			return;		// effect name not found
		var enable = (enable_ === 1);
		if (et.active == enable)
			return;		// no change
		et.active = enable;
		this.runtime.running_layout.updateActiveEffects();
		this.runtime.redraw = true;
	};
	SysActs.prototype.SetLayerEffectEnabled = function (layer, enable_, effectname_)
	{
		if (!layer || !this.runtime.glwrap)
			return;
		var et = layer.getEffectByName(effectname_);
		if (!et)
			return;		// effect name not found
		var enable = (enable_ === 1);
		if (et.active == enable)
			return;		// no change
		et.active = enable;
		layer.updateActiveEffects();
		this.runtime.redraw = true;
	};
	SysActs.prototype.SetLayoutEffectParam = function (effectname_, index_, value_)
	{
		if (!this.runtime.running_layout || !this.runtime.glwrap)
			return;
		var et = this.runtime.running_layout.getEffectByName(effectname_);
		if (!et)
			return;		// effect name not found
		var params = this.runtime.running_layout.effect_params[et.index];
		index_ = Math.floor(index_);
		if (index_ < 0 || index_ >= params.length)
			return;		// effect index out of bounds
		if (this.runtime.glwrap.getProgramParameterType(et.shaderindex, index_) === 1)
			value_ /= 100.0;
		if (params[index_] === value_)
			return;		// no change
		params[index_] = value_;
		if (et.active)
			this.runtime.redraw = true;
	};
	SysActs.prototype.SetLayerEffectParam = function (layer, effectname_, index_, value_)
	{
		if (!layer || !this.runtime.glwrap)
			return;
		var et = layer.getEffectByName(effectname_);
		if (!et)
			return;		// effect name not found
		var params = layer.effect_params[et.index];
		index_ = Math.floor(index_);
		if (index_ < 0 || index_ >= params.length)
			return;		// effect index out of bounds
		if (this.runtime.glwrap.getProgramParameterType(et.shaderindex, index_) === 1)
			value_ /= 100.0;
		if (params[index_] === value_)
			return;		// no change
		params[index_] = value_;
		if (et.active)
			this.runtime.redraw = true;
	};
	SysActs.prototype.SaveState = function (slot_)
	{
		this.runtime.saveToSlot = slot_;
	};
	SysActs.prototype.LoadState = function (slot_)
	{
		this.runtime.loadFromSlot = slot_;
	};
	SysActs.prototype.LoadStateJSON = function (jsonstr_)
	{
		this.runtime.loadFromJson = jsonstr_;
	};
	sysProto.acts = new SysActs();
    function SysExps() {};
    SysExps.prototype["int"] = function(ret, x)
    {
        if (cr.is_string(x))
        {
            ret.set_int(parseInt(x, 10));
            if (isNaN(ret.data))
                ret.data = 0;
        }
        else
            ret.set_int(x);
    };
    SysExps.prototype["float"] = function(ret, x)
    {
        if (cr.is_string(x))
        {
            ret.set_float(parseFloat(x));
            if (isNaN(ret.data))
                ret.data = 0;
        }
        else
            ret.set_float(x);
    };
    SysExps.prototype.str = function(ret, x)
    {
        if (cr.is_string(x))
            ret.set_string(x);
        else
            ret.set_string(x.toString());
    };
    SysExps.prototype.len = function(ret, x)
    {
        ret.set_int(x.length || 0);
    };
    SysExps.prototype.random = function (ret, a, b)
    {
        if (b === undefined)
        {
            ret.set_float(Math.random() * a);
        }
        else
        {
            ret.set_float(Math.random() * (b - a) + a);
        }
    };
    SysExps.prototype.sqrt = function(ret, x)
    {
        ret.set_float(Math.sqrt(x));
    };
    SysExps.prototype.abs = function(ret, x)
    {
        ret.set_float(Math.abs(x));
    };
    SysExps.prototype.round = function(ret, x)
    {
        ret.set_int(Math.round(x));
    };
    SysExps.prototype.floor = function(ret, x)
    {
        ret.set_int(Math.floor(x));
    };
    SysExps.prototype.ceil = function(ret, x)
    {
        ret.set_int(Math.ceil(x));
    };
    SysExps.prototype.sin = function(ret, x)
    {
        ret.set_float(Math.sin(cr.to_radians(x)));
    };
    SysExps.prototype.cos = function(ret, x)
    {
        ret.set_float(Math.cos(cr.to_radians(x)));
    };
    SysExps.prototype.tan = function(ret, x)
    {
        ret.set_float(Math.tan(cr.to_radians(x)));
    };
    SysExps.prototype.asin = function(ret, x)
    {
        ret.set_float(cr.to_degrees(Math.asin(x)));
    };
    SysExps.prototype.acos = function(ret, x)
    {
        ret.set_float(cr.to_degrees(Math.acos(x)));
    };
    SysExps.prototype.atan = function(ret, x)
    {
        ret.set_float(cr.to_degrees(Math.atan(x)));
    };
    SysExps.prototype.exp = function(ret, x)
    {
        ret.set_float(Math.exp(x));
    };
    SysExps.prototype.ln = function(ret, x)
    {
        ret.set_float(Math.log(x));
    };
    SysExps.prototype.log10 = function(ret, x)
    {
        ret.set_float(Math.log(x) / Math.LN10);
    };
    SysExps.prototype.max = function(ret)
    {
		var max_ = arguments[1];
		var i, len;
		for (i = 2, len = arguments.length; i < len; i++)
		{
			if (max_ < arguments[i])
				max_ = arguments[i];
		}
		ret.set_float(max_);
    };
    SysExps.prototype.min = function(ret)
    {
        var min_ = arguments[1];
		var i, len;
		for (i = 2, len = arguments.length; i < len; i++)
		{
			if (min_ > arguments[i])
				min_ = arguments[i];
		}
		ret.set_float(min_);
    };
    SysExps.prototype.dt = function(ret)
    {
        ret.set_float(this.runtime.dt);
    };
    SysExps.prototype.timescale = function(ret)
    {
        ret.set_float(this.runtime.timescale);
    };
    SysExps.prototype.wallclocktime = function(ret)
    {
        ret.set_float((Date.now() - this.runtime.start_time) / 1000.0);
    };
    SysExps.prototype.time = function(ret)
    {
        ret.set_float(this.runtime.kahanTime.sum);
    };
    SysExps.prototype.tickcount = function(ret)
    {
        ret.set_int(this.runtime.tickcount);
    };
    SysExps.prototype.objectcount = function(ret)
    {
        ret.set_int(this.runtime.objectcount);
    };
    SysExps.prototype.fps = function(ret)
    {
        ret.set_int(this.runtime.fps);
    };
    SysExps.prototype.loopindex = function(ret, name_)
    {
		var loop, i, len;
        if (!this.runtime.loop_stack.length)
        {
            ret.set_int(0);
            return;
        }
        if (name_)
        {
            for (i = 0, len = this.runtime.loop_stack.length; i < len; i++)
            {
                loop = this.runtime.loop_stack[i];
                if (loop.name === name_)
                {
                    ret.set_int(loop.index);
                    return;
                }
            }
            ret.set_int(0);
        }
        else
        {
			loop = this.runtime.getCurrentLoop();
			ret.set_int(loop ? loop.index : -1);
        }
    };
    SysExps.prototype.distance = function(ret, x1, y1, x2, y2)
    {
        ret.set_float(cr.distanceTo(x1, y1, x2, y2));
    };
    SysExps.prototype.angle = function(ret, x1, y1, x2, y2)
    {
        ret.set_float(cr.to_degrees(cr.angleTo(x1, y1, x2, y2)));
    };
    SysExps.prototype.scrollx = function(ret)
    {
        ret.set_float(this.runtime.running_layout.scrollX);
    };
    SysExps.prototype.scrolly = function(ret)
    {
        ret.set_float(this.runtime.running_layout.scrollY);
    };
    SysExps.prototype.newline = function(ret)
    {
        ret.set_string("\n");
    };
    SysExps.prototype.lerp = function(ret, a, b, x)
    {
        ret.set_float(cr.lerp(a, b, x));
    };
    SysExps.prototype.windowwidth = function(ret)
    {
        ret.set_int(this.runtime.width);
    };
    SysExps.prototype.windowheight = function(ret)
    {
        ret.set_int(this.runtime.height);
    };
	SysExps.prototype.uppercase = function(ret, str)
	{
		ret.set_string(cr.is_string(str) ? str.toUpperCase() : "");
	};
	SysExps.prototype.lowercase = function(ret, str)
	{
		ret.set_string(cr.is_string(str) ? str.toLowerCase() : "");
	};
	SysExps.prototype.clamp = function(ret, x, l, u)
	{
		if (x < l)
			ret.set_float(l);
		else if (x > u)
			ret.set_float(u);
		else
			ret.set_float(x);
	};
	SysExps.prototype.layerscale = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		if (!layer)
			ret.set_float(0);
		else
			ret.set_float(layer.scale);
	};
	SysExps.prototype.layeropacity = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		if (!layer)
			ret.set_float(0);
		else
			ret.set_float(layer.opacity * 100);
	};
	SysExps.prototype.layerscalerate = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		if (!layer)
			ret.set_float(0);
		else
			ret.set_float(layer.zoomRate);
	};
	SysExps.prototype.layerparallaxx = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		if (!layer)
			ret.set_float(0);
		else
			ret.set_float(layer.parallaxX * 100);
	};
	SysExps.prototype.layerparallaxy = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		if (!layer)
			ret.set_float(0);
		else
			ret.set_float(layer.parallaxY * 100);
	};
	SysExps.prototype.layoutscale = function (ret)
	{
		if (this.runtime.running_layout)
			ret.set_float(this.runtime.running_layout.scale);
		else
			ret.set_float(0);
	};
	SysExps.prototype.layoutangle = function (ret)
	{
		ret.set_float(cr.to_degrees(this.runtime.running_layout.angle));
	};
	SysExps.prototype.layerangle = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		if (!layer)
			ret.set_float(0);
		else
			ret.set_float(cr.to_degrees(layer.angle));
	};
	SysExps.prototype.layoutwidth = function (ret)
	{
		ret.set_int(this.runtime.running_layout.width);
	};
	SysExps.prototype.layoutheight = function (ret)
	{
		ret.set_int(this.runtime.running_layout.height);
	};
	SysExps.prototype.find = function (ret, text, searchstr)
	{
		if (cr.is_string(text) && cr.is_string(searchstr))
			ret.set_int(text.search(new RegExp(cr.regexp_escape(searchstr), "i")));
		else
			ret.set_int(-1);
	};
	SysExps.prototype.left = function (ret, text, n)
	{
		ret.set_string(cr.is_string(text) ? text.substr(0, n) : "");
	};
	SysExps.prototype.right = function (ret, text, n)
	{
		ret.set_string(cr.is_string(text) ? text.substr(text.length - n) : "");
	};
	SysExps.prototype.mid = function (ret, text, index_, length_)
	{
		ret.set_string(cr.is_string(text) ? text.substr(index_, length_) : "");
	};
	SysExps.prototype.tokenat = function (ret, text, index_, sep)
	{
		if (cr.is_string(text) && cr.is_string(sep))
		{
			var arr = text.split(sep);
			var i = cr.floor(index_);
			if (i < 0 || i >= arr.length)
				ret.set_string("");
			else
				ret.set_string(arr[i]);
		}
		else
			ret.set_string("");
	};
	SysExps.prototype.tokencount = function (ret, text, sep)
	{
		if (cr.is_string(text) && text.length)
			ret.set_int(text.split(sep).length);
		else
			ret.set_int(0);
	};
	SysExps.prototype.replace = function (ret, text, find_, replace_)
	{
		if (cr.is_string(text) && cr.is_string(find_) && cr.is_string(replace_))
			ret.set_string(text.replace(new RegExp(cr.regexp_escape(find_), "gi"), replace_));
		else
			ret.set_string(cr.is_string(text) ? text : "");
	};
	SysExps.prototype.trim = function (ret, text)
	{
		ret.set_string(cr.is_string(text) ? text.trim() : "");
	};
	SysExps.prototype.pi = function (ret)
	{
		ret.set_float(cr.PI);
	};
	SysExps.prototype.layoutname = function (ret)
	{
		if (this.runtime.running_layout)
			ret.set_string(this.runtime.running_layout.name);
		else
			ret.set_string("");
	};
	SysExps.prototype.renderer = function (ret)
	{
		ret.set_string(this.runtime.gl ? "webgl" : "canvas2d");
	};
	SysExps.prototype.anglediff = function (ret, a, b)
	{
		ret.set_float(cr.to_degrees(cr.angleDiff(cr.to_radians(a), cr.to_radians(b))));
	};
	SysExps.prototype.choose = function (ret)
	{
		var index = cr.floor(Math.random() * (arguments.length - 1));
		ret.set_any(arguments[index + 1]);
	};
	SysExps.prototype.rgb = function (ret, r, g, b)
	{
		ret.set_int(cr.RGB(r, g, b));
	};
	SysExps.prototype.projectversion = function (ret)
	{
		ret.set_string(this.runtime.versionstr);
	};
	SysExps.prototype.anglelerp = function (ret, a, b, x)
	{
		a = cr.to_radians(a);
		b = cr.to_radians(b);
		var diff = cr.angleDiff(a, b);
		if (cr.angleClockwise(b, a))
		{
			ret.set_float(cr.to_clamped_degrees(a + diff * x));
		}
		else
		{
			ret.set_float(cr.to_clamped_degrees(a - diff * x));
		}
	};
	SysExps.prototype.anglerotate = function (ret, a, b, c)
	{
		a = cr.to_radians(a);
		b = cr.to_radians(b);
		c = cr.to_radians(c);
		ret.set_float(cr.to_clamped_degrees(cr.angleRotate(a, b, c)));
	};
	SysExps.prototype.zeropad = function (ret, n, d)
	{
		var s = (n < 0 ? "-" : "");
		if (n < 0) n = -n;
		var zeroes = d - n.toString().length;
		for (var i = 0; i < zeroes; i++)
			s += "0";
		ret.set_string(s + n.toString());
	};
	SysExps.prototype.cpuutilisation = function (ret)
	{
		ret.set_float(this.runtime.cpuutilisation / 1000);
	};
	SysExps.prototype.viewportleft = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.viewLeft : 0);
	};
	SysExps.prototype.viewporttop = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.viewTop : 0);
	};
	SysExps.prototype.viewportright = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.viewRight : 0);
	};
	SysExps.prototype.viewportbottom = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.viewBottom : 0);
	};
	SysExps.prototype.loadingprogress = function (ret)
	{
		ret.set_float(this.runtime.loadingprogress);
	};
	SysExps.prototype.unlerp = function(ret, a, b, y)
    {
        ret.set_float((y - a) / (b - a));
    };
	SysExps.prototype.canvassnapshot = function (ret)
	{
		ret.set_string(this.runtime.snapshotData);
	};
	SysExps.prototype.urlencode = function (ret, s)
	{
		ret.set_string(encodeURIComponent(s));
	};
	SysExps.prototype.urldecode = function (ret, s)
	{
		ret.set_string(decodeURIComponent(s));
	};
	SysExps.prototype.canvastolayerx = function (ret, layerparam, x, y)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.canvasToLayer(x, y, true) : 0);
	};
	SysExps.prototype.canvastolayery = function (ret, layerparam, x, y)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.canvasToLayer(x, y, false) : 0);
	};
	SysExps.prototype.layertocanvasx = function (ret, layerparam, x, y)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.layerToCanvas(x, y, true) : 0);
	};
	SysExps.prototype.layertocanvasy = function (ret, layerparam, x, y)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.layerToCanvas(x, y, false) : 0);
	};
	SysExps.prototype.savestatejson = function (ret)
	{
		ret.set_string(this.runtime.lastSaveJson);
	};
	SysExps.prototype.imagememoryusage = function (ret)
	{
		if (this.runtime.glwrap)
			ret.set_float(Math.round(100 * this.runtime.glwrap.estimateVRAM() / (1024 * 1024)) / 100);
		else
			ret.set_float(0);
	};
	SysExps.prototype.regexsearch = function (ret, str_, regex_, flags_)
	{
		var regex = getRegex(regex_, flags_);
		ret.set_int(str_ ? str_.search(regex) : -1);
	};
	SysExps.prototype.regexreplace = function (ret, str_, regex_, flags_, replace_)
	{
		var regex = getRegex(regex_, flags_);
		ret.set_string(str_ ? str_.replace(regex, replace_) : "");
	};
	var regexMatches = [];
	var lastMatchesStr = "";
	var lastMatchesRegex = "";
	var lastMatchesFlags = "";
	function updateRegexMatches(str_, regex_, flags_)
	{
		if (str_ === lastMatchesStr && regex_ === lastMatchesRegex && flags_ === lastMatchesFlags)
			return;
		var regex = getRegex(regex_, flags_);
		regexMatches = str_.match(regex);
		lastMatchesStr = str_;
		lastMatchesRegex = regex_;
		lastMatchesFlags = flags_;
	};
	SysExps.prototype.regexmatchcount = function (ret, str_, regex_, flags_)
	{
		var regex = getRegex(regex_, flags_);
		updateRegexMatches(str_, regex_, flags_);
		ret.set_int(regexMatches ? regexMatches.length : 0);
	};
	SysExps.prototype.regexmatchat = function (ret, str_, regex_, flags_, index_)
	{
		index_ = Math.floor(index_);
		var regex = getRegex(regex_, flags_);
		updateRegexMatches(str_, regex_, flags_);
		if (!regexMatches || index_ < 0 || index_ >= regexMatches.length)
			ret.set_string("");
		else
			ret.set_string(regexMatches[index_]);
	};
	SysExps.prototype.infinity = function (ret)
	{
		ret.set_float(Infinity);
	};
	sysProto.exps = new SysExps();
	sysProto.runWaits = function ()
	{
		var i, j, len, w, k, s, ss;
		var evinfo = this.runtime.getCurrentEventStack();
		for (i = 0, len = this.waits.length; i < len; i++)
		{
			w = this.waits[i];
			if (w.time > this.runtime.kahanTime.sum)
				continue;
			evinfo.current_event = w.ev;
			evinfo.actindex = w.actindex;
			evinfo.cndindex = 0;
			for (k in w.sols)
			{
				if (w.sols.hasOwnProperty(k))
				{
					s = this.runtime.types_by_index[parseInt(k, 10)].getCurrentSol();
					ss = w.sols[k];
					s.select_all = ss.sa;
					cr.shallowAssignArray(s.instances, ss.insts);
					freeSolStateObject(ss);
				}
			}
			w.ev.resume_actions_and_subevents();
			this.runtime.clearSol(w.solModifiers);
			w.deleteme = true;
		}
		for (i = 0, j = 0, len = this.waits.length; i < len; i++)
		{
			w = this.waits[i];
			this.waits[j] = w;
			if (w.deleteme)
				freeWaitObject(w);
			else
				j++;
		}
		this.waits.length = j;
	};
}());
;
cr.add_common_aces = function (m)
{
	var pluginProto = m[0].prototype;
	var singleglobal_ = m[1];
	var position_aces = m[3];
	var size_aces = m[4];
	var angle_aces = m[5];
	var appearance_aces = m[6];
	var zorder_aces = m[7];
	var effects_aces = m[8];
    if (!pluginProto.cnds)
        pluginProto.cnds = {};
    if (!pluginProto.acts)
        pluginProto.acts = {};
    if (!pluginProto.exps)
        pluginProto.exps = {};
    var cnds = pluginProto.cnds;
    var acts = pluginProto.acts;
    var exps = pluginProto.exps;
    if (position_aces)
    {
        cnds.CompareX = function (cmp, x)
        {
            return cr.do_cmp(this.x, cmp, x);
        };
        cnds.CompareY = function (cmp, y)
        {
            return cr.do_cmp(this.y, cmp, y);
        };
        cnds.IsOnScreen = function ()
        {
			var layer = this.layer;
            this.update_bbox();
            var bbox = this.bbox;
            return !(bbox.right < layer.viewLeft || bbox.bottom < layer.viewTop || bbox.left > layer.viewRight || bbox.top > layer.viewBottom);
        };
        cnds.IsOutsideLayout = function ()
        {
            this.update_bbox();
            var bbox = this.bbox;
            var layout = this.runtime.running_layout;
            return (bbox.right < 0 || bbox.bottom < 0 || bbox.left > layout.width || bbox.top > layout.height);
        };
		cnds.PickDistance = function (which, x, y)
		{
			var sol = this.getCurrentSol();
			var instances = sol.getObjects();
			if (!instances.length)
				return false;
			var inst = instances[0];
			var pickme = inst;
			var dist = cr.distanceTo(inst.x, inst.y, x, y);
			var i, len, d;
			for (i = 1, len = instances.length; i < len; i++)
			{
				inst = instances[i];
				d = cr.distanceTo(inst.x, inst.y, x, y);
				if ((which === 0 && d < dist) || (which === 1 && d > dist))
				{
					dist = d;
					pickme = inst;
				}
			}
			sol.pick_one(pickme);
			return true;
		};
        acts.SetX = function (x)
        {
            if (this.x !== x)
            {
                this.x = x;
                this.set_bbox_changed();
            }
        };
        acts.SetY = function (y)
        {
            if (this.y !== y)
            {
                this.y = y;
                this.set_bbox_changed();
            }
        };
        acts.SetPos = function (x, y)
        {
            if (this.x !== x || this.y !== y)
            {
                this.x = x;
                this.y = y;
                this.set_bbox_changed();
            }
        };
        acts.SetPosToObject = function (obj, imgpt)
        {
            var inst = obj.getPairedInstance(this);
            if (!inst)
				return;
			var newx, newy;
			if (inst.getImagePoint)
			{
				newx = inst.getImagePoint(imgpt, true);
				newy = inst.getImagePoint(imgpt, false);
			}
			else
			{
				newx = inst.x;
				newy = inst.y;
			}
			if (this.x !== newx || this.y !== newy)
            {
				this.x = newx;
				this.y = newy;
				this.set_bbox_changed();
            }
        };
        acts.MoveForward = function (dist)
        {
            if (dist !== 0)
            {
                this.x += Math.cos(this.angle) * dist;
                this.y += Math.sin(this.angle) * dist;
                this.set_bbox_changed();
            }
        };
        acts.MoveAtAngle = function (a, dist)
        {
            if (dist !== 0)
            {
                this.x += Math.cos(cr.to_radians(a)) * dist;
                this.y += Math.sin(cr.to_radians(a)) * dist;
                this.set_bbox_changed();
            }
        };
        exps.X = function (ret)
        {
            ret.set_float(this.x);
        };
        exps.Y = function (ret)
        {
            ret.set_float(this.y);
        };
        exps.dt = function (ret)
        {
            ret.set_float(this.runtime.getDt(this));
        };
    }
    if (size_aces)
    {
        cnds.CompareWidth = function (cmp, w)
        {
            return cr.do_cmp(this.width, cmp, w);
        };
        cnds.CompareHeight = function (cmp, h)
        {
            return cr.do_cmp(this.height, cmp, h);
        };
        acts.SetWidth = function (w)
        {
            if (this.width !== w)
            {
                this.width = w;
                this.set_bbox_changed();
            }
        };
        acts.SetHeight = function (h)
        {
            if (this.height !== h)
            {
                this.height = h;
                this.set_bbox_changed();
            }
        };
        acts.SetSize = function (w, h)
        {
            if (this.width !== w || this.height !== h)
            {
                this.width = w;
                this.height = h;
                this.set_bbox_changed();
            }
        };
        exps.Width = function (ret)
        {
            ret.set_float(this.width);
        };
        exps.Height = function (ret)
        {
            ret.set_float(this.height);
        };
		exps.BBoxLeft = function (ret)
        {
			this.update_bbox();
            ret.set_float(this.bbox.left);
        };
		exps.BBoxTop = function (ret)
        {
			this.update_bbox();
            ret.set_float(this.bbox.top);
        };
		exps.BBoxRight = function (ret)
        {
			this.update_bbox();
            ret.set_float(this.bbox.right);
        };
		exps.BBoxBottom = function (ret)
        {
			this.update_bbox();
            ret.set_float(this.bbox.bottom);
        };
    }
    if (angle_aces)
    {
        cnds.AngleWithin = function (within, a)
        {
            return cr.angleDiff(this.angle, cr.to_radians(a)) <= cr.to_radians(within);
        };
        cnds.IsClockwiseFrom = function (a)
        {
            return cr.angleClockwise(this.angle, cr.to_radians(a));
        };
		cnds.IsBetweenAngles = function (a, b)
		{
			var lower = cr.to_clamped_radians(a);
			var upper = cr.to_clamped_radians(b);
			var angle = cr.clamp_angle(this.angle);
			var obtuse = (!cr.angleClockwise(upper, lower));
			if (obtuse)
				return !(!cr.angleClockwise(angle, lower) && cr.angleClockwise(angle, upper));
			else
				return cr.angleClockwise(angle, lower) && !cr.angleClockwise(angle, upper);
		};
        acts.SetAngle = function (a)
        {
            var newangle = cr.to_radians(cr.clamp_angle_degrees(a));
            if (isNaN(newangle))
                return;
            if (this.angle !== newangle)
            {
                this.angle = newangle;
                this.set_bbox_changed();
            }
        };
        acts.RotateClockwise = function (a)
        {
            if (a !== 0 && !isNaN(a))
            {
                this.angle += cr.to_radians(a);
                this.angle = cr.clamp_angle(this.angle);
                this.set_bbox_changed();
            }
        };
        acts.RotateCounterclockwise = function (a)
        {
            if (a !== 0 && !isNaN(a))
            {
                this.angle -= cr.to_radians(a);
                this.angle = cr.clamp_angle(this.angle);
                this.set_bbox_changed();
            }
        };
        acts.RotateTowardAngle = function (amt, target)
        {
            var newangle = cr.angleRotate(this.angle, cr.to_radians(target), cr.to_radians(amt));
            if (isNaN(newangle))
                return;
            if (this.angle !== newangle)
            {
                this.angle = newangle;
                this.set_bbox_changed();
            }
        };
        acts.RotateTowardPosition = function (amt, x, y)
        {
            var dx = x - this.x;
            var dy = y - this.y;
            var target = Math.atan2(dy, dx);
            var newangle = cr.angleRotate(this.angle, target, cr.to_radians(amt));
            if (isNaN(newangle))
                return;
            if (this.angle !== newangle)
            {
                this.angle = newangle;
                this.set_bbox_changed();
            }
        };
        acts.SetTowardPosition = function (x, y)
        {
            var dx = x - this.x;
            var dy = y - this.y;
            var newangle = Math.atan2(dy, dx);
            if (isNaN(newangle))
                return;
            if (this.angle !== newangle)
            {
                this.angle = newangle;
                this.set_bbox_changed();
            }
        };
        exps.Angle = function (ret)
        {
            ret.set_float(cr.to_clamped_degrees(this.angle));
        };
    }
    if (!singleglobal_)
    {
        cnds.CompareInstanceVar = function (iv, cmp, val)
        {
            return cr.do_cmp(this.instance_vars[iv], cmp, val);
        };
        cnds.IsBoolInstanceVarSet = function (iv)
        {
            return this.instance_vars[iv];
        };
		cnds.PickInstVarHiLow = function (which, iv)
		{
			var sol = this.getCurrentSol();
			var instances = sol.getObjects();
			if (!instances.length)
				return false;
			var inst = instances[0];
			var pickme = inst;
			var val = inst.instance_vars[iv];
			var i, len, v;
			for (i = 1, len = instances.length; i < len; i++)
			{
				inst = instances[i];
				v = inst.instance_vars[iv];
				if ((which === 0 && v < val) || (which === 1 && v > val))
				{
					val = v;
					pickme = inst;
				}
			}
			sol.pick_one(pickme);
			return true;
		};
		cnds.PickByUID = function (u)
		{
			var i, len, j, inst, families, instances, sol;
			var cnd = this.runtime.getCurrentCondition();
			if (cnd.inverted)
			{
				sol = this.getCurrentSol();
				if (sol.select_all)
				{
					sol.select_all = false;
					sol.instances.length = 0;
					sol.else_instances.length = 0;
					instances = this.instances;
					for (i = 0, len = instances.length; i < len; i++)
					{
						inst = instances[i];
						if (inst.uid === u)
							sol.else_instances.push(inst);
						else
							sol.instances.push(inst);
					}
					return !!sol.instances.length;
				}
				else
				{
					for (i = 0, j = 0, len = sol.instances.length; i < len; i++)
					{
						inst = sol.instances[i];
						sol.instances[j] = inst;
						if (inst.uid === u)
						{
							sol.else_instances.push(inst);
						}
						else
							j++;
					}
					sol.instances.length = j;
					return !!sol.instances.length;
				}
			}
			else
			{
				inst = this.runtime.getObjectByUID(u);
				if (!inst)
					return false;
				sol = this.getCurrentSol();
				if (!sol.select_all && sol.instances.indexOf(inst) === -1)
					return false;		// not picked
				if (this.is_family)
				{
					families = inst.type.families;
					for (i = 0, len = families.length; i < len; i++)
					{
						if (families[i] === this)
						{
							sol.pick_one(inst);
							return true;
						}
					}
				}
				else if (inst.type === this)
				{
					sol.pick_one(inst);
					return true;
				}
				return false;
			}
		};
		cnds.OnCreated = function ()
		{
			return true;
		};
		cnds.OnDestroyed = function ()
		{
			return true;
		};
        acts.SetInstanceVar = function (iv, val)
        {
			var myinstvars = this.instance_vars;
            if (cr.is_number(myinstvars[iv]))
            {
                if (cr.is_number(val))
                    myinstvars[iv] = val;
                else
                    myinstvars[iv] = parseFloat(val);
            }
            else if (cr.is_string(myinstvars[iv]))
            {
                if (cr.is_string(val))
                    myinstvars[iv] = val;
                else
                    myinstvars[iv] = val.toString();
            }
            else
;
        };
        acts.AddInstanceVar = function (iv, val)
        {
			var myinstvars = this.instance_vars;
            if (cr.is_number(myinstvars[iv]))
            {
                if (cr.is_number(val))
                    myinstvars[iv] += val;
                else
                    myinstvars[iv] += parseFloat(val);
            }
            else if (cr.is_string(myinstvars[iv]))
            {
                if (cr.is_string(val))
                    myinstvars[iv] += val;
                else
                    myinstvars[iv] += val.toString();
            }
            else
;
        };
        acts.SubInstanceVar = function (iv, val)
        {
			var myinstvars = this.instance_vars;
            if (cr.is_number(myinstvars[iv]))
            {
                if (cr.is_number(val))
                    myinstvars[iv] -= val;
                else
                    myinstvars[iv] -= parseFloat(val);
            }
            else
;
        };
        acts.SetBoolInstanceVar = function (iv, val)
        {
            this.instance_vars[iv] = val ? 1 : 0;
        };
        acts.ToggleBoolInstanceVar = function (iv)
        {
            this.instance_vars[iv] = 1 - this.instance_vars[iv];
        };
        acts.Destroy = function ()
        {
            this.runtime.DestroyInstance(this);
        };
        exps.Count = function (ret)
        {
			var count = ret.object_class.instances.length;
			var i, len, inst;
			for (i = 0, len = this.runtime.createRow.length; i < len; i++)
			{
				inst = this.runtime.createRow[i];
				if (ret.object_class.is_family)
				{
					if (inst.type.families.indexOf(ret.object_class) >= 0)
						count++;
				}
				else
				{
					if (inst.type === ret.object_class)
						count++;
				}
			}
            ret.set_int(count);
        };
		exps.PickedCount = function (ret)
        {
            ret.set_int(ret.object_class.getCurrentSol().getObjects().length);
        };
		exps.UID = function (ret)
		{
			ret.set_int(this.uid);
		};
		exps.IID = function (ret)
		{
			ret.set_int(this.get_iid());
		};
    }
    if (appearance_aces)
    {
        cnds.IsVisible = function ()
        {
            return this.visible;
        };
        acts.SetVisible = function (v)
        {
			if (!v !== !this.visible)
			{
				this.visible = v;
				this.runtime.redraw = true;
			}
        };
        cnds.CompareOpacity = function (cmp, x)
        {
            return cr.do_cmp(cr.round6dp(this.opacity * 100), cmp, x);
        };
        acts.SetOpacity = function (x)
        {
            var new_opacity = x / 100.0;
            if (new_opacity < 0)
                new_opacity = 0;
            else if (new_opacity > 1)
                new_opacity = 1;
            if (new_opacity !== this.opacity)
            {
                this.opacity = new_opacity;
                this.runtime.redraw = true;
            }
        };
        exps.Opacity = function (ret)
        {
            ret.set_float(cr.round6dp(this.opacity * 100.0));
        };
    }
	if (zorder_aces)
	{
		cnds.IsOnLayer = function (layer_)
		{
			if (!layer_)
				return false;
			return this.layer === layer_;
		};
		cnds.PickTopBottom = function (which_)
		{
			var sol = this.getCurrentSol();
			var instances = sol.getObjects();
			if (!instances.length)
				return false;
			var inst = instances[0];
			var pickme = inst;
			var i, len;
			for (i = 1, len = instances.length; i < len; i++)
			{
				inst = instances[i];
				if (which_ === 0)
				{
					if (inst.layer.index > pickme.layer.index || (inst.layer.index === pickme.layer.index && inst.get_zindex() > pickme.get_zindex()))
					{
						pickme = inst;
					}
				}
				else
				{
					if (inst.layer.index < pickme.layer.index || (inst.layer.index === pickme.layer.index && inst.get_zindex() < pickme.get_zindex()))
					{
						pickme = inst;
					}
				}
			}
			sol.pick_one(pickme);
			return true;
		};
		acts.MoveToTop = function ()
		{
			var zindex = this.get_zindex();
			if (zindex === this.layer.instances.length - 1)
				return;
			cr.arrayRemove(this.layer.instances, zindex);
			this.layer.instances.push(this);
			this.runtime.redraw = true;
			this.layer.zindices_stale = true;
		};
		acts.MoveToBottom = function ()
		{
			var zindex = this.get_zindex();
			if (zindex === 0)
				return;
			cr.arrayRemove(this.layer.instances, zindex);
			this.layer.instances.unshift(this);
			this.runtime.redraw = true;
			this.layer.zindices_stale = true;
		};
		acts.MoveToLayer = function (layerMove)
		{
			if (!layerMove || layerMove == this.layer)
				return;
			cr.arrayRemove(this.layer.instances, this.get_zindex());
			this.layer.zindices_stale = true;
			this.layer = layerMove;
			this.zindex = layerMove.instances.length;
			layerMove.instances.push(this);
			this.runtime.redraw = true;
		};
		acts.ZMoveToObject = function (where_, obj_)
		{
			var isafter = (where_ === 0);
			if (!obj_)
				return;
			var other = obj_.getFirstPicked(this);
			if (!other || other.uid === this.uid)
				return;
			if (this.layer.index !== other.layer.index)
			{
				cr.arrayRemove(this.layer.instances, this.get_zindex());
				this.layer.zindices_stale = true;
				this.layer = other.layer;
				this.zindex = other.layer.instances.length;
				other.layer.instances.push(this);
			}
			var myZ = this.get_zindex();
			var insertZ = other.get_zindex();
			cr.arrayRemove(this.layer.instances, myZ);
			if (myZ < insertZ)
				insertZ--;
			if (isafter)
				insertZ++;
			if (insertZ === this.layer.instances.length)
				this.layer.instances.push(this);
			else
				this.layer.instances.splice(insertZ, 0, this);
			this.layer.zindices_stale = true;
			this.runtime.redraw = true;
		};
		exps.LayerNumber = function (ret)
		{
			ret.set_int(this.layer.number);
		};
		exps.LayerName = function (ret)
		{
			ret.set_string(this.layer.name);
		};
		exps.ZIndex = function (ret)
		{
			ret.set_int(this.get_zindex());
		};
	}
	if (effects_aces)
	{
		acts.SetEffectEnabled = function (enable_, effectname_)
		{
			if (!this.runtime.glwrap)
				return;
			var i = this.type.getEffectIndexByName(effectname_);
			if (i < 0)
				return;		// effect name not found
			var enable = (enable_ === 1);
			if (this.active_effect_flags[i] === enable)
				return;		// no change
			this.active_effect_flags[i] = enable;
			this.updateActiveEffects();
			this.runtime.redraw = true;
		};
		acts.SetEffectParam = function (effectname_, index_, value_)
		{
			if (!this.runtime.glwrap)
				return;
			var i = this.type.getEffectIndexByName(effectname_);
			if (i < 0)
				return;		// effect name not found
			var et = this.type.effect_types[i];
			var params = this.effect_params[i];
			index_ = Math.floor(index_);
			if (index_ < 0 || index_ >= params.length)
				return;		// effect index out of bounds
			if (this.runtime.glwrap.getProgramParameterType(et.shaderindex, index_) === 1)
				value_ /= 100.0;
			if (params[index_] === value_)
				return;		// no change
			params[index_] = value_;
			if (et.active)
				this.runtime.redraw = true;
		};
	}
};
cr.set_bbox_changed = function ()
{
    this.bbox_changed = true;       // will recreate next time box requested
    this.runtime.redraw = true;     // assume runtime needs to redraw
	var i, len;
	for (i = 0, len = this.bbox_changed_callbacks.length; i < len; i++)
	{
		this.bbox_changed_callbacks[i](this);
	}
};
cr.add_bbox_changed_callback = function (f)
{
	if (f)
		this.bbox_changed_callbacks.push(f);
};
cr.update_bbox = function ()
{
    if (!this.bbox_changed)
        return;                 // bounding box not changed
    this.bbox.set(this.x, this.y, this.x + this.width, this.y + this.height);
    this.bbox.offset(-this.hotspotX * this.width, -this.hotspotY * this.height);
    if (!this.angle)
    {
        this.bquad.set_from_rect(this.bbox);    // make bounding quad from box
    }
    else
    {
        this.bbox.offset(-this.x, -this.y);       					// translate to origin
        this.bquad.set_from_rotated_rect(this.bbox, this.angle);	// rotate around origin
        this.bquad.offset(this.x, this.y);      					// translate back to original position
        this.bquad.bounding_box(this.bbox);
    }
	var temp = 0;
	if (this.bbox.left > this.bbox.right)
	{
		temp = this.bbox.left;
		this.bbox.left = this.bbox.right;
		this.bbox.right = temp;
	}
	if (this.bbox.top > this.bbox.bottom)
	{
		temp = this.bbox.top;
		this.bbox.top = this.bbox.bottom;
		this.bbox.bottom = temp;
	}
    this.bbox_changed = false;  // bounding box up to date
};
cr.inst_contains_pt = function (x, y)
{
	if (!this.bbox.contains_pt(x, y))
		return false;
	if (!this.bquad.contains_pt(x, y))
		return false;
	if (this.collision_poly && !this.collision_poly.is_empty())
	{
		this.collision_poly.cache_poly(this.width, this.height, this.angle);
		return this.collision_poly.contains_pt(x - this.x, y - this.y);
	}
	else
		return true;
};
cr.inst_get_iid = function ()
{
	this.type.updateIIDs();
	return this.iid;
};
cr.inst_get_zindex = function ()
{
	this.layer.updateZIndices();
	return this.zindex;
};
cr.inst_updateActiveEffects = function ()
{
	this.active_effect_types.length = 0;
	var i, len, et, inst;
	for (i = 0, len = this.active_effect_flags.length; i < len; i++)
	{
		if (this.active_effect_flags[i])
			this.active_effect_types.push(this.type.effect_types[i]);
	}
	this.uses_shaders = !!this.active_effect_types.length;
};
cr.inst_toString = function ()
{
	return "Inst" + this.puid;
};
cr.type_getFirstPicked = function (frominst)
{
	if (frominst && frominst.is_contained && frominst.type != this)
	{
		var i, len, s;
		for (i = 0, len = frominst.siblings.length; i < len; i++)
		{
			s = frominst.siblings[i];
			if (s.type == this)
				return s;
		}
	}
    var instances = this.getCurrentSol().getObjects();
    if (instances.length)
        return instances[0];
    else
        return null;
};
cr.type_getPairedInstance = function (inst)
{
	var instances = this.getCurrentSol().getObjects();
	if (instances.length)
		return instances[inst.get_iid() % instances.length];
	else
		return null;
};
cr.type_updateIIDs = function ()
{
	if (!this.stale_iids || this.is_family)
		return;		// up to date or is family - don't want family to overwrite IIDs
	var i, len;
	for (i = 0, len = this.instances.length; i < len; i++)
		this.instances[i].iid = i;
	var next_iid = i;
	var createRow = this.runtime.createRow;
	for (i = 0, len = createRow.length; i < len; ++i)
	{
		if (createRow[i].type === this)
			createRow[i].iid = next_iid++;
	}
	this.stale_iids = false;
};
cr.type_getCurrentSol = function ()
{
    return this.solstack[this.cur_sol];
};
cr.type_pushCleanSol = function ()
{
    this.cur_sol++;
    if (this.cur_sol === this.solstack.length)
        this.solstack.push(new cr.selection(this));
    else
        this.solstack[this.cur_sol].select_all = true;  // else clear next SOL
};
cr.type_pushCopySol = function ()
{
    this.cur_sol++;
    if (this.cur_sol === this.solstack.length)
        this.solstack.push(new cr.selection(this));
    var clonesol = this.solstack[this.cur_sol];
    var prevsol = this.solstack[this.cur_sol - 1];
    if (prevsol.select_all)
        clonesol.select_all = true;
    else
    {
        clonesol.select_all = false;
		cr.shallowAssignArray(clonesol.instances, prevsol.instances);
		cr.shallowAssignArray(clonesol.else_instances, prevsol.else_instances);
    }
};
cr.type_popSol = function ()
{
;
    this.cur_sol--;
};
cr.type_getBehaviorByName = function (behname)
{
    var i, len, j, lenj, f, index = 0;
	if (!this.is_family)
	{
		for (i = 0, len = this.families.length; i < len; i++)
		{
			f = this.families[i];
			for (j = 0, lenj = f.behaviors.length; j < lenj; j++)
			{
				if (behname === f.behaviors[j].name)
				{
					this.extra.lastBehIndex = index;
					return f.behaviors[j];
				}
				index++;
			}
		}
	}
    for (i = 0, len = this.behaviors.length; i < len; i++) {
        if (behname === this.behaviors[i].name)
		{
			this.extra.lastBehIndex = index;
            return this.behaviors[i];
		}
		index++;
    }
	return null;
};
cr.type_getBehaviorIndexByName = function (behname)
{
    var b = this.getBehaviorByName(behname);
	if (b)
		return this.extra.lastBehIndex;
	else
		return -1;
};
cr.type_getEffectIndexByName = function (name_)
{
	var i, len;
	for (i = 0, len = this.effect_types.length; i < len; i++)
	{
		if (this.effect_types[i].name === name_)
			return i;
	}
	return -1;
};
cr.type_applySolToContainer = function ()
{
	if (!this.is_contained || this.is_family)
		return;
	var i, len, j, lenj, t, sol, sol2;
	this.updateIIDs();
	sol = this.getCurrentSol();
	var select_all = sol.select_all;
	var es = this.runtime.getCurrentEventStack();
	var orblock = es && es.current_event && es.current_event.orblock;
	for (i = 0, len = this.container.length; i < len; i++)
	{
		t = this.container[i];
		if (t === this)
			continue;
		t.updateIIDs();
		sol2 = t.getCurrentSol();
		sol2.select_all = select_all;
		if (!select_all)
		{
			sol2.instances.length = sol.instances.length;
			for (j = 0, lenj = sol.instances.length; j < lenj; j++)
				sol2.instances[j] = t.instances[sol.instances[j].iid];
			if (orblock)
			{
				sol2.else_instances.length = sol.else_instances.length;
				for (j = 0, lenj = sol.else_instances.length; j < lenj; j++)
					sol2.else_instances[j] = t.instances[sol.else_instances[j].iid];
			}
		}
	}
};
cr.type_toString = function ()
{
	return "Type" + this.sid;
};
cr.do_cmp = function (x, cmp, y)
{
	if (typeof x === "undefined" || typeof y === "undefined")
		return false;
    switch (cmp)
    {
        case 0:     // equal
            return x === y;
        case 1:     // not equal
            return x !== y;
        case 2:     // less
            return x < y;
        case 3:     // less/equal
            return x <= y;
        case 4:     // greater
            return x > y;
        case 5:     // greater/equal
            return x >= y;
        default:
;
            return false;
    }
};
cr.shaders = {};
;
;
cr.plugins_.Audio = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Audio.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	var audRuntime = null;
	var audInst = null;
	var audTag = "";
	var appPath = "";			// for PhoneGap only
	var API_HTML5 = 0;
	var API_WEBAUDIO = 1;
	var API_PHONEGAP = 2;
	var API_APPMOBI = 3;
	var api = API_HTML5;
	var context = null;
	var audioBuffers = [];		// cache of buffers
	var audioInstances = [];	// cache of instances
	var lastAudio = null;
	var useOgg = false;			// determined at create time
	var timescale_mode = 0;
	var silent = false;
	var masterVolume = 1;
	var listenerX = 0;
	var listenerY = 0;
	var panningModel = 1;		// HRTF
	var distanceModel = 1;		// Inverse
	var refDistance = 10;
	var maxDistance = 10000;
	var rolloffFactor = 1;
	var micSource = null;
	var micTag = "";
	function dbToLinear(x)
	{
		var v = dbToLinear_nocap(x);
		if (v < 0)
			v = 0;
		if (v > 1)
			v = 1;
		return v;
	};
	function linearToDb(x)
	{
		if (x < 0)
			x = 0;
		if (x > 1)
			x = 1;
		return linearToDb_nocap(x);
	};
	function dbToLinear_nocap(x)
	{
		return Math.pow(10, x / 20);
	};
	function linearToDb_nocap(x)
	{
		return (Math.log(x) / Math.log(10)) * 20;
	};
	var effects = {};
	function getDestinationForTag(tag)
	{
		tag = tag.toLowerCase();
		if (effects.hasOwnProperty(tag))
		{
			if (effects[tag].length)
				return effects[tag][0].getInputNode();
		}
		return context["destination"];
	};
	function createGain()
	{
		if (context["createGain"])
			return context["createGain"]();
		else
			return context["createGainNode"]();
	};
	function createDelay(d)
	{
		if (context["createDelay"])
			return context["createDelay"](d);
		else
			return context["createDelayNode"](d);
	};
	function startSource(s)
	{
		if (s["start"])
			s["start"](0);
		else
			s["noteOn"](0);
	};
	function startSourceAt(s, x, d)
	{
		if (s["start"])
			s["start"](0, x);
		else
			s["noteGrainOn"](0, x, d - x);
	};
	function stopSource(s)
	{
		try {
			if (s["stop"])
				s["stop"](0);
			else
				s["noteOff"](0);
		}
		catch (e) {}
	};
	function setAudioParam(ap, value, ramp, time)
	{
		if (!ap)
			return;		// iOS is missing some parameters
		ap["cancelScheduledValues"](0);
		if (time === 0)
		{
			ap["value"] = value;
			return;
		}
		var curTime = context["currentTime"];
		time += curTime;
		switch (ramp) {
		case 0:		// step
			ap["setValueAtTime"](value, time);
			break;
		case 1:		// linear
			ap["setValueAtTime"](ap["value"], curTime);		// to set what to ramp from
			ap["linearRampToValueAtTime"](value, time);
			break;
		case 2:		// exponential
			ap["setValueAtTime"](ap["value"], curTime);		// to set what to ramp from
			ap["exponentialRampToValueAtTime"](value, time);
			break;
		}
	};
	var filterTypes = ["lowpass", "highpass", "bandpass", "lowshelf", "highshelf", "peaking", "notch", "allpass"];
	function FilterEffect(type, freq, detune, q, gain, mix)
	{
		this.type = "filter";
		this.params = [type, freq, detune, q, gain, mix];
		this.inputNode = createGain();
		this.wetNode = createGain();
		this.wetNode["gain"]["value"] = mix;
		this.dryNode = createGain();
		this.dryNode["gain"]["value"] = 1 - mix;
		this.filterNode = context["createBiquadFilter"]();
		if (typeof this.filterNode["type"] === "number")
			this.filterNode["type"] = type;
		else
			this.filterNode["type"] = filterTypes[type];
		this.filterNode["frequency"]["value"] = freq;
		if (this.filterNode["detune"])		// iOS 6 doesn't have detune yet
			this.filterNode["detune"]["value"] = detune;
		this.filterNode["Q"]["value"] = q;
		this.filterNode["gain"]["value"] = gain;
		this.inputNode["connect"](this.filterNode);
		this.inputNode["connect"](this.dryNode);
		this.filterNode["connect"](this.wetNode);
	};
	FilterEffect.prototype.connectTo = function (node)
	{
		this.wetNode["disconnect"]();
		this.wetNode["connect"](node);
		this.dryNode["disconnect"]();
		this.dryNode["connect"](node);
	};
	FilterEffect.prototype.remove = function ()
	{
		this.inputNode["disconnect"]();
		this.filterNode["disconnect"]();
		this.wetNode["disconnect"]();
		this.dryNode["disconnect"]();
	};
	FilterEffect.prototype.getInputNode = function ()
	{
		return this.inputNode;
	};
	FilterEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 0:		// mix
			value = value / 100;
			if (value < 0) value = 0;
			if (value > 1) value = 1;
			this.params[4] = value;
			setAudioParam(this.wetNode["gain"], value, ramp, time);
			setAudioParam(this.dryNode["gain"], 1 - value, ramp, time);
			break;
		case 1:		// filter frequency
			this.params[0] = value;
			setAudioParam(this.filterNode["frequency"], value, ramp, time);
			break;
		case 2:		// filter detune
			this.params[1] = value;
			setAudioParam(this.filterNode["detune"], value, ramp, time);
			break;
		case 3:		// filter Q
			this.params[2] = value;
			setAudioParam(this.filterNode["Q"], value, ramp, time);
			break;
		case 4:		// filter/delay gain (note value is in dB here)
			this.params[3] = value;
			setAudioParam(this.filterNode["gain"], value, ramp, time);
			break;
		}
	};
	function DelayEffect(delayTime, delayGain, mix)
	{
		this.type = "delay";
		this.params = [delayTime, delayGain, mix];
		this.inputNode = createGain();
		this.wetNode = createGain();
		this.wetNode["gain"]["value"] = mix;
		this.dryNode = createGain();
		this.dryNode["gain"]["value"] = 1 - mix;
		this.mainNode = createGain();
		this.delayNode = createDelay(delayTime);
		this.delayNode["delayTime"]["value"] = delayTime;
		this.delayGainNode = createGain();
		this.delayGainNode["gain"]["value"] = delayGain;
		this.inputNode["connect"](this.mainNode);
		this.inputNode["connect"](this.dryNode);
		this.mainNode["connect"](this.wetNode);
		this.mainNode["connect"](this.delayNode);
		this.delayNode["connect"](this.delayGainNode);
		this.delayGainNode["connect"](this.mainNode);
	};
	DelayEffect.prototype.connectTo = function (node)
	{
		this.wetNode["disconnect"]();
		this.wetNode["connect"](node);
		this.dryNode["disconnect"]();
		this.dryNode["connect"](node);
	};
	DelayEffect.prototype.remove = function ()
	{
		this.inputNode["disconnect"]();
		this.mainNode["disconnect"]();
		this.delayNode["disconnect"]();
		this.delayGainNode["disconnect"]();
		this.wetNode["disconnect"]();
		this.dryNode["disconnect"]();
	};
	DelayEffect.prototype.getInputNode = function ()
	{
		return this.inputNode;
	};
	DelayEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 0:		// mix
			value = value / 100;
			if (value < 0) value = 0;
			if (value > 1) value = 1;
			this.params[2] = value;
			setAudioParam(this.wetNode["gain"], value, ramp, time);
			setAudioParam(this.dryNode["gain"], 1 - value, ramp, time);
			break;
		case 4:		// filter/delay gain (note value is passed in dB but needs to be linear here)
			this.params[1] = dbToLinear(value);
			setAudioParam(this.delayGainNode["gain"], dbToLinear(value), ramp, time);
			break;
		case 5:		// delay time
			this.params[0] = value;
			setAudioParam(this.delayNode["delayTime"], value, ramp, time);
			break;
		}
	};
	function ConvolveEffect(buffer, normalize, mix, src)
	{
		this.type = "convolve";
		this.params = [normalize, mix, src];
		this.inputNode = createGain();
		this.wetNode = createGain();
		this.wetNode["gain"]["value"] = mix;
		this.dryNode = createGain();
		this.dryNode["gain"]["value"] = 1 - mix;
		this.convolveNode = context["createConvolver"]();
		if (buffer)
		{
			this.convolveNode["normalize"] = normalize;
			this.convolveNode["buffer"] = buffer;
		}
		this.inputNode["connect"](this.convolveNode);
		this.inputNode["connect"](this.dryNode);
		this.convolveNode["connect"](this.wetNode);
	};
	ConvolveEffect.prototype.connectTo = function (node)
	{
		this.wetNode["disconnect"]();
		this.wetNode["connect"](node);
		this.dryNode["disconnect"]();
		this.dryNode["connect"](node);
	};
	ConvolveEffect.prototype.remove = function ()
	{
		this.inputNode["disconnect"]();
		this.convolveNode["disconnect"]();
		this.wetNode["disconnect"]();
		this.dryNode["disconnect"]();
	};
	ConvolveEffect.prototype.getInputNode = function ()
	{
		return this.inputNode;
	};
	ConvolveEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 0:		// mix
			value = value / 100;
			if (value < 0) value = 0;
			if (value > 1) value = 1;
			this.params[1] = value;
			setAudioParam(this.wetNode["gain"], value, ramp, time);
			setAudioParam(this.dryNode["gain"], 1 - value, ramp, time);
			break;
		}
	};
	function FlangerEffect(delay, modulation, freq, feedback, mix)
	{
		this.type = "flanger";
		this.params = [delay, modulation, freq, feedback, mix];
		this.inputNode = createGain();
		this.dryNode = createGain();
		this.dryNode["gain"]["value"] = 1 - (mix / 2);
		this.wetNode = createGain();
		this.wetNode["gain"]["value"] = mix / 2;
		this.feedbackNode = createGain();
		this.feedbackNode["gain"]["value"] = feedback;
		this.delayNode = createDelay(delay + modulation);
		this.delayNode["delayTime"]["value"] = delay;
		this.oscNode = context["createOscillator"]();
		this.oscNode["frequency"]["value"] = freq;
		this.oscGainNode = createGain();
		this.oscGainNode["gain"]["value"] = modulation;
		this.inputNode["connect"](this.delayNode);
		this.inputNode["connect"](this.dryNode);
		this.delayNode["connect"](this.wetNode);
		this.delayNode["connect"](this.feedbackNode);
		this.feedbackNode["connect"](this.delayNode);
		this.oscNode["connect"](this.oscGainNode);
		this.oscGainNode["connect"](this.delayNode["delayTime"]);
		startSource(this.oscNode);
	};
	FlangerEffect.prototype.connectTo = function (node)
	{
		this.dryNode["disconnect"]();
		this.dryNode["connect"](node);
		this.wetNode["disconnect"]();
		this.wetNode["connect"](node);
	};
	FlangerEffect.prototype.remove = function ()
	{
		this.inputNode["disconnect"]();
		this.delayNode["disconnect"]();
		this.oscNode["disconnect"]();
		this.oscGainNode["disconnect"]();
		this.dryNode["disconnect"]();
		this.wetNode["disconnect"]();
		this.feedbackNode["disconnect"]();
	};
	FlangerEffect.prototype.getInputNode = function ()
	{
		return this.inputNode;
	};
	FlangerEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 0:		// mix
			value = value / 100;
			if (value < 0) value = 0;
			if (value > 1) value = 1;
			this.params[4] = value;
			setAudioParam(this.wetNode["gain"], value / 2, ramp, time);
			setAudioParam(this.dryNode["gain"], 1 - (value / 2), ramp, time);
			break;
		case 6:		// modulation
			this.params[1] = value / 1000;
			setAudioParam(this.oscGainNode["gain"], value / 1000, ramp, time);
			break;
		case 7:		// modulation frequency
			this.params[2] = value;
			setAudioParam(this.oscNode["frequency"], value, ramp, time);
			break;
		case 8:		// feedback
			this.params[3] = value / 100;
			setAudioParam(this.feedbackNode["gain"], value / 100, ramp, time);
			break;
		}
	};
	function PhaserEffect(freq, detune, q, modulation, modfreq, mix)
	{
		this.type = "phaser";
		this.params = [freq, detune, q, modulation, modfreq, mix];
		this.inputNode = createGain();
		this.dryNode = createGain();
		this.dryNode["gain"]["value"] = 1 - (mix / 2);
		this.wetNode = createGain();
		this.wetNode["gain"]["value"] = mix / 2;
		this.filterNode = context["createBiquadFilter"]();
		if (typeof this.filterNode["type"] === "number")
			this.filterNode["type"] = 7;	// all-pass
		else
			this.filterNode["type"] = "allpass";
		this.filterNode["frequency"]["value"] = freq;
		if (this.filterNode["detune"])		// iOS 6 doesn't have detune yet
			this.filterNode["detune"]["value"] = detune;
		this.filterNode["Q"]["value"] = q;
		this.oscNode = context["createOscillator"]();
		this.oscNode["frequency"]["value"] = modfreq;
		this.oscGainNode = createGain();
		this.oscGainNode["gain"]["value"] = modulation;
		this.inputNode["connect"](this.filterNode);
		this.inputNode["connect"](this.dryNode);
		this.filterNode["connect"](this.wetNode);
		this.oscNode["connect"](this.oscGainNode);
		this.oscGainNode["connect"](this.filterNode["frequency"]);
		startSource(this.oscNode);
	};
	PhaserEffect.prototype.connectTo = function (node)
	{
		this.dryNode["disconnect"]();
		this.dryNode["connect"](node);
		this.wetNode["disconnect"]();
		this.wetNode["connect"](node);
	};
	PhaserEffect.prototype.remove = function ()
	{
		this.inputNode["disconnect"]();
		this.filterNode["disconnect"]();
		this.oscNode["disconnect"]();
		this.oscGainNode["disconnect"]();
		this.dryNode["disconnect"]();
		this.wetNode["disconnect"]();
	};
	PhaserEffect.prototype.getInputNode = function ()
	{
		return this.inputNode;
	};
	PhaserEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 0:		// mix
			value = value / 100;
			if (value < 0) value = 0;
			if (value > 1) value = 1;
			this.params[5] = value;
			setAudioParam(this.wetNode["gain"], value / 2, ramp, time);
			setAudioParam(this.dryNode["gain"], 1 - (value / 2), ramp, time);
			break;
		case 1:		// filter frequency
			this.params[0] = value;
			setAudioParam(this.filterNode["frequency"], value, ramp, time);
			break;
		case 2:		// filter detune
			this.params[1] = value;
			setAudioParam(this.filterNode["detune"], value, ramp, time);
			break;
		case 3:		// filter Q
			this.params[2] = value;
			setAudioParam(this.filterNode["Q"], value, ramp, time);
			break;
		case 6:		// modulation
			this.params[3] = value;
			setAudioParam(this.oscGainNode["gain"], value, ramp, time);
			break;
		case 7:		// modulation frequency
			this.params[4] = value;
			setAudioParam(this.oscNode["frequency"], value, ramp, time);
			break;
		}
	};
	function GainEffect(g)
	{
		this.type = "gain";
		this.params = [g];
		this.node = createGain();
		this.node["gain"]["value"] = g;
	};
	GainEffect.prototype.connectTo = function (node_)
	{
		this.node["disconnect"]();
		this.node["connect"](node_);
	};
	GainEffect.prototype.remove = function ()
	{
		this.node["disconnect"]();
	};
	GainEffect.prototype.getInputNode = function ()
	{
		return this.node;
	};
	GainEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 4:		// gain
			this.params[0] = dbToLinear(value);
			setAudioParam(this.node["gain"], dbToLinear(value), ramp, time);
			break;
		}
	};
	function TremoloEffect(freq, mix)
	{
		this.type = "tremolo";
		this.params = [freq, mix];
		this.node = createGain();
		this.node["gain"]["value"] = 1 - (mix / 2);
		this.oscNode = context["createOscillator"]();
		this.oscNode["frequency"]["value"] = freq;
		this.oscGainNode = createGain();
		this.oscGainNode["gain"]["value"] = mix / 2;
		this.oscNode["connect"](this.oscGainNode);
		this.oscGainNode["connect"](this.node["gain"]);
		startSource(this.oscNode);
	};
	TremoloEffect.prototype.connectTo = function (node_)
	{
		this.node["disconnect"]();
		this.node["connect"](node_);
	};
	TremoloEffect.prototype.remove = function ()
	{
		this.oscNode["disconnect"]();
		this.oscGainNode["disconnect"]();
		this.node["disconnect"]();
	};
	TremoloEffect.prototype.getInputNode = function ()
	{
		return this.node;
	};
	TremoloEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 0:		// mix
			value = value / 100;
			if (value < 0) value = 0;
			if (value > 1) value = 1;
			this.params[1] = value;
			setAudioParam(this.node["gain"]["value"], 1 - (value / 2), ramp, time);
			setAudioParam(this.oscGainNode["gain"]["value"], value / 2, ramp, time);
			break;
		case 7:		// modulation frequency
			this.params[0] = value;
			setAudioParam(this.oscNode["frequency"], value, ramp, time);
			break;
		}
	};
	function RingModulatorEffect(freq, mix)
	{
		this.type = "ringmod";
		this.params = [freq, mix];
		this.inputNode = createGain();
		this.wetNode = createGain();
		this.wetNode["gain"]["value"] = mix;
		this.dryNode = createGain();
		this.dryNode["gain"]["value"] = 1 - mix;
		this.ringNode = createGain();
		this.ringNode["gain"]["value"] = 0;
		this.oscNode = context["createOscillator"]();
		this.oscNode["frequency"]["value"] = freq;
		this.oscNode["connect"](this.ringNode["gain"]);
		startSource(this.oscNode);
		this.inputNode["connect"](this.ringNode);
		this.inputNode["connect"](this.dryNode);
		this.ringNode["connect"](this.wetNode);
	};
	RingModulatorEffect.prototype.connectTo = function (node_)
	{
		this.wetNode["disconnect"]();
		this.wetNode["connect"](node_);
		this.dryNode["disconnect"]();
		this.dryNode["connect"](node_);
	};
	RingModulatorEffect.prototype.remove = function ()
	{
		this.oscNode["disconnect"]();
		this.ringNode["disconnect"]();
		this.inputNode["disconnect"]();
		this.wetNode["disconnect"]();
		this.dryNode["disconnect"]();
	};
	RingModulatorEffect.prototype.getInputNode = function ()
	{
		return this.inputNode;
	};
	RingModulatorEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 0:		// mix
			value = value / 100;
			if (value < 0) value = 0;
			if (value > 1) value = 1;
			this.params[1] = value;
			setAudioParam(this.wetNode["gain"], value, ramp, time);
			setAudioParam(this.dryNode["gain"], 1 - value, ramp, time);
			break;
		case 7:		// modulation frequency
			this.params[0] = value;
			setAudioParam(this.oscNode["frequency"], value, ramp, time);
			break;
		}
	};
	function DistortionEffect(threshold, headroom, drive, makeupgain, mix)
	{
		this.type = "distortion";
		this.params = [threshold, headroom, drive, makeupgain, mix];
		this.inputNode = createGain();
		this.preGain = createGain();
		this.postGain = createGain();
		this.setDrive(drive, dbToLinear_nocap(makeupgain));
		this.wetNode = createGain();
		this.wetNode["gain"]["value"] = mix;
		this.dryNode = createGain();
		this.dryNode["gain"]["value"] = 1 - mix;
		this.waveShaper = context["createWaveShaper"]();
		this.curve = new Float32Array(65536);
		this.generateColortouchCurve(threshold, headroom);
		this.waveShaper.curve = this.curve;
		this.inputNode["connect"](this.preGain);
		this.inputNode["connect"](this.dryNode);
		this.preGain["connect"](this.waveShaper);
		this.waveShaper["connect"](this.postGain);
		this.postGain["connect"](this.wetNode);
	};
	DistortionEffect.prototype.setDrive = function (drive, makeupgain)
	{
		if (drive < 0.01)
			drive = 0.01;
		this.preGain["gain"]["value"] = drive;
		this.postGain["gain"]["value"] = Math.pow(1 / drive, 0.6) * makeupgain;
	};
	function e4(x, k)
	{
		return 1.0 - Math.exp(-k * x);
	}
	DistortionEffect.prototype.shape = function (x, linearThreshold, linearHeadroom)
	{
		var maximum = 1.05 * linearHeadroom * linearThreshold;
		var kk = (maximum - linearThreshold);
		var sign = x < 0 ? -1 : +1;
		var absx = x < 0 ? -x : x;
		var shapedInput = absx < linearThreshold ? absx : linearThreshold + kk * e4(absx - linearThreshold, 1.0 / kk);
		shapedInput *= sign;
		return shapedInput;
	};
	DistortionEffect.prototype.generateColortouchCurve = function (threshold, headroom)
	{
		var linearThreshold = dbToLinear_nocap(threshold);
		var linearHeadroom = dbToLinear_nocap(headroom);
		var n = 65536;
		var n2 = n / 2;
		var x = 0;
		for (var i = 0; i < n2; ++i) {
			x = i / n2;
			x = this.shape(x, linearThreshold, linearHeadroom);
			this.curve[n2 + i] = x;
			this.curve[n2 - i - 1] = -x;
		}
	};
	DistortionEffect.prototype.connectTo = function (node)
	{
		this.wetNode["disconnect"]();
		this.wetNode["connect"](node);
		this.dryNode["disconnect"]();
		this.dryNode["connect"](node);
	};
	DistortionEffect.prototype.remove = function ()
	{
		this.inputNode["disconnect"]();
		this.preGain["disconnect"]();
		this.waveShaper["disconnect"]();
		this.postGain["disconnect"]();
		this.wetNode["disconnect"]();
		this.dryNode["disconnect"]();
	};
	DistortionEffect.prototype.getInputNode = function ()
	{
		return this.inputNode;
	};
	DistortionEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 0:		// mix
			value = value / 100;
			if (value < 0) value = 0;
			if (value > 1) value = 1;
			this.params[4] = value;
			setAudioParam(this.wetNode["gain"], value, ramp, time);
			setAudioParam(this.dryNode["gain"], 1 - value, ramp, time);
			break;
		}
	};
	function CompressorEffect(threshold, knee, ratio, attack, release)
	{
		this.type = "compressor";
		this.params = [threshold, knee, ratio, attack, release];
		this.node = context["createDynamicsCompressor"]();
		this.node["threshold"]["value"] = threshold;
		this.node["knee"]["value"] = knee;
		this.node["ratio"]["value"] = ratio;
		this.node["attack"]["value"] = attack;
		this.node["release"]["value"] = release;
	};
	CompressorEffect.prototype.connectTo = function (node_)
	{
		this.node["disconnect"]();
		this.node["connect"](node_);
	};
	CompressorEffect.prototype.remove = function ()
	{
		this.node["disconnect"]();
	};
	CompressorEffect.prototype.getInputNode = function ()
	{
		return this.node;
	};
	CompressorEffect.prototype.setParam = function(param, value, ramp, time)
	{
	};
	function AnalyserEffect(fftSize, smoothing)
	{
		this.type = "analyser";
		this.params = [fftSize, smoothing];
		this.node = context["createAnalyser"]();
		this.node["fftSize"] = fftSize;
		this.node["smoothingTimeConstant"] = smoothing;
		this.freqBins = new Float32Array(this.node["frequencyBinCount"]);
		this.signal = new Uint8Array(fftSize);
		this.peak = 0;
		this.rms = 0;
	};
	AnalyserEffect.prototype.tick = function ()
	{
		this.node["getFloatFrequencyData"](this.freqBins);
		this.node["getByteTimeDomainData"](this.signal);
		var fftSize = this.node["fftSize"];
		var i = 0;
		this.peak = 0;
		var rmsSquaredSum = 0;
		var s = 0;
		for ( ; i < fftSize; i++)
		{
			s = (this.signal[i] - 128) / 128;
			if (s < 0)
				s = -s;
			if (this.peak < s)
				this.peak = s;
			rmsSquaredSum += s * s;
		}
		this.peak = linearToDb(this.peak);
		this.rms = linearToDb(Math.sqrt(rmsSquaredSum / fftSize));
	};
	AnalyserEffect.prototype.connectTo = function (node_)
	{
		this.node["disconnect"]();
		this.node["connect"](node_);
	};
	AnalyserEffect.prototype.remove = function ()
	{
		this.node["disconnect"]();
	};
	AnalyserEffect.prototype.getInputNode = function ()
	{
		return this.node;
	};
	AnalyserEffect.prototype.setParam = function(param, value, ramp, time)
	{
	};
	var OT_POS_SAMPLES = 4;
	function ObjectTracker()
	{
		this.obj = null;
		this.loadUid = 0;
		this.speeds = [];
		this.lastX = 0;
		this.lastY = 0;
		this.moveAngle = 0;
	};
	ObjectTracker.prototype.setObject = function (obj_)
	{
		this.obj = obj_;
		if (this.obj)
		{
			this.lastX = this.obj.x;
			this.lastY = this.obj.y;
		}
		this.speeds.length = 0;
	};
	ObjectTracker.prototype.hasObject = function ()
	{
		return !!this.obj;
	};
	ObjectTracker.prototype.tick = function (dt)
	{
		if (!this.obj)
			return;
		this.moveAngle = cr.angleTo(this.lastX, this.lastY, this.obj.x, this.obj.y);
		var s = cr.distanceTo(this.lastX, this.lastY, this.obj.x, this.obj.y) / dt;
		if (this.speeds.length < OT_POS_SAMPLES)
			this.speeds.push(s);
		else
		{
			this.speeds.shift();
			this.speeds.push(s);
		}
		this.lastX = this.obj.x;
		this.lastY = this.obj.y;
	};
	ObjectTracker.prototype.getSpeed = function ()
	{
		if (!this.speeds.length)
			return 0;
		var i, len, sum = 0;
		for (i = 0, len = this.speeds.length; i < len; i++)
		{
			sum += this.speeds[i];
		}
		return sum / this.speeds.length;
	};
	ObjectTracker.prototype.getVelocityX = function ()
	{
		return Math.cos(this.moveAngle) * this.getSpeed();
	};
	ObjectTracker.prototype.getVelocityY = function ()
	{
		return Math.sin(this.moveAngle) * this.getSpeed();
	};
	var iOShadtouch = false;	// has had touch input on iOS to work around web audio API muting
	function C2AudioBuffer(src_, is_music)
	{
		this.src = src_;
		this.myapi = api;
		this.is_music = is_music;
		this.added_end_listener = false;
		var self = this;
		this.outNode = null;
		this.mediaSourceNode = null;
		this.panWhenReady = [];		// for web audio API positioned sounds
		this.seekWhenReady = 0;
		this.pauseWhenReady = false;
		if (api === API_WEBAUDIO && is_music && !(audRuntime.isMobile || audRuntime.isNodeWebkit))
		{
			this.myapi = API_HTML5;
			this.outNode = createGain();
		}
		this.bufferObject = null;			// actual audio object
		this.audioData = null;				// web audio api: ajax request result (compressed audio that needs decoding)
		var request;
		switch (this.myapi) {
		case API_HTML5:
			this.bufferObject = new Audio();
			if (api === API_WEBAUDIO && context["createMediaElementSource"])
			{
				this.bufferObject.addEventListener("canplay", function ()
				{
					self.mediaSourceNode = context["createMediaElementSource"](self.bufferObject);
					self.mediaSourceNode["connect"](self.outNode);
				});
			}
			this.bufferObject.autoplay = false;	// this is only a source buffer, not an instance
			this.bufferObject.preload = "auto";
			this.bufferObject.src = src_;
			break;
		case API_WEBAUDIO:
			request = new XMLHttpRequest();
			request.open("GET", src_, true);
			request.responseType = "arraybuffer";
			request.onload = function () {
				self.audioData = request.response;
				self.decodeAudioBuffer();
			};
			request.send();
			break;
		case API_PHONEGAP:
			this.bufferObject = true;
			break;
		case API_APPMOBI:
			this.bufferObject = true;
			break;
		}
	};
	C2AudioBuffer.prototype.decodeAudioBuffer = function ()
	{
		if (this.bufferObject || !this.audioData)
			return;		// audio already decoded or AJAX request not yet complete
		var self = this;
		if (context["decodeAudioData"])
		{
			context["decodeAudioData"](this.audioData, function (buffer) {
					self.bufferObject = buffer;
					var p, i, len, a;
					if (!cr.is_undefined(self.playTagWhenReady))
					{
						if (self.panWhenReady.length)
						{
							for (i = 0, len = self.panWhenReady.length; i < len; i++)
							{
								p = self.panWhenReady[i];
								a = new C2AudioInstance(self, p.thistag);
								a.setPannerEnabled(true);
								if (typeof p.objUid !== "undefined")
								{
									p.obj = audRuntime.getObjectByUID(p.objUid);
									if (!p.obj)
										continue;
								}
								if (p.obj)
								{
									var px = cr.rotatePtAround(p.obj.x, p.obj.y, -p.obj.layer.getAngle(), listenerX, listenerY, true);
									var py = cr.rotatePtAround(p.obj.x, p.obj.y, -p.obj.layer.getAngle(), listenerX, listenerY, false);
									a.setPan(px, py, cr.to_degrees(p.obj.angle - p.obj.layer.getAngle()), p.ia, p.oa, p.og);
									a.setObject(p.obj);
								}
								else
								{
									a.setPan(p.x, p.y, p.a, p.ia, p.oa, p.og);
								}
								a.play(self.loopWhenReady, self.volumeWhenReady, self.seekWhenReady);
								if (self.pauseWhenReady)
									a.pause();
								audioInstances.push(a);
							}
							self.panWhenReady.length = 0;
						}
						else
						{
							a = new C2AudioInstance(self, self.playTagWhenReady);
							a.play(self.loopWhenReady, self.volumeWhenReady, self.seekWhenReady);
							if (self.pauseWhenReady)
								a.pause();
							audioInstances.push(a);
						}
					}
					else if (!cr.is_undefined(self.convolveWhenReady))
					{
						var convolveNode = self.convolveWhenReady.convolveNode;
						convolveNode["normalize"] = self.normalizeWhenReady;
						convolveNode["buffer"] = buffer;
					}
			});
		}
		else
		{
			this.bufferObject = context["createBuffer"](this.audioData, false);
			if (!cr.is_undefined(this.playTagWhenReady))
			{
				var a = new C2AudioInstance(this, this.playTagWhenReady);
				a.play(this.loopWhenReady, this.volumeWhenReady, this.seekWhenReady);
				if (this.pauseWhenReady)
					a.pause();
				audioInstances.push(a);
			}
			else if (!cr.is_undefined(this.convolveWhenReady))
			{
				var convolveNode = this.convolveWhenReady.convolveNode;
				convolveNode["normalize"] = this.normalizeWhenReady;
				convolveNode["buffer"] = this.bufferObject;
			}
		}
	};
	C2AudioBuffer.prototype.isLoaded = function ()
	{
		switch (this.myapi) {
		case API_HTML5:
			return this.bufferObject["readyState"] === 4;	// HAVE_ENOUGH_DATA
		case API_WEBAUDIO:
			return !!this.audioData;			// null until AJAX request completes
		case API_PHONEGAP:
			return true;
		case API_APPMOBI:
			return true;
		}
		return false;
	};
	function C2AudioInstance(buffer_, tag_)
	{
		var self = this;
		this.tag = tag_;
		this.fresh = true;
		this.stopped = true;
		this.src = buffer_.src;
		this.buffer = buffer_;
		this.myapi = api;
		this.is_music = buffer_.is_music;
		this.playbackRate = 1;
		this.pgended = true;			// for PhoneGap only: ended flag
		this.resume_me = false;			// make sure resumes when leaving suspend
		this.is_paused = false;
		this.resume_position = 0;		// for web audio api to resume from correct playback position
		this.looping = false;
		this.is_muted = false;
		this.is_silent = false;
		this.volume = 1;
		this.mutevol = 1;
		this.startTime = audRuntime.kahanTime.sum;
		this.gainNode = null;
		this.pannerNode = null;
		this.pannerEnabled = false;
		this.objectTracker = null;
		this.panX = 0;
		this.panY = 0;
		this.panAngle = 0;
		this.panConeInner = 0;
		this.panConeOuter = 0;
		this.panConeOuterGain = 0;
		this.instanceObject = null;
		var add_end_listener = false;
		switch (this.myapi) {
		case API_HTML5:
			if (this.is_music)
			{
				this.instanceObject = buffer_.bufferObject;
				add_end_listener = !buffer_.added_end_listener;
				buffer_.added_end_listener = true;
			}
			else
			{
				this.instanceObject = new Audio();
				this.instanceObject.autoplay = false;
				this.instanceObject.src = buffer_.bufferObject.src;
				add_end_listener = true;
			}
			if (add_end_listener)
			{
				this.instanceObject.addEventListener('ended', function () {
						audTag = self.tag;
						self.stopped = true;
						audRuntime.trigger(cr.plugins_.Audio.prototype.cnds.OnEnded, audInst);
				});
			}
			break;
		case API_WEBAUDIO:
			this.gainNode = createGain();
			this.gainNode["connect"](getDestinationForTag(tag_));
			if (this.buffer.myapi === API_WEBAUDIO)
			{
				if (buffer_.bufferObject)
				{
					this.instanceObject = context["createBufferSource"]();
					this.instanceObject["buffer"] = buffer_.bufferObject;
					this.instanceObject["connect"](this.gainNode);
				}
			}
			else
			{
				this.instanceObject = this.buffer.bufferObject;		// reference the audio element
				this.buffer.outNode["connect"](this.gainNode);
			}
			break;
		case API_PHONEGAP:
			this.instanceObject = new window["Media"](appPath + this.src, null, null, function (status) {
					if (status === window["Media"]["MEDIA_STOPPED"])
					{
						self.pgended = true;
						self.stopped = true;
						audTag = self.tag;
						audRuntime.trigger(cr.plugins_.Audio.prototype.cnds.OnEnded, audInst);
					}
			});
			break;
		case API_APPMOBI:
			this.instanceObject = true;
			break;
		}
	};
	C2AudioInstance.prototype.hasEnded = function ()
	{
		switch (this.myapi) {
		case API_HTML5:
			return this.instanceObject.ended;
		case API_WEBAUDIO:
			if (this.buffer.myapi === API_WEBAUDIO)
			{
				if (!this.fresh && !this.stopped && this.instanceObject["loop"])
					return false;
				if (this.is_paused)
					return false;
				return (audRuntime.kahanTime.sum - this.startTime) > this.buffer.bufferObject["duration"];
			}
			else
				return this.instanceObject.ended;
		case API_PHONEGAP:
			return this.pgended;
		case API_APPMOBI:
			true;	// recycling an AppMobi sound does not matter because it will just do another throwaway playSound
		}
		return true;
	};
	C2AudioInstance.prototype.canBeRecycled = function ()
	{
		if (this.fresh || this.stopped)
			return true;		// not yet used or is not playing
		return this.hasEnded();
	};
	C2AudioInstance.prototype.setPannerEnabled = function (enable_)
	{
		if (api !== API_WEBAUDIO)
			return;
		if (!this.pannerEnabled && enable_)
		{
			if (!this.pannerNode)
			{
				this.pannerNode = context["createPanner"]();
				if (typeof this.pannerNode["panningModel"] === "number")
					this.pannerNode["panningModel"] = panningModel;
				else
					this.pannerNode["panningModel"] = ["equalpower", "HRTF", "soundfield"][panningModel];
				if (typeof this.pannerNode["distanceModel"] === "number")
					this.pannerNode["distanceModel"] = distanceModel;
				else
					this.pannerNode["distanceModel"] = ["linear", "inverse", "exponential"][distanceModel];
				this.pannerNode["refDistance"] = refDistance;
				this.pannerNode["maxDistance"] = maxDistance;
				this.pannerNode["rolloffFactor"] = rolloffFactor;
			}
			this.gainNode["disconnect"]();
			this.gainNode["connect"](this.pannerNode);
			this.pannerNode["connect"](getDestinationForTag(this.tag));
			this.pannerEnabled = true;
		}
		else if (this.pannerEnabled && !enable_)
		{
			this.pannerNode["disconnect"]();
			this.gainNode["disconnect"]();
			this.gainNode["connect"](getDestinationForTag(this.tag));
			this.pannerEnabled = false;
		}
	};
	C2AudioInstance.prototype.setPan = function (x, y, angle, innerangle, outerangle, outergain)
	{
		if (!this.pannerEnabled || api !== API_WEBAUDIO)
			return;
		this.pannerNode["setPosition"](x, y, 0);
		this.pannerNode["setOrientation"](Math.cos(cr.to_radians(angle)), Math.sin(cr.to_radians(angle)), 0);
		this.pannerNode["coneInnerAngle"] = innerangle;
		this.pannerNode["coneOuterAngle"] = outerangle;
		this.pannerNode["coneOuterGain"] = outergain;
		this.panX = x;
		this.panY = y;
		this.panAngle = angle;
		this.panConeInner = innerangle;
		this.panConeOuter = outerangle;
		this.panConeOuterGain = outergain;
	};
	C2AudioInstance.prototype.setObject = function (o)
	{
		if (!this.pannerEnabled || api !== API_WEBAUDIO)
			return;
		if (!this.objectTracker)
			this.objectTracker = new ObjectTracker();
		this.objectTracker.setObject(o);
	};
	C2AudioInstance.prototype.tick = function (dt)
	{
		if (!this.pannerEnabled || api !== API_WEBAUDIO || !this.objectTracker || !this.objectTracker.hasObject() || !this.isPlaying())
		{
			return;
		}
		this.objectTracker.tick(dt);
		var inst = this.objectTracker.obj;
		var px = cr.rotatePtAround(inst.x, inst.y, -inst.layer.getAngle(), listenerX, listenerY, true);
		var py = cr.rotatePtAround(inst.x, inst.y, -inst.layer.getAngle(), listenerX, listenerY, false);
		this.pannerNode["setPosition"](px, py, 0);
		var a = 0;
		if (typeof this.objectTracker.obj.angle !== "undefined")
		{
			a = inst.angle - inst.layer.getAngle();
			this.pannerNode["setOrientation"](Math.cos(a), Math.sin(a), 0);
		}
		this.pannerNode["setVelocity"](this.objectTracker.getVelocityX(), this.objectTracker.getVelocityY(), 0);
	};
	C2AudioInstance.prototype.play = function (looping, vol, fromPosition)
	{
		var instobj = this.instanceObject;
		this.looping = looping;
		this.volume = vol;
		var seekPos = fromPosition || 0;
		switch (this.myapi) {
		case API_HTML5:
			if (instobj.playbackRate !== 1.0)
				instobj.playbackRate = 1.0;
			if (instobj.volume !== vol * masterVolume)
				instobj.volume = vol * masterVolume;
			if (instobj.loop !== looping)
				instobj.loop = looping;
			if (instobj.muted)
				instobj.muted = false;
			if (instobj.currentTime !== seekPos)
			{
				try {
					instobj.currentTime = seekPos;
				}
				catch (err)
				{
;
				}
			}
			this.instanceObject.play();
			break;
		case API_WEBAUDIO:
			this.muted = false;
			this.mutevol = 1;
			if (this.buffer.myapi === API_WEBAUDIO)
			{
				if (!this.fresh)
				{
					this.instanceObject = context["createBufferSource"]();
					this.instanceObject["buffer"] = this.buffer.bufferObject;
					this.instanceObject["connect"](this.gainNode);
				}
				this.instanceObject.loop = looping;
				this.gainNode["gain"]["value"] = vol * masterVolume;
				if (seekPos === 0)
					startSource(this.instanceObject);
				else
					startSourceAt(this.instanceObject, seekPos, this.getDuration());
			}
			else
			{
				if (instobj.playbackRate !== 1.0)
					instobj.playbackRate = 1.0;
				if (instobj.loop !== looping)
					instobj.loop = looping;
				this.gainNode["gain"]["value"] = vol * masterVolume;
				if (instobj.currentTime !== seekPos)
				{
					try {
						instobj.currentTime = seekPos;
					}
					catch (err)
					{
;
					}
				}
				instobj.play();
			}
			break;
		case API_PHONEGAP:
			if ((!this.fresh && this.stopped) || seekPos !== 0)
				instobj["seekTo"](seekPos);
			instobj["play"]();
			this.pgended = false;
			break;
		case API_APPMOBI:
			if (audRuntime.isDirectCanvas)
				AppMobi["context"]["playSound"](this.src);
			else
				AppMobi["player"]["playSound"](this.src);
			break;
		}
		this.playbackRate = 1;
		this.startTime = audRuntime.kahanTime.sum - seekPos;
		this.fresh = false;
		this.stopped = false;
		this.is_paused = false;
	};
	C2AudioInstance.prototype.stop = function ()
	{
		switch (this.myapi) {
		case API_HTML5:
			if (!this.instanceObject.paused)
				this.instanceObject.pause();
			break;
		case API_WEBAUDIO:
			if (this.buffer.myapi === API_WEBAUDIO)
				stopSource(this.instanceObject);
			else
			{
				if (!this.instanceObject.paused)
					this.instanceObject.pause();
			}
			break;
		case API_PHONEGAP:
			this.instanceObject["stop"]();
			break;
		case API_APPMOBI:
			break;
		}
		this.stopped = true;
		this.is_paused = false;
	};
	C2AudioInstance.prototype.pause = function ()
	{
		if (this.fresh || this.stopped || this.hasEnded() || this.is_paused)
			return;
		switch (this.myapi) {
		case API_HTML5:
			if (!this.instanceObject.paused)
				this.instanceObject.pause();
			break;
		case API_WEBAUDIO:
			if (this.buffer.myapi === API_WEBAUDIO)
			{
				this.resume_position = this.getPlaybackTime();
				if (this.looping)
					this.resume_position = this.resume_position % this.getDuration();
				stopSource(this.instanceObject);
			}
			else
			{
				if (!this.instanceObject.paused)
					this.instanceObject.pause();
			}
			break;
		case API_PHONEGAP:
			this.instanceObject["pause"]();
			break;
		case API_APPMOBI:
			break;
		}
		this.is_paused = true;
	};
	C2AudioInstance.prototype.resume = function ()
	{
		if (this.fresh || this.stopped || this.hasEnded() || !this.is_paused)
			return;
		switch (this.myapi) {
		case API_HTML5:
			this.instanceObject.play();
			break;
		case API_WEBAUDIO:
			if (this.buffer.myapi === API_WEBAUDIO)
			{
				this.instanceObject = context["createBufferSource"]();
				this.instanceObject["buffer"] = this.buffer.bufferObject;
				this.instanceObject["connect"](this.gainNode);
				this.instanceObject.loop = this.looping;
				this.gainNode["gain"]["value"] = masterVolume * this.volume * this.mutevol;
				this.startTime = audRuntime.kahanTime.sum - this.resume_position;
				startSourceAt(this.instanceObject, this.resume_position, this.getDuration());
			}
			else
			{
				this.instanceObject.play();
			}
			break;
		case API_PHONEGAP:
			this.instanceObject["play"]();
			break;
		case API_APPMOBI:
			break;
		}
		this.is_paused = false;
	};
	C2AudioInstance.prototype.seek = function (pos)
	{
		if (this.fresh || this.stopped || this.hasEnded())
			return;
		switch (this.myapi) {
		case API_HTML5:
			try {
				this.instanceObject.currentTime = pos;
			}
			catch (e) {}
			break;
		case API_WEBAUDIO:
			if (this.buffer.myapi === API_WEBAUDIO)
			{
				if (this.is_paused)
					this.resume_position = pos;
				else
				{
					this.pause();
					this.resume_position = pos;
					this.resume();
				}
			}
			else
			{
				try {
					this.instanceObject.currentTime = pos;
				}
				catch (e) {}
			}
			break;
		case API_PHONEGAP:
			break;
		case API_APPMOBI:
			break;
		}
	};
	C2AudioInstance.prototype.reconnect = function (toNode)
	{
		if (this.myapi !== API_WEBAUDIO)
			return;
		if (this.pannerEnabled)
		{
			this.pannerNode["disconnect"]();
			this.pannerNode["connect"](toNode);
		}
		else
		{
			this.gainNode["disconnect"]();
			this.gainNode["connect"](toNode);
		}
	};
	C2AudioInstance.prototype.getDuration = function ()
	{
		switch (this.myapi) {
		case API_HTML5:
			if (typeof this.instanceObject.duration !== "undefined")
				return this.instanceObject.duration;
			else
				return 0;
		case API_WEBAUDIO:
			return this.buffer.bufferObject["duration"];
		case API_PHONEGAP:
			return this.instanceObject["getDuration"]();
		case API_APPMOBI:
			return 0;
		}
		return 0;
	};
	C2AudioInstance.prototype.getPlaybackTime = function ()
	{
		var duration = this.getDuration();
		var ret = 0;
		switch (this.myapi) {
		case API_HTML5:
			if (typeof this.instanceObject.currentTime !== "undefined")
				ret = this.instanceObject.currentTime;
			break;
		case API_WEBAUDIO:
			if (this.buffer.myapi === API_WEBAUDIO)
			{
				if (this.is_paused)
					return this.resume_position;
				else
					ret = audRuntime.kahanTime.sum - this.startTime;
			}
			else if (typeof this.instanceObject.currentTime !== "undefined")
				ret = this.instanceObject.currentTime;
			break;
		case API_PHONEGAP:
			break;
		case API_APPMOBI:
			break;
		}
		if (!this.looping && ret > duration)
			ret = duration;
		return ret;
	};
	C2AudioInstance.prototype.isPlaying = function ()
	{
		return !this.is_paused && !this.fresh && !this.stopped && !this.hasEnded();
	};
	C2AudioInstance.prototype.setVolume = function (v)
	{
		this.volume = v;
		this.updateVolume();
	};
	C2AudioInstance.prototype.updateVolume = function ()
	{
		var volToSet = this.volume * masterVolume;
		switch (this.myapi) {
		case API_HTML5:
			if (this.instanceObject.volume && this.instanceObject.volume !== volToSet)
				this.instanceObject.volume = volToSet;
			break;
		case API_WEBAUDIO:
			this.gainNode["gain"]["value"] = volToSet * this.mutevol;
			break;
		case API_PHONEGAP:
			break;
		case API_APPMOBI:
			break;
		}
	};
	C2AudioInstance.prototype.getVolume = function ()
	{
		return this.volume;
	};
	C2AudioInstance.prototype.doSetMuted = function (m)
	{
		switch (this.myapi) {
		case API_HTML5:
			if (this.instanceObject.muted !== !!m)
				this.instanceObject.muted = !!m;
			break;
		case API_WEBAUDIO:
			this.mutevol = (m ? 0 : 1);
			this.gainNode["gain"]["value"] = masterVolume * this.volume * this.mutevol;
			break;
		case API_PHONEGAP:
			break;
		case API_APPMOBI:
			break;
		}
	};
	C2AudioInstance.prototype.setMuted = function (m)
	{
		this.is_muted = !!m;
		this.doSetMuted(this.is_muted || this.is_silent);
	};
	C2AudioInstance.prototype.setSilent = function (m)
	{
		this.is_silent = !!m;
		this.doSetMuted(this.is_muted || this.is_silent);
	};
	C2AudioInstance.prototype.setLooping = function (l)
	{
		this.looping = l;
		switch (this.myapi) {
		case API_HTML5:
			if (this.instanceObject.loop !== !!l)
				this.instanceObject.loop = !!l;
			break;
		case API_WEBAUDIO:
			if (this.instanceObject.loop !== !!l)
				this.instanceObject.loop = !!l;
			break;
		case API_PHONEGAP:
			break;
		case API_APPMOBI:
			break;
		}
	};
	C2AudioInstance.prototype.setPlaybackRate = function (r)
	{
		this.playbackRate = r;
		this.updatePlaybackRate();
	};
	C2AudioInstance.prototype.updatePlaybackRate = function ()
	{
		var r = this.playbackRate;
		if ((timescale_mode === 1 && !this.is_music) || timescale_mode === 2)
			r *= audRuntime.timescale;
		switch (this.myapi) {
		case API_HTML5:
			if (this.instanceObject.playbackRate !== r)
				this.instanceObject.playbackRate = r;
			break;
		case API_WEBAUDIO:
			if (this.buffer.myapi === API_WEBAUDIO)
			{
				if (this.instanceObject["playbackRate"]["value"] !== r)
					this.instanceObject["playbackRate"]["value"] = r;
			}
			else
			{
				if (this.instanceObject.playbackRate !== r)
					this.instanceObject.playbackRate = r;
			}
			break;
		case API_PHONEGAP:
			break;
		case API_APPMOBI:
			break;
		}
	};
	C2AudioInstance.prototype.setSuspended = function (s)
	{
		switch (this.myapi) {
		case API_HTML5:
			if (s)
			{
				if (this.isPlaying())
				{
					this.instanceObject["pause"]();
					this.resume_me = true;
				}
				else
					this.resume_me = false;
			}
			else
			{
				if (this.resume_me)
					this.instanceObject["play"]();
			}
			break;
		case API_WEBAUDIO:
			if (s)
			{
				if (this.isPlaying())
				{
					if (this.buffer.myapi === API_WEBAUDIO)
					{
						this.resume_position = this.getPlaybackTime();
						if (this.looping)
							this.resume_position = this.resume_position % this.getDuration();
						stopSource(this.instanceObject);
					}
					else
						this.instanceObject["pause"]();
					this.resume_me = true;
				}
				else
					this.resume_me = false;
			}
			else
			{
				if (this.resume_me)
				{
					if (this.buffer.myapi === API_WEBAUDIO)
					{
						this.instanceObject = context["createBufferSource"]();
						this.instanceObject["buffer"] = this.buffer.bufferObject;
						this.instanceObject["connect"](this.gainNode);
						this.instanceObject.loop = this.looping;
						this.gainNode["gain"]["value"] = masterVolume * this.volume * this.mutevol;
						this.startTime = audRuntime.kahanTime.sum - this.resume_position;
						startSourceAt(this.instanceObject, this.resume_position, this.getDuration());
					}
					else
					{
						this.instanceObject["play"]();
					}
				}
			}
			break;
		case API_PHONEGAP:
			if (s)
			{
				if (this.isPlaying())
				{
					this.instanceObject["pause"]();
					this.resume_me = true;
				}
				else
					this.resume_me = false;
			}
			else
			{
				if (this.resume_me)
					this.instanceObject["play"]();
			}
			break;
		case API_APPMOBI:
			break;
		}
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
		audRuntime = this.runtime;
		audInst = this;
		this.listenerTracker = null;
		this.listenerZ = -600;
		context = null;
		if (typeof AudioContext !== "undefined")
		{
			api = API_WEBAUDIO;
			context = new AudioContext();
		}
		else if (typeof webkitAudioContext !== "undefined")
		{
			api = API_WEBAUDIO;
			context = new webkitAudioContext();
		}
		if (this.runtime.isiOS && api === API_WEBAUDIO)
		{
			document.addEventListener("touchstart", function () {
				if (iOShadtouch)
					return;
				var buffer = context["createBuffer"](1, 1, 22050);
				var source = context["createBufferSource"]();
				source["buffer"] = buffer;
				source["connect"](context["destination"]);
				startSource(source);
				iOShadtouch = true;
			}, true);
		}
		if (api !== API_WEBAUDIO)
		{
			if (this.runtime.isPhoneGap)
				api = API_PHONEGAP;
			else if (this.runtime.isAppMobi)
				api = API_APPMOBI;
		}
		if (api === API_PHONEGAP)
		{
			appPath = location.href;
			var i = appPath.lastIndexOf("/");
			if (i > -1)
				appPath = appPath.substr(0, i + 1);
			appPath = appPath.replace("file://", "");
		}
		if (this.runtime.isSafari && this.runtime.isWindows && typeof Audio === "undefined")
		{
			alert("It looks like you're using Safari for Windows without Quicktime.  Audio cannot be played until Quicktime is installed.");
			this.runtime.DestroyInstance(this);
		}
		else
		{
			if (this.runtime.isDirectCanvas)
				useOgg = this.runtime.isAndroid;		// AAC on iOS, OGG on Android
			else
			{
				try {
					useOgg = !!(new Audio().canPlayType('audio/ogg; codecs="vorbis"'));
				}
				catch (e)
				{
					useOgg = false;
				}
			}
			switch (api) {
			case API_HTML5:
;
				break;
			case API_WEBAUDIO:
;
				break;
			case API_PHONEGAP:
;
				break;
			case API_APPMOBI:
;
				break;
			default:
;
			}
			this.runtime.tickMe(this);
		}
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function ()
	{
		timescale_mode = this.properties[0];	// 0 = off, 1 = sounds only, 2 = all
		this.saveload = this.properties[1];		// 0 = all, 1 = sounds only, 2 = music only, 3 = none
		panningModel = this.properties[2];		// 0 = equalpower, 1 = hrtf, 3 = soundfield
		distanceModel = this.properties[3];		// 0 = linear, 1 = inverse, 2 = exponential
		this.listenerZ = -this.properties[4];
		refDistance = this.properties[5];
		maxDistance = this.properties[6];
		rolloffFactor = this.properties[7];
		this.listenerTracker = new ObjectTracker();
		if (api === API_WEBAUDIO)
		{
			context["listener"]["speedOfSound"] = this.properties[8];
			context["listener"]["dopplerFactor"] = this.properties[9];
			context["listener"]["setPosition"](this.runtime.width / 2, this.runtime.height / 2, this.listenerZ);
			context["listener"]["setOrientation"](0, 0, 1, 0, -1, 0);
			window["c2OnAudioMicStream"] = function (localMediaStream, tag)
			{
				if (micSource)
					micSource["disconnect"]();
				micTag = tag.toLowerCase();
				micSource = context["createMediaStreamSource"](localMediaStream);
				micSource["connect"](getDestinationForTag(micTag));
			};
		}
		this.runtime.addSuspendCallback(function(s)
		{
			audInst.onSuspend(s);
		});
		var self = this;
		this.runtime.addDestroyCallback(function (inst)
		{
			self.onInstanceDestroyed(inst);
		});
	};
	instanceProto.onInstanceDestroyed = function (inst)
	{
		var i, len, a;
		for (i = 0, len = audioInstances.length; i < len; i++)
		{
			a = audioInstances[i];
			if (a.objectTracker)
			{
				if (a.objectTracker.obj === inst)
				{
					a.objectTracker.obj = null;
					if (a.pannerEnabled && a.isPlaying() && a.looping)
						a.stop();
				}
			}
		}
		if (this.listenerTracker.obj === inst)
			this.listenerTracker.obj = null;
	};
	instanceProto.saveToJSON = function ()
	{
		var o = {
			"silent": silent,
			"masterVolume": masterVolume,
			"listenerZ": this.listenerZ,
			"listenerUid": this.listenerTracker.hasObject() ? this.listenerTracker.obj.uid : -1,
			"playing": [],
			"effects": {}
		};
		var playingarr = o["playing"];
		var i, len, a, d, p, panobj, playbackTime;
		for (i = 0, len = audioInstances.length; i < len; i++)
		{
			a = audioInstances[i];
			if (!a.isPlaying())
				continue;				// no need to save stopped sounds
			if (this.saveload === 3)	// not saving/loading any sounds/music
				continue;
			if (a.is_music && this.saveload === 1)	// not saving/loading music
				continue;
			if (!a.is_music && this.saveload === 2)	// not saving/loading sound
				continue;
			playbackTime = a.getPlaybackTime();
			if (a.looping)
				playbackTime = playbackTime % a.getDuration();
			d = {
				"tag": a.tag,
				"buffersrc": a.buffer.src,
				"is_music": a.is_music,
				"playbackTime": playbackTime,
				"volume": a.volume,
				"looping": a.looping,
				"muted": a.is_muted,
				"playbackRate": a.playbackRate,
				"paused": a.is_paused,
				"resume_position": a.resume_position
			};
			if (a.pannerEnabled)
			{
				d["pan"] = {};
				panobj = d["pan"];
				if (a.objectTracker && a.objectTracker.hasObject())
				{
					panobj["objUid"] = a.objectTracker.obj.uid;
				}
				else
				{
					panobj["x"] = a.panX;
					panobj["y"] = a.panY;
					panobj["a"] = a.panAngle;
				}
				panobj["ia"] = a.panConeInner;
				panobj["oa"] = a.panConeOuter;
				panobj["og"] = a.panConeOuterGain;
			}
			playingarr.push(d);
		}
		var fxobj = o["effects"];
		var fxarr;
		for (p in effects)
		{
			if (effects.hasOwnProperty(p))
			{
				fxarr = [];
				for (i = 0, len = effects[p].length; i < len; i++)
				{
					fxarr.push({ "type": effects[p][i].type, "params": effects[p][i].params });
				}
				fxobj[p] = fxarr;
			}
		}
		return o;
	};
	var objectTrackerUidsToLoad = [];
	instanceProto.loadFromJSON = function (o)
	{
		var setSilent = o["silent"];
		masterVolume = o["masterVolume"];
		this.listenerZ = o["listenerZ"];
		this.listenerTracker.setObject(null);
		var listenerUid = o["listenerUid"];
		if (listenerUid !== -1)
		{
			this.listenerTracker.loadUid = listenerUid;
			objectTrackerUidsToLoad.push(this.listenerTracker);
		}
		var playingarr = o["playing"];
		var i, len, d, src, is_music, tag, playbackTime, looping, vol, b, a, p, pan, panObjUid;
		if (this.saveload !== 3)
		{
			for (i = 0, len = audioInstances.length; i < len; i++)
			{
				a = audioInstances[i];
				if (a.is_music && this.saveload === 1)
					continue;		// only saving/loading sound: leave music playing
				if (!a.is_music && this.saveload === 2)
					continue;		// only saving/loading music: leave sound playing
				a.stop();
			}
		}
		var fxarr, fxtype, fxparams, fx;
		for (p in effects)
		{
			if (effects.hasOwnProperty(p))
			{
				for (i = 0, len = effects[p].length; i < len; i++)
					effects[p][i].remove();
			}
		}
		cr.wipe(effects);
		for (p in o["effects"])
		{
			if (o["effects"].hasOwnProperty(p))
			{
				fxarr = o["effects"][p];
				for (i = 0, len = fxarr.length; i < len; i++)
				{
					fxtype = fxarr[i]["type"];
					fxparams = fxarr[i]["params"];
					switch (fxtype) {
					case "filter":
						addEffectForTag(p, new FilterEffect(fxparams[0], fxparams[1], fxparams[2], fxparams[3], fxparams[4], fxparams[5]));
						break;
					case "delay":
						addEffectForTag(p, new DelayEffect(fxparams[0], fxparams[1], fxparams[2]));
						break;
					case "convolve":
						src = fxparams[2];
						b = this.getAudioBuffer(src, false);
						if (b.bufferObject)
						{
							fx = new ConvolveEffect(b.bufferObject, fxparams[0], fxparams[1], src);
						}
						else
						{
							fx = new ConvolveEffect(null, fxparams[0], fxparams[1], src);
							b.normalizeWhenReady = fxparams[0];
							b.convolveWhenReady = fx;
						}
						addEffectForTag(p, fx);
						break;
					case "flanger":
						addEffectForTag(p, new FlangerEffect(fxparams[0], fxparams[1], fxparams[2], fxparams[3], fxparams[4]));
						break;
					case "phaser":
						addEffectForTag(p, new PhaserEffect(fxparams[0], fxparams[1], fxparams[2], fxparams[3], fxparams[4], fxparams[5]));
						break;
					case "gain":
						addEffectForTag(p, new GainEffect(fxparams[0]));
						break;
					case "tremolo":
						addEffectForTag(p, new TremoloEffect(fxparams[0], fxparams[1]));
						break;
					case "ringmod":
						addEffectForTag(p, new RingModulatorEffect(fxparams[0], fxparams[1]));
						break;
					case "distortion":
						addEffectForTag(p, new DistortionEffect(fxparams[0], fxparams[1], fxparams[2], fxparams[3], fxparams[4]));
						break;
					case "compressor":
						addEffectForTag(p, new CompressorEffect(fxparams[0], fxparams[1], fxparams[2], fxparams[3], fxparams[4]));
						break;
					case "analyser":
						addEffectForTag(p, new AnalyserEffect(fxparams[0], fxparams[1]));
						break;
					}
				}
			}
		}
		for (i = 0, len = playingarr.length; i < len; i++)
		{
			if (this.saveload === 3)	// not saving/loading any sounds/music
				continue;
			d = playingarr[i];
			src = d["buffersrc"];
			is_music = d["is_music"];
			tag = d["tag"];
			playbackTime = d["playbackTime"];
			looping = d["looping"];
			vol = d["volume"];
			pan = d["pan"];
			panObjUid = (pan && pan.hasOwnProperty("objUid")) ? pan["objUid"] : -1;
			if (is_music && this.saveload === 1)	// not saving/loading music
				continue;
			if (!is_music && this.saveload === 2)	// not saving/loading sound
				continue;
			a = this.getAudioInstance(src, tag, is_music, looping, vol);
			if (!a)
			{
				b = this.getAudioBuffer(src, is_music);
				b.seekWhenReady = playbackTime;
				b.pauseWhenReady = d["paused"];
				if (pan)
				{
					if (panObjUid !== -1)
					{
						b.panWhenReady.push({ objUid: panObjUid, ia: pan["ia"], oa: pan["oa"], og: pan["og"], thistag: tag });
					}
					else
					{
						b.panWhenReady.push({ x: pan["x"], y: pan["y"], a: pan["a"], ia: pan["ia"], oa: pan["oa"], og: pan["og"], thistag: tag });
					}
				}
				continue;
			}
			a.resume_position = d["resume_position"];
			a.setPannerEnabled(!!pan);
			a.play(looping, vol, playbackTime);
			a.updatePlaybackRate();
			a.updateVolume();
			a.doSetMuted(a.is_muted || a.is_silent);
			if (d["paused"])
				a.pause();
			if (d["muted"])
				a.mute();
			if (pan)
			{
				if (panObjUid !== -1)
				{
					a.objectTracker = a.objectTracker || new ObjectTracker();
					a.objectTracker.loadUid = panObjUid;
					objectTrackerUidsToLoad.push(a.objectTracker);
				}
				else
				{
					a.setPan(pan["x"], pan["y"], pan["a"], pan["ia"], pan["oa"], pan["og"]);
				}
			}
		}
		if (setSilent && !silent)			// setting silent
		{
			for (i = 0, len = audioInstances.length; i < len; i++)
				audioInstances[i].setSilent(true);
			silent = true;
		}
		else if (!setSilent && silent)		// setting not silent
		{
			for (i = 0, len = audioInstances.length; i < len; i++)
				audioInstances[i].setSilent(false);
			silent = false;
		}
	};
	instanceProto.afterLoad = function ()
	{
		var i, len, ot, inst;
		for (i = 0, len = objectTrackerUidsToLoad.length; i < len; i++)
		{
			ot = objectTrackerUidsToLoad[i];
			inst = this.runtime.getObjectByUID(ot.loadUid);
			ot.setObject(inst);
			ot.loadUid = -1;
			if (inst)
			{
				listenerX = inst.x;
				listenerY = inst.y;
			}
		}
		objectTrackerUidsToLoad.length = 0;
	};
	instanceProto.onSuspend = function (s)
	{
		var i, len;
		for (i = 0, len = audioInstances.length; i < len; i++)
			audioInstances[i].setSuspended(s);
	};
	instanceProto.tick = function ()
	{
		var dt = this.runtime.dt;
		var i, len, a;
		for (i = 0, len = audioInstances.length; i < len; i++)
		{
			a = audioInstances[i];
			a.tick(dt);
			if (a.myapi !== API_HTML5 && a.myapi !== API_APPMOBI)
			{
				if (!a.fresh && !a.stopped && a.hasEnded())
				{
					a.stopped = true;
					audTag = a.tag;
					audRuntime.trigger(cr.plugins_.Audio.prototype.cnds.OnEnded, audInst);
				}
			}
			if (timescale_mode !== 0)
				a.updatePlaybackRate();
		}
		var p, arr, f;
		for (p in effects)
		{
			if (effects.hasOwnProperty(p))
			{
				arr = effects[p];
				for (i = 0, len = arr.length; i < len; i++)
				{
					f = arr[i];
					if (f.tick)
						f.tick();
				}
			}
		}
		if (api === API_WEBAUDIO && this.listenerTracker.hasObject())
		{
			this.listenerTracker.tick(dt);
			listenerX = this.listenerTracker.obj.x;
			listenerY = this.listenerTracker.obj.y;
			context["listener"]["setPosition"](this.listenerTracker.obj.x, this.listenerTracker.obj.y, this.listenerZ);
			context["listener"]["setVelocity"](this.listenerTracker.getVelocityX(), this.listenerTracker.getVelocityY(), 0);
		}
	};
	instanceProto.getAudioBuffer = function (src_, is_music)
	{
		var i, len, a, ret = null, j, k, lenj, ai;
		for (i = 0, len = audioBuffers.length; i < len; i++)
		{
			a = audioBuffers[i];
			if (a.src === src_)
			{
				ret = a;
				break;
			}
		}
		if (!ret)
		{
			ret = new C2AudioBuffer(src_, is_music);
			audioBuffers.push(ret);
		}
		if (ret.is_music && (audRuntime.isMobile || audRuntime.isNodeWebkit))
		{
			for (i = 0, len = audioBuffers.length; i < len; ++i)
			{
				a = audioBuffers[i];
				if (a === ret || !a.is_music)
					continue;
				a.bufferObject = null;			// release Web Audio API buffer (decoded)
				for (j = 0, k = 0, lenj = audioInstances.length; j < lenj; ++j)
				{
					ai = audioInstances[j];
					audioInstances[k] = ai;
					if (ai.buffer === a && ai.myapi === API_WEBAUDIO)
					{
						ai.gainNode["disconnect"]();
						if (a.myapi === API_WEBAUDIO)
							ai.instanceObject["disconnect"]();
					}
					else
						++k;
				}
				audioInstances.length = k;
			}
			ret.decodeAudioBuffer();
		}
		return ret;
	};
	instanceProto.getAudioInstance = function (src_, tag, is_music, looping, vol)
	{
		var i, len, a;
		for (i = 0, len = audioInstances.length; i < len; i++)
		{
			a = audioInstances[i];
			if (a.src === src_ && (a.canBeRecycled() || is_music))
			{
				a.tag = tag;
				return a;
			}
		}
		var b = this.getAudioBuffer(src_, is_music);
		if (!b.bufferObject)
		{
			if (tag !== "<preload>")
			{
				b.playTagWhenReady = tag;
				b.loopWhenReady = looping;
				b.volumeWhenReady = vol;
			}
			return null;
		}
		a = new C2AudioInstance(b, tag);
		audioInstances.push(a);
		return a;
	};
	var taggedAudio = [];
	function getAudioByTag(tag)
	{
		taggedAudio.length = 0;
		if (!tag.length)
		{
			if (!lastAudio || lastAudio.hasEnded())
				return;
			else
			{
				taggedAudio.length = 1;
				taggedAudio[0] = lastAudio;
				return;
			}
		}
		var i, len, a;
		for (i = 0, len = audioInstances.length; i < len; i++)
		{
			a = audioInstances[i];
			if (cr.equals_nocase(tag, a.tag))
				taggedAudio.push(a);
		}
	};
	function reconnectEffects(tag)
	{
		var i, len, arr, n, toNode = context["destination"];
		if (effects.hasOwnProperty(tag))
		{
			arr = effects[tag];
			if (arr.length)
			{
				toNode = arr[0].getInputNode();
				for (i = 0, len = arr.length; i < len; i++)
				{
					n = arr[i];
					if (i + 1 === len)
						n.connectTo(context["destination"]);
					else
						n.connectTo(arr[i + 1].getInputNode());
				}
			}
		}
		getAudioByTag(tag);
		for (i = 0, len = taggedAudio.length; i < len; i++)
			taggedAudio[i].reconnect(toNode);
		if (micSource && micTag === tag)
		{
			micSource["disconnect"]();
			micSource["connect"](toNode);
		}
	};
	function addEffectForTag(tag, fx)
	{
		if (!effects.hasOwnProperty(tag))
			effects[tag] = [fx];
		else
			effects[tag].push(fx);
		reconnectEffects(tag);
	};
	function Cnds() {};
	Cnds.prototype.OnEnded = function (t)
	{
		return cr.equals_nocase(audTag, t);
	};
	Cnds.prototype.PreloadsComplete = function ()
	{
		var i, len;
		for (i = 0, len = audioBuffers.length; i < len; i++)
		{
			if (!audioBuffers[i].isLoaded())
				return false;
		}
		return true;
	};
	Cnds.prototype.AdvancedAudioSupported = function ()
	{
		return api === API_WEBAUDIO;
	};
	Cnds.prototype.IsSilent = function ()
	{
		return silent;
	};
	Cnds.prototype.IsAnyPlaying = function ()
	{
		var i, len;
		for (i = 0, len = audioInstances.length; i < len; i++)
		{
			if (audioInstances[i].isPlaying())
				return true;
		}
		return false;
	};
	Cnds.prototype.IsTagPlaying = function (tag)
	{
		getAudioByTag(tag);
		var i, len;
		for (i = 0, len = taggedAudio.length; i < len; i++)
		{
			if (taggedAudio[i].isPlaying())
				return true;
		}
		return false;
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.Play = function (file, looping, vol, tag)
	{
		if (silent)
			return;
		var v = dbToLinear(vol);
		var is_music = file[1];
		var src = this.runtime.files_subfolder + file[0] + (useOgg ? ".ogg" : ".m4a");
		lastAudio = this.getAudioInstance(src, tag, is_music, looping!==0, v);
		if (!lastAudio)
			return;
		lastAudio.setPannerEnabled(false);
		lastAudio.play(looping!==0, v);
	};
	Acts.prototype.PlayAtPosition = function (file, looping, vol, x_, y_, angle_, innerangle_, outerangle_, outergain_, tag)
	{
		if (silent)
			return;
		var v = dbToLinear(vol);
		var is_music = file[1];
		var src = this.runtime.files_subfolder + file[0] + (useOgg ? ".ogg" : ".m4a");
		lastAudio = this.getAudioInstance(src, tag, is_music, looping!==0, v);
		if (!lastAudio)
		{
			var b = this.getAudioBuffer(src, is_music);
			b.panWhenReady.push({ x: x_, y: y_, a: angle_, ia: innerangle_, oa: outerangle_, og: dbToLinear(outergain_), thistag: tag });
			return;
		}
		lastAudio.setPannerEnabled(true);
		lastAudio.setPan(x_, y_, angle_, innerangle_, outerangle_, dbToLinear(outergain_));
		lastAudio.play(looping!==0, v);
	};
	Acts.prototype.PlayAtObject = function (file, looping, vol, obj, innerangle, outerangle, outergain, tag)
	{
		if (silent || !obj)
			return;
		var inst = obj.getFirstPicked();
		if (!inst)
			return;
		var v = dbToLinear(vol);
		var is_music = file[1];
		var src = this.runtime.files_subfolder + file[0] + (useOgg ? ".ogg" : ".m4a");
		lastAudio = this.getAudioInstance(src, tag, is_music, looping!==0, v);
		if (!lastAudio)
		{
			var b = this.getAudioBuffer(src, is_music);
			b.panWhenReady.push({ obj: inst, ia: innerangle, oa: outerangle, og: dbToLinear(outergain), thistag: tag });
			return;
		}
		lastAudio.setPannerEnabled(true);
		var px = cr.rotatePtAround(inst.x, inst.y, -inst.layer.getAngle(), listenerX, listenerY, true);
		var py = cr.rotatePtAround(inst.x, inst.y, -inst.layer.getAngle(), listenerX, listenerY, false);
		lastAudio.setPan(px, py, cr.to_degrees(inst.angle - inst.layer.getAngle()), innerangle, outerangle, dbToLinear(outergain));
		lastAudio.setObject(inst);
		lastAudio.play(looping!==0, v);
	};
	Acts.prototype.PlayByName = function (folder, filename, looping, vol, tag)
	{
		if (silent)
			return;
		var v = dbToLinear(vol);
		var is_music = (folder === 1);
		var src = this.runtime.files_subfolder + filename.toLowerCase() + (useOgg ? ".ogg" : ".m4a");
		lastAudio = this.getAudioInstance(src, tag, is_music, looping!==0, v);
		if (!lastAudio)
			return;
		lastAudio.setPannerEnabled(false);
		lastAudio.play(looping!==0, v);
	};
	Acts.prototype.PlayAtPositionByName = function (folder, filename, looping, vol, x_, y_, angle_, innerangle_, outerangle_, outergain_, tag)
	{
		if (silent)
			return;
		var v = dbToLinear(vol);
		var is_music = (folder === 1);
		var src = this.runtime.files_subfolder + filename.toLowerCase() + (useOgg ? ".ogg" : ".m4a");
		lastAudio = this.getAudioInstance(src, tag, is_music, looping!==0, v);
		if (!lastAudio)
		{
			var b = this.getAudioBuffer(src, is_music);
			b.panWhenReady.push({ x: x_, y: y_, a: angle_, ia: innerangle_, oa: outerangle_, og: dbToLinear(outergain_), thistag: tag });
			return;
		}
		lastAudio.setPannerEnabled(true);
		lastAudio.setPan(x_, y_, angle_, innerangle_, outerangle_, dbToLinear(outergain_));
		lastAudio.play(looping!==0, v);
	};
	Acts.prototype.PlayAtObjectByName = function (folder, filename, looping, vol, obj, innerangle, outerangle, outergain, tag)
	{
		if (silent || !obj)
			return;
		var inst = obj.getFirstPicked();
		if (!inst)
			return;
		var v = dbToLinear(vol);
		var is_music = (folder === 1);
		var src = this.runtime.files_subfolder + filename.toLowerCase() + (useOgg ? ".ogg" : ".m4a");
		lastAudio = this.getAudioInstance(src, tag, is_music, looping!==0, v);
		if (!lastAudio)
		{
			var b = this.getAudioBuffer(src, is_music);
			b.panWhenReady.push({ obj: inst, ia: innerangle, oa: outerangle, og: dbToLinear(outergain), thistag: tag });
			return;
		}
		lastAudio.setPannerEnabled(true);
		var px = cr.rotatePtAround(inst.x, inst.y, -inst.layer.getAngle(), listenerX, listenerY, true);
		var py = cr.rotatePtAround(inst.x, inst.y, -inst.layer.getAngle(), listenerX, listenerY, false);
		lastAudio.setPan(px, py, cr.to_degrees(inst.angle - inst.layer.getAngle()), innerangle, outerangle, dbToLinear(outergain));
		lastAudio.setObject(inst);
		lastAudio.play(looping!==0, v);
	};
	Acts.prototype.SetLooping = function (tag, looping)
	{
		getAudioByTag(tag);
		var i, len;
		for (i = 0, len = taggedAudio.length; i < len; i++)
			taggedAudio[i].setLooping(looping === 0);
	};
	Acts.prototype.SetMuted = function (tag, muted)
	{
		getAudioByTag(tag);
		var i, len;
		for (i = 0, len = taggedAudio.length; i < len; i++)
			taggedAudio[i].setMuted(muted === 0);
	};
	Acts.prototype.SetVolume = function (tag, vol)
	{
		getAudioByTag(tag);
		var v = dbToLinear(vol);
		var i, len;
		for (i = 0, len = taggedAudio.length; i < len; i++)
			taggedAudio[i].setVolume(v);
	};
	Acts.prototype.Preload = function (file)
	{
		if (silent)
			return;
		var is_music = file[1];
		var src = this.runtime.files_subfolder + file[0] + (useOgg ? ".ogg" : ".m4a");
		if (api === API_APPMOBI)
		{
			if (this.runtime.isDirectCanvas)
				AppMobi["context"]["loadSound"](src);
			else
				AppMobi["player"]["loadSound"](src);
			return;
		}
		else if (api === API_PHONEGAP)
		{
			return;
		}
		this.getAudioInstance(src, "<preload>", is_music, false);
	};
	Acts.prototype.PreloadByName = function (folder, filename)
	{
		if (silent)
			return;
		var is_music = (folder === 1);
		var src = this.runtime.files_subfolder + filename.toLowerCase() + (useOgg ? ".ogg" : ".m4a");
		if (api === API_APPMOBI)
		{
			if (this.runtime.isDirectCanvas)
				AppMobi["context"]["loadSound"](src);
			else
				AppMobi["player"]["loadSound"](src);
			return;
		}
		else if (api === API_PHONEGAP)
		{
			return;
		}
		this.getAudioInstance(src, "<preload>", is_music, false);
	};
	Acts.prototype.SetPlaybackRate = function (tag, rate)
	{
		getAudioByTag(tag);
		if (rate < 0.0)
			rate = 0;
		var i, len;
		for (i = 0, len = taggedAudio.length; i < len; i++)
			taggedAudio[i].setPlaybackRate(rate);
	};
	Acts.prototype.Stop = function (tag)
	{
		getAudioByTag(tag);
		var i, len;
		for (i = 0, len = taggedAudio.length; i < len; i++)
			taggedAudio[i].stop();
	};
	Acts.prototype.StopAll = function ()
	{
		var i, len;
		for (i = 0, len = audioInstances.length; i < len; i++)
			audioInstances[i].stop();
	};
	Acts.prototype.SetPaused = function (tag, state)
	{
		getAudioByTag(tag);
		var i, len;
		for (i = 0, len = taggedAudio.length; i < len; i++)
		{
			if (state === 0)
				taggedAudio[i].pause();
			else
				taggedAudio[i].resume();
		}
	};
	Acts.prototype.Seek = function (tag, pos)
	{
		getAudioByTag(tag);
		var i, len;
		for (i = 0, len = taggedAudio.length; i < len; i++)
		{
			taggedAudio[i].seek(pos);
		}
	};
	Acts.prototype.SetSilent = function (s)
	{
		var i, len;
		if (s === 2)					// toggling
			s = (silent ? 1 : 0);		// choose opposite state
		if (s === 0 && !silent)			// setting silent
		{
			for (i = 0, len = audioInstances.length; i < len; i++)
				audioInstances[i].setSilent(true);
			silent = true;
		}
		else if (s === 1 && silent)		// setting not silent
		{
			for (i = 0, len = audioInstances.length; i < len; i++)
				audioInstances[i].setSilent(false);
			silent = false;
		}
	};
	Acts.prototype.SetMasterVolume = function (vol)
	{
		masterVolume = dbToLinear(vol);
		var i, len;
		for (i = 0, len = audioInstances.length; i < len; i++)
			audioInstances[i].updateVolume();
	};
	Acts.prototype.AddFilterEffect = function (tag, type, freq, detune, q, gain, mix)
	{
		if (api !== API_WEBAUDIO || type < 0 || type >= filterTypes.length)
			return;
		tag = tag.toLowerCase();
		mix = mix / 100;
		if (mix < 0) mix = 0;
		if (mix > 1) mix = 1;
		addEffectForTag(tag, new FilterEffect(type, freq, detune, q, gain, mix));
	};
	Acts.prototype.AddDelayEffect = function (tag, delay, gain, mix)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		mix = mix / 100;
		if (mix < 0) mix = 0;
		if (mix > 1) mix = 1;
		addEffectForTag(tag, new DelayEffect(delay, dbToLinear(gain), mix));
	};
	Acts.prototype.AddFlangerEffect = function (tag, delay, modulation, freq, feedback, mix)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		mix = mix / 100;
		if (mix < 0) mix = 0;
		if (mix > 1) mix = 1;
		addEffectForTag(tag, new FlangerEffect(delay / 1000, modulation / 1000, freq, feedback / 100, mix));
	};
	Acts.prototype.AddPhaserEffect = function (tag, freq, detune, q, mod, modfreq, mix)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		mix = mix / 100;
		if (mix < 0) mix = 0;
		if (mix > 1) mix = 1;
		addEffectForTag(tag, new PhaserEffect(freq, detune, q, mod, modfreq, mix));
	};
	Acts.prototype.AddConvolutionEffect = function (tag, file, norm, mix)
	{
		if (api !== API_WEBAUDIO)
			return;
		var doNormalize = (norm === 0);
		var src = this.runtime.files_subfolder + file[0] + (useOgg ? ".ogg" : ".m4a");
		var b = this.getAudioBuffer(src, false);
		tag = tag.toLowerCase();
		mix = mix / 100;
		if (mix < 0) mix = 0;
		if (mix > 1) mix = 1;
		var fx;
		if (b.bufferObject)
		{
			fx = new ConvolveEffect(b.bufferObject, doNormalize, mix, src);
		}
		else
		{
			fx = new ConvolveEffect(null, doNormalize, mix, src);
			b.normalizeWhenReady = doNormalize;
			b.convolveWhenReady = fx;
		}
		addEffectForTag(tag, fx);
	};
	Acts.prototype.AddGainEffect = function (tag, g)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		addEffectForTag(tag, new GainEffect(dbToLinear(g)));
	};
	Acts.prototype.AddMuteEffect = function (tag)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		addEffectForTag(tag, new GainEffect(0));	// re-use gain effect with 0 gain
	};
	Acts.prototype.AddTremoloEffect = function (tag, freq, mix)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		mix = mix / 100;
		if (mix < 0) mix = 0;
		if (mix > 1) mix = 1;
		addEffectForTag(tag, new TremoloEffect(freq, mix));
	};
	Acts.prototype.AddRingModEffect = function (tag, freq, mix)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		mix = mix / 100;
		if (mix < 0) mix = 0;
		if (mix > 1) mix = 1;
		addEffectForTag(tag, new RingModulatorEffect(freq, mix));
	};
	Acts.prototype.AddDistortionEffect = function (tag, threshold, headroom, drive, makeupgain, mix)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		mix = mix / 100;
		if (mix < 0) mix = 0;
		if (mix > 1) mix = 1;
		addEffectForTag(tag, new DistortionEffect(threshold, headroom, drive, makeupgain, mix));
	};
	Acts.prototype.AddCompressorEffect = function (tag, threshold, knee, ratio, attack, release)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		addEffectForTag(tag, new CompressorEffect(threshold, knee, ratio, attack / 1000, release / 1000));
	};
	Acts.prototype.AddAnalyserEffect = function (tag, fftSize, smoothing)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		addEffectForTag(tag, new AnalyserEffect(fftSize, smoothing));
	};
	Acts.prototype.RemoveEffects = function (tag)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		var i, len, arr;
		if (effects.hasOwnProperty(tag))
		{
			arr = effects[tag];
			if (arr.length)
			{
				for (i = 0, len = arr.length; i < len; i++)
					arr[i].remove();
				arr.length = 0;
				reconnectEffects(tag);
			}
		}
	};
	Acts.prototype.SetEffectParameter = function (tag, index, param, value, ramp, time)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		index = Math.floor(index);
		var arr;
		if (!effects.hasOwnProperty(tag))
			return;
		arr = effects[tag];
		if (index < 0 || index >= arr.length)
			return;
		arr[index].setParam(param, value, ramp, time);
	};
	Acts.prototype.SetListenerObject = function (obj_)
	{
		if (!obj_ || api !== API_WEBAUDIO)
			return;
		var inst = obj_.getFirstPicked();
		if (!inst)
			return;
		this.listenerTracker.setObject(inst);
		listenerX = inst.x;
		listenerY = inst.y;
	};
	Acts.prototype.SetListenerZ = function (z)
	{
		this.listenerZ = z;
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.Duration = function (ret, tag)
	{
		getAudioByTag(tag);
		if (taggedAudio.length)
			ret.set_float(taggedAudio[0].getDuration());
		else
			ret.set_float(0);
	};
	Exps.prototype.PlaybackTime = function (ret, tag)
	{
		getAudioByTag(tag);
		if (taggedAudio.length)
			ret.set_float(taggedAudio[0].getPlaybackTime());
		else
			ret.set_float(0);
	};
	Exps.prototype.Volume = function (ret, tag)
	{
		getAudioByTag(tag);
		if (taggedAudio.length)
		{
			var v = taggedAudio[0].getVolume();
			ret.set_float(linearToDb(v));
		}
		else
			ret.set_float(0);
	};
	Exps.prototype.MasterVolume = function (ret)
	{
		ret.set_float(masterVolume);
	};
	Exps.prototype.EffectCount = function (ret, tag)
	{
		tag = tag.toLowerCase();
		var arr = null;
		if (effects.hasOwnProperty(tag))
			arr = effects[tag];
		ret.set_int(arr ? arr.length : 0);
	};
	function getAnalyser(tag, index)
	{
		var arr = null;
		if (effects.hasOwnProperty(tag))
			arr = effects[tag];
		if (arr && index >= 0 && index < arr.length && arr[index].freqBins)
			return arr[index];
		else
			return null;
	};
	Exps.prototype.AnalyserFreqBinCount = function (ret, tag, index)
	{
		tag = tag.toLowerCase();
		index = Math.floor(index);
		var analyser = getAnalyser(tag, index);
		ret.set_int(analyser ? analyser.node["frequencyBinCount"] : 0);
	};
	Exps.prototype.AnalyserFreqBinAt = function (ret, tag, index, bin)
	{
		tag = tag.toLowerCase();
		index = Math.floor(index);
		bin = Math.floor(bin);
		var analyser = getAnalyser(tag, index);
		if (!analyser)
			ret.set_float(0);
		else if (bin < 0 || bin >= analyser.node["frequencyBinCount"])
			ret.set_float(0);
		else
			ret.set_float(analyser.freqBins[bin]);
	};
	Exps.prototype.AnalyserPeakLevel = function (ret, tag, index)
	{
		tag = tag.toLowerCase();
		index = Math.floor(index);
		var analyser = getAnalyser(tag, index);
		if (analyser)
			ret.set_float(analyser.peak);
		else
			ret.set_float(0);
	};
	Exps.prototype.AnalyserRMSLevel = function (ret, tag, index)
	{
		tag = tag.toLowerCase();
		index = Math.floor(index);
		var analyser = getAnalyser(tag, index);
		if (analyser)
			ret.set_float(analyser.rms);
		else
			ret.set_float(0);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.Browser = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Browser.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		var self = this;
		window.addEventListener("resize", function () {
			self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnResize, self);
		});
		if (typeof navigator.onLine !== "undefined")
		{
			window.addEventListener("online", function() {
				self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnOnline, self);
			});
			window.addEventListener("offline", function() {
				self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnOffline, self);
			});
		}
		if (typeof window.applicationCache !== "undefined")
		{
			window.applicationCache.addEventListener('updateready', function() {
				self.runtime.loadingprogress = 1;
				self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnUpdateReady, self);
			});
			window.applicationCache.addEventListener('progress', function(e) {
				self.runtime.loadingprogress = e["loaded"] / e["total"];
			});
		}
		if (!this.runtime.isDirectCanvas)
		{
			document.addEventListener("appMobi.device.update.available", function() {
				self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnUpdateReady, self);
			});
			document.addEventListener("menubutton", function() {
				self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnMenuButton, self);
			});
			document.addEventListener("searchbutton", function() {
				self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnSearchButton, self);
			});
			document.addEventListener("tizenhwkey", function (e) {
				var ret;
				switch (e["keyName"]) {
				case "back":
					ret = self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnBackButton, self);
					if (!ret)
					{
						if (window["tizen"])
							window["tizen"]["application"]["getCurrentApplication"]()["exit"]();
					}
					break;
				case "menu":
					ret = self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnMenuButton, self);
					if (!ret)
						e.preventDefault();
					break;
				}
			});
		}
		this.runtime.addSuspendCallback(function(s) {
			if (s)
			{
				self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnPageHidden, self);
			}
			else
			{
				self.runtime.trigger(cr.plugins_.Browser.prototype.cnds.OnPageVisible, self);
			}
		});
		this.is_arcade = (typeof window["is_scirra_arcade"] !== "undefined");
		this.fullscreenOldMarginCss = "";
	};
	function Cnds() {};
	Cnds.prototype.CookiesEnabled = function()
	{
		return navigator ? navigator.cookieEnabled : false;
	};
	Cnds.prototype.IsOnline = function()
	{
		return navigator ? navigator.onLine : false;
	};
	Cnds.prototype.HasJava = function()
	{
		return navigator ? navigator.javaEnabled() : false;
	};
	Cnds.prototype.OnOnline = function()
	{
		return true;
	};
	Cnds.prototype.OnOffline = function()
	{
		return true;
	};
	Cnds.prototype.IsDownloadingUpdate = function ()
	{
		if (typeof window["applicationCache"] === "undefined")
			return false;
		else
			return window["applicationCache"]["status"] === window["applicationCache"]["DOWNLOADING"];
	};
	Cnds.prototype.OnUpdateReady = function ()
	{
		return true;
	};
	Cnds.prototype.PageVisible = function ()
	{
		return !this.runtime.isSuspended;
	};
	Cnds.prototype.OnPageVisible = function ()
	{
		return true;
	};
	Cnds.prototype.OnPageHidden = function ()
	{
		return true;
	};
	Cnds.prototype.OnResize = function ()
	{
		return true;
	};
	Cnds.prototype.IsFullscreen = function ()
	{
		return !!(document["mozFullScreen"] || document["webkitIsFullScreen"] || document["fullScreen"] || this.runtime.isNodeFullscreen);
	};
	Cnds.prototype.OnBackButton = function ()
	{
		return true;
	};
	Cnds.prototype.OnMenuButton = function ()
	{
		return true;
	};
	Cnds.prototype.OnSearchButton = function ()
	{
		return true;
	};
	Cnds.prototype.IsMetered = function ()
	{
		var connection = navigator["connection"] || navigator["mozConnection"] || navigator["webkitConnection"];
		if (!connection)
			return false;
		return connection["metered"];
	};
	Cnds.prototype.IsCharging = function ()
	{
		var battery = navigator["battery"] || navigator["mozBattery"] || navigator["webkitBattery"];
		if (!battery)
			return true;
		return battery["charging"];
	};
	Cnds.prototype.IsPortraitLandscape = function (p)
	{
		var current = (window.innerWidth <= window.innerHeight ? 0 : 1);
		return current === p;
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.Alert = function (msg)
	{
		if (!this.runtime.isDomFree)
			alert(msg.toString());
	};
	Acts.prototype.Close = function ()
	{
		if (this.runtime.isCocoonJs)
			CocoonJS["App"]["forceToFinish"]();
		else if (!this.is_arcade && !this.runtime.isDomFree)
			window.close();
	};
	Acts.prototype.Focus = function ()
	{
		if (this.runtime.isNodeWebkit)
		{
			var win = window["nwgui"]["Window"]["get"]();
			win["focus"]();
		}
		else if (!this.is_arcade && !this.runtime.isDomFree)
			window.focus();
	};
	Acts.prototype.Blur = function ()
	{
		if (this.runtime.isNodeWebkit)
		{
			var win = window["nwgui"]["Window"]["get"]();
			win["blur"]();
		}
		else if (!this.is_arcade && !this.runtime.isDomFree)
			window.blur();
	};
	Acts.prototype.GoBack = function ()
	{
		if (!this.is_arcade && !this.runtime.isDomFree && window.back)
			window.back();
	};
	Acts.prototype.GoForward = function ()
	{
		if (!this.is_arcade && !this.runtime.isDomFree && window.forward)
			window.forward();
	};
	Acts.prototype.GoHome = function ()
	{
		if (!this.is_arcade && !this.runtime.isDomFree && window.home)
			window.home();
	};
	Acts.prototype.GoToURL = function (url)
	{
		if (this.runtime.isCocoonJs)
			CocoonJS["App"]["openURL"](url);
		else if (!this.is_arcade && !this.runtime.isDomFree)
			window.location = url;
	};
	Acts.prototype.GoToURLWindow = function (url, tag)
	{
		console.log("GoToURLWindow");
		console.log(url);
		
		if (this.runtime.isCocoonJs)
			CocoonJS["App"]["openURL"](url);
		else if (!this.is_arcade && !this.runtime.isDomFree){
			logoClick();
		}
			
	};
	Acts.prototype.Reload = function ()
	{
		if (!this.is_arcade && !this.runtime.isDomFree)
			window.location.reload();
	};
	var firstRequestFullscreen = true;
	var crruntime = null;
	function onFullscreenError()
	{
		if (typeof jQuery !== "undefined")
		{
			crruntime["setSize"](jQuery(window).width(), jQuery(window).height());
		}
	};
	Acts.prototype.RequestFullScreen = function (stretchmode)
	{
		if (this.runtime.isDomFree)
		{
			cr.logexport("[Construct 2] Requesting fullscreen is not supported on this platform - the request has been ignored");
			return;
		}
		if (stretchmode >= 2)
			stretchmode += 1;
		if (stretchmode === 6)
			stretchmode = 2;
		if (this.runtime.isNodeWebkit)
		{
			if (!this.runtime.isNodeFullscreen)
			{
				window["nwgui"]["Window"]["get"]()["enterFullscreen"]();
				this.runtime.isNodeFullscreen = true;
			}
		}
		else
		{
			if (document["mozFullScreen"] || document["webkitIsFullScreen"] || !!document["msFullscreenElement"] || document["fullScreen"])
			{
				return;
			}
			this.fullscreenOldMarginCss = jQuery(this.runtime.canvasdiv).css("margin");
			jQuery(this.runtime.canvasdiv).css("margin", "0");
			window["c2resizestretchmode"] = (stretchmode > 0 ? 1 : 0);
			this.runtime.fullscreen_scaling = (stretchmode >= 2 ? stretchmode : 0);
			var elem = this.runtime.canvasdiv || this.runtime.canvas;
			if (firstRequestFullscreen)
			{
				firstRequestFullscreen = false;
				crruntime = this.runtime;
				elem.addEventListener("mozfullscreenerror", onFullscreenError);
				elem.addEventListener("webkitfullscreenerror", onFullscreenError);
				elem.addEventListener("msfullscreenerror", onFullscreenError);
				elem.addEventListener("fullscreenerror", onFullscreenError);
			}
			if (!cr.is_undefined(elem["webkitRequestFullScreen"]))
			{
				if (typeof Element !== "undefined" && typeof Element["ALLOW_KEYBOARD_INPUT"] !== "undefined")
					elem["webkitRequestFullScreen"](Element["ALLOW_KEYBOARD_INPUT"]);
				else
					elem["webkitRequestFullScreen"]();
			}
			else if (!cr.is_undefined(elem["mozRequestFullScreen"]))
				elem["mozRequestFullScreen"]();
			else if (!cr.is_undefined(elem["msRequestFullscreen"]))
				elem["msRequestFullscreen"]();
			else if (!cr.is_undefined(elem["requestFullscreen"]))
				elem["requestFullscreen"]();
		}
	};
	Acts.prototype.CancelFullScreen = function ()
	{
		if (this.runtime.isDomFree)
		{
			cr.logexport("[Construct 2] Exiting fullscreen is not supported on this platform - the request has been ignored");
			return;
		}
		if (this.runtime.isNodeWebkit)
		{
			if (this.runtime.isNodeFullscreen)
			{
				window["nwgui"]["Window"]["get"]()["leaveFullscreen"]();
				this.runtime.isNodeFullscreen = false;
			}
		}
		else
		{
			if (!cr.is_undefined(document["webkitCancelFullScreen"]))
				document["webkitCancelFullScreen"]();
			else if (!cr.is_undefined(document["mozCancelFullScreen"]))
				document["mozCancelFullScreen"]();
			else if (!cr.is_undefined(document["msExitFullscreen"]))
				document["msExitFullscreen"]();
			else if (!cr.is_undefined(document["exitFullscreen"]))
				document["exitFullscreen"]();
			jQuery(this.runtime.canvasdiv).css("margin", this.fullscreenOldMarginCss);
		}
	};
	Acts.prototype.Vibrate = function (pattern_)
	{
		try {
			var arr = pattern_.split(",");
			var i, len;
			for (i = 0, len = arr.length; i < len; i++)
			{
				arr[i] = parseInt(arr[i], 10);
			}
			if (navigator["vibrate"])
				navigator["vibrate"](arr);
			else if (navigator["mozVibrate"])
				navigator["mozVibrate"](arr);
			else if (navigator["webkitVibrate"])
				navigator["webkitVibrate"](arr);
		}
		catch (e) {}
	};
	Acts.prototype.InvokeDownload = function (url_, filename_)
	{
		var a = document.createElement("a");
		if (typeof a.download === "undefined")
		{
			window.open(url_);
		}
		else
		{
			var body = document.getElementsByTagName("body")[0];
			a.textContent = filename_;
			a.href = url_;
			a.download = filename_;
			body.appendChild(a);
			var clickEvent = document.createEvent("MouseEvent");
			clickEvent.initMouseEvent("click", true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);
			a.dispatchEvent(clickEvent);
			body.removeChild(a);
		}
	};
	Acts.prototype.ConsoleLog = function (type_, msg_)
	{
		if (!console)
			return;
		if (type_ === 0 && console.log)
			console.log(msg_.toString());
		if (type_ === 1 && console.warn)
			console.warn(msg_.toString());
		if (type_ === 2 && console.error)
			console.error(msg_.toString());
	};
	Acts.prototype.ConsoleGroup = function (name_)
	{
		if (console && console.group)
			console.group(name_);
	};
	Acts.prototype.ConsoleGroupEnd = function ()
	{
		if (console && console.groupEnd)
			console.groupEnd();
	};
	Acts.prototype.ExecJs = function (js_)
	{
		if (eval)
			eval(js_);
	};
	var orientations = [
		"portrait",
		"landscape",
		"portrait-primary",
		"portrait-secondary",
		"landscape-primary",
		"landscape-secondary"
	];
	Acts.prototype.LockOrientation = function (o)
	{
		o = Math.floor(o);
		if (o < 0 || o >= orientations.length)
			return;
		var orientation = orientations[o];
		if (screen["lockOrientation"])
			screen["lockOrientation"](orientation);
		else if (screen["webkitLockOrientation"])
			screen["webkitLockOrientation"](orientation);
		else if (screen["mozLockOrientation"])
			screen["mozLockOrientation"](orientation);
		else if (screen["msLockOrientation"])
			screen["msLockOrientation"](orientation);
	};
	Acts.prototype.UnlockOrientation = function ()
	{
		if (screen["unlockOrientation"])
			screen["unlockOrientation"]();
		else if (screen["webkitUnlockOrientation"])
			screen["webkitUnlockOrientation"]();
		else if (screen["mozUnlockOrientation"])
			screen["mozUnlockOrientation"]();
		else if (screen["msUnlockOrientation"])
			screen["msUnlockOrientation"]();
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.URL = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : window.location.toString());
	};
	Exps.prototype.Protocol = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : window.location.protocol);
	};
	Exps.prototype.Domain = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : window.location.hostname);
	};
	Exps.prototype.PathName = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : window.location.pathname);
	};
	Exps.prototype.Hash = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : window.location.hash);
	};
	Exps.prototype.Referrer = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : document.referrer);
	};
	Exps.prototype.Title = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : document.title);
	};
	Exps.prototype.Name = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : navigator.appName);
	};
	Exps.prototype.Version = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : navigator.appVersion);
	};
	Exps.prototype.Language = function (ret)
	{
		if (navigator && navigator.language)
			ret.set_string(navigator.language);
		else
			ret.set_string("");
	};
	Exps.prototype.Platform = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : navigator.platform);
	};
	Exps.prototype.Product = function (ret)
	{
		if (navigator && navigator.product)
			ret.set_string(navigator.product);
		else
			ret.set_string("");
	};
	Exps.prototype.Vendor = function (ret)
	{
		if (navigator && navigator.vendor)
			ret.set_string(navigator.vendor);
		else
			ret.set_string("");
	};
	Exps.prototype.UserAgent = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : navigator.userAgent);
	};
	Exps.prototype.QueryString = function (ret)
	{
		ret.set_string(this.runtime.isDomFree ? "" : window.location.search);
	};
	Exps.prototype.QueryParam = function (ret, paramname)
	{
		if (this.runtime.isDomFree)
		{
			ret.set_string("");
			return;
		}
		var match = RegExp('[?&]' + paramname + '=([^&]*)').exec(window.location.search);
		if (match)
			ret.set_string(decodeURIComponent(match[1].replace(/\+/g, ' ')));
		else
			ret.set_string("");
	};
	Exps.prototype.Bandwidth = function (ret)
	{
		var connection = navigator["connection"] || navigator["mozConnection"] || navigator["webkitConnection"];
		if (!connection)
			ret.set_float(Number.POSITIVE_INFINITY);
		else
			ret.set_float(connection["bandwidth"]);
	};
	Exps.prototype.BatteryLevel = function (ret)
	{
		var battery = navigator["battery"] || navigator["mozBattery"] || navigator["webkitBattery"];
		if (!battery)
			ret.set_float(1);
		else
			ret.set_float(battery["level"]);
	};
	Exps.prototype.BatteryTimeLeft = function (ret)
	{
		var battery = navigator["battery"] || navigator["mozBattery"] || navigator["webkitBattery"];
		if (!battery)
			ret.set_float(Number.POSITIVE_INFINITY);
		else
			ret.set_float(battery["dischargingTime"]);
	};
	Exps.prototype.ExecJS = function (ret, js_)
	{
		if (!eval)
		{
			ret.set_any(0);
			return;
		}
		var result = eval(js_);
		if (typeof result === "number")
			ret.set_any(result);
		else if (typeof result === "string")
			ret.set_any(result);
		else if (typeof result === "boolean")
			ret.set_any(result ? 1 : 0);
		else
			ret.set_any(0);
	};
	Exps.prototype.ScreenWidth = function (ret)
	{
		ret.set_int(screen.width);
	};
	Exps.prototype.ScreenHeight = function (ret)
	{
		ret.set_int(screen.height);
	};
	Exps.prototype.DevicePixelRatio = function (ret)
	{
		ret.set_float(this.runtime.devicePixelRatio);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.Function = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Function.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	var funcStack = [];
	var funcStackPtr = -1;
	var isInPreview = false;	// set in onCreate
	function FuncStackEntry()
	{
		this.name = "";
		this.retVal = 0;
		this.params = [];
	};
	function pushFuncStack()
	{
		funcStackPtr++;
		if (funcStackPtr === funcStack.length)
			funcStack.push(new FuncStackEntry());
		return funcStack[funcStackPtr];
	};
	function getCurrentFuncStack()
	{
		if (funcStackPtr < 0)
			return null;
		return funcStack[funcStackPtr];
	};
	function getOneAboveFuncStack()
	{
		if (!funcStack.length)
			return null;
		var i = funcStackPtr + 1;
		if (i >= funcStack.length)
			i = funcStack.length - 1;
		return funcStack[i];
	};
	function popFuncStack()
	{
;
		funcStackPtr--;
	};
	instanceProto.onCreate = function()
	{
		isInPreview = (typeof cr_is_preview !== "undefined");
	};
	function Cnds() {};
	Cnds.prototype.OnFunction = function (name_)
	{
	
		var fs = getCurrentFuncStack();
		if (!fs)
			return false;
		return cr.equals_nocase(name_, fs.name);
	};
	Cnds.prototype.CompareParam = function (index_, cmp_, value_)
	{
		var fs = getCurrentFuncStack();
		if (!fs)
			return false;
		index_ = cr.floor(index_);
		if (index_ < 0 || index_ >= fs.params.length)
			return false;
		return cr.do_cmp(fs.params[index_], cmp_, value_);
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.CallFunction = function (name_, params_)
	{
		var fs = pushFuncStack();
		fs.name = name_.toLowerCase();
		fs.retVal = 0;
		cr.shallowAssignArray(fs.params, params_);
		var ran = this.runtime.trigger(cr.plugins_.Function.prototype.cnds.OnFunction, this, fs.name);
		if (isInPreview && !ran)
		{
;
		}
		popFuncStack();
	};
	Acts.prototype.SetReturnValue = function (value_)
	{
		var fs = getCurrentFuncStack();
		if (fs)
			fs.retVal = value_;
		else
;
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.ReturnValue = function (ret)
	{
		var fs = getOneAboveFuncStack();
		if (fs)
			ret.set_any(fs.retVal);
		else
			ret.set_int(0);
	};
	Exps.prototype.ParamCount = function (ret)
	{
		var fs = getCurrentFuncStack();
		if (fs)
			ret.set_int(fs.params.length);
		else
		{
;
			ret.set_int(0);
		}
	};
	Exps.prototype.Param = function (ret, index_)
	{
		index_ = cr.floor(index_);
		var fs = getCurrentFuncStack();
		if (fs)
		{
			if (index_ >= 0 && index_ < fs.params.length)
			{
				ret.set_any(fs.params[index_]);
			}
			else
			{
;
				ret.set_int(0);
			}
		}
		else
		{
;
			ret.set_int(0);
		}
	};
	Exps.prototype.Call = function (ret, name_)
	{
		var fs = pushFuncStack();
		fs.name = name_.toLowerCase();
		fs.retVal = 0;
		fs.params.length = 0;
		var i, len;
		for (i = 2, len = arguments.length; i < len; i++)
			fs.params.push(arguments[i]);
		var ran = this.runtime.trigger(cr.plugins_.Function.prototype.cnds.OnFunction, this, fs.name);
		if (isInPreview && !ran)
		{
;
		}
		popFuncStack();
		ret.set_any(fs.retVal);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.HTML_Div_Pode = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.HTML_Div_Pode.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
		this.divloaded=0;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		this.elem = document.createElement("div");
		this.elem.innerHTML=this.properties[1];
		this.elem.style.cssText=this.properties[2];
		this.CSSstyle = this.properties[2];
		var widthfactor = this.width > 0 ? 1 : -1;
		var heightfactor = this.height > 0 ? 1 : -1;
		this.elem.setAttribute("id",this.properties[3]);
		this.angle2D = this.angle;
		/*this.angle3DX = 0;
		this.angle3DY = 0;
		this.angle3DZ = 0;
		if(this.properties[5] == 1){
			this.angle3DX = this.properties[8];
		}
		if(this.properties[6] == 1){
			this.angle3DY = this.properties[8];
		}
		if(this.properties[7] == 1){
			this.angle3DZ = this.properties[8];
		}*/
		this.rotation2D = "-webkit-transform:rotate("+ this.angle * widthfactor * heightfactor*180/3.1416
										+"deg);"+
									"-moz-transform:rotate("+ this.angle * widthfactor * heightfactor*180/3.1416
										+"deg);"+
									"-o-transform:rotate("+ this.angle * widthfactor * heightfactor*180/3.1416
										+"deg);";
		/*this.perspectiveValue =  "-webkit-perspective:"+ this.properties[4]
										+";"+
									"-moz-perspective:"+ this.properties[4]
										+";"+
									"-o-perspective:"+ this.properties[4]
										+";";
		this.rotation3D = "-webkit-transform:rotate3d("+ this.properties[5] + "," + this.properties[6] + "," + this.properties[7] + "," + this.properties[8] + "deg);" +
														"-moz-transform:rotate3d("+ this.properties[5] + "," + this.properties[6] + "," + this.properties[7] + "," + this.properties[8] + "deg);" +
														"-o-transform:rotate3d("+ this.properties[5] + "," + this.properties[6] + "," + this.properties[7] + "," + this.properties[8] + "deg);" +
														"-ms-transform:rotate3d("+ this.properties[5] + "," + this.properties[6] + "," + this.properties[7] + "," + this.properties[8] + "deg);" +
														"transform:rotate3d("+ this.properties[5] + "," + this.properties[6] + "," + this.properties[7] + "," + this.properties[8] + "deg);";
		*/
		this.elem.style.cssText += ";"+/*this.CSSstyle +";"+*/ this.rotation2D/* + this.perspectiveValue + this.rotation3D*/;
		this.elem.width = Math.round(this.elem.width);
		this.elem.height = Math.round(this.elem.height);
		this.elem.x = Math.round(this.elem.x);
		this.elem.y = Math.round(this.elem.y);
		jQuery(this.elem).appendTo("body");
		if (this.properties[0] === 0)
		{
			jQuery(this.elem).hide();
			this.visible = false;
		}
		this.updatePosition();
		this.runtime.tickMe(this);
	};
	instanceProto.onDestroy = function ()
	{
		jQuery(this.elem).remove();
		this.elem = null;
	};
	instanceProto.tick = function ()
	{
		this.updatePosition();
	};
	instanceProto.updatePosition = function ()
	{
		var left = this.layer.layerToCanvas(this.x, this.y, true);
		var top = this.layer.layerToCanvas(this.x, this.y, false);
		var right = this.layer.layerToCanvas(this.x + this.width, this.y + this.height, true);
		var bottom = this.layer.layerToCanvas(this.x + this.width, this.y + this.height, false);
		if (!this.visible || !this.layer.visible || right <= 0 || bottom <= 0 || left >= this.runtime.width || top >= this.runtime.height)
		{
			jQuery(this.elem).hide();
			return;
		}
		if (left < 1)
			left = 1;
		if (top < 1)
			top = 1;
		if (right >= this.runtime.width)
			right = this.runtime.width - 1;
		if (bottom >= this.runtime.height)
			bottom = this.runtime.height - 1;
		jQuery(this.elem).show();
		var offx = left + jQuery(this.runtime.canvas).offset().left;
		var offy = top + jQuery(this.runtime.canvas).offset().top;
		jQuery(this.elem).offset({left: offx, top: offy});
		jQuery(this.elem).width(right - left);
		jQuery(this.elem).height(bottom - top);
		this.elem.width = Math.round(this.elem.width);
		this.elem.height = Math.round(this.elem.height);
		this.elem.x = Math.round(this.elem.x);
		this.elem.y = Math.round(this.elem.y);
	};
	instanceProto.draw = function(ctx)
	{
	};
	instanceProto.drawGL = function(glw)
	{
	};
	pluginProto.cnds = {};
	var cnds = pluginProto.cnds;
	cnds.CompareinnerHTML = function (text, case_)
	{
			return this.elem.innerHTML === text;
	};
	cnds.CompareStyle = function (text, case_)
	{
			return this.elem.style.cssText === text;
	};
	cnds.OnComplete = function (hmm)
	{
		return true;
	};
	cnds.OnError = function ()
	{
		return true;
	};
	cnds.isFocused = function ()
	{
		if(this.elem == document.activeElement) return true;
		else return false;
	};
	pluginProto.acts = {};
	var acts = pluginProto.acts;
	acts.SetInnerHTML = function (text)
	{
		this.elem.innerHTML = text;
	};
	acts.rotate3d = function (x,y,z,deg)
	{
		var rotationTemp = "";
		if(x == 1){
			this.angle3DX = this.angle3DX+deg;
			rotationTemp = 	"-webkit-transform:rotateX("+this.angle3DX + "deg);" +
								"-moz-transform:rotateX("+this.angle3DX + "deg);" +
								"-o-transform:rotateX("+this.angle3DX + "deg);" +
								"-ms-transform:rotateX("+this.angle3DX + "deg);" +
								"transform:rotateX("+this.angle3DX + "deg);";
		}
		if(y == 1){
			this.angle3DY = this.angle3DY+deg;
			rotationTemp = 	rotationTemp + "-webkit-transform:rotateY("+this.angle3DY + "deg);" +
								"-moz-transform:rotateY("+this.angle3DY + "deg);" +
								"-o-transform:rotateY("+this.angle3DY + "deg);" +
								"-ms-transform:rotateY("+this.angle3DY + "deg);" +
								"transform:rotateY("+this.angle3DY + "deg);";
		}
		if(z == 1){
			this.angle3DZ = this.angle3DZ+deg;
			rotationTemp = 	rotationTemp + "-webkit-transform:rotateZ("+this.angle3DZ + "deg);" +
								"-moz-transform:rotateZ("+this.angle3DZ + "deg);" +
								"-o-transform:rotateZ("+this.angle3DZ + "deg);" +
								"-ms-transform:rotateZ("+this.angle3DZ + "deg);" +
								"transform:rotateZ("+this.angle3DZ + "deg);";
		}
		this.rotation3D = rotationTemp;
		this.elem.style.cssText= this.CSSstyle + this.rotation2D + this.perspectiveValue + this.rotation3D
									/*+"position: absolute;"
									+"left"+this.x+"px;"
									+"top"+this.y+"px;"
									+"-webkit-backface-visibility:visible;"
									+"-webkit-transform-style: flat;";*/
		this.updatePosition();
	};
	acts.rotate2d = function (deg)
	{
		var widthfactor = this.width > 0 ? 1 : -1;
		var heightfactor = this.height > 0 ? 1 : -1;
		this.rotation2D = "-webkit-transform:rotate("+ deg * widthfactor * heightfactor*180/3.1416
										+"deg);"+
									"-moz-transform:rotate("+ deg * widthfactor * heightfactor*180/3.1416
										+"deg);"+
									"-o-transform:rotate("+ deg * widthfactor * heightfactor*180/3.1416
										+"deg);";
		this.elem.style.cssText= this.CSSstyle + this.rotation2D + this.perspectiveValue + this.rotation3D;
		this.angle = this.angle2D+deg*180/3.1416;
	};
	acts.setPerspective = function (perspective)
	{
		this.perspectiveValue = "-webkit-perspective:" + perspective +";" +
														"-moz-perspective:" + perspective +";" +
														"-o-perspective:" + perspective +";" +
														"-ms-perspective:" + perspective +";" +
														"perspective:" + perspective +";"
		this.elem.style.cssText= this.CSSstyle + this.rotation2D + this.perspectiveValue + this.rotation3D;
	};
	acts.LoadDiv = function (url_,postdata_)
	{
		if(postdata_.length){
				jQuery.ajax({
					context: this,
					dataType: "text",
					type: "POST",
					url: url_,
					data: postdata_,
					success: function(data) {
						this.elem.innerHTML=data;
						this.runtime.trigger(cr.plugins_.HTML_Div.prototype.cnds.OnComplete, this);
					},
					error: function() {
						this.runtime.trigger(cr.plugins_.HTML_Div.prototype.cnds.OnError, this);
					}
				});
			} else {
				jQuery.ajax({
					context: this,
					dataType: "text",
					type: "GET",
					url: url_,
					success: function(data) {
						this.elem.innerHTML=data;
						this.runtime.trigger(cr.plugins_.HTML_Div.prototype.cnds.OnComplete, this);
					},
					error: function() {
						this.runtime.trigger(cr.plugins_.HTML_Div.prototype.cnds.OnError, this);
					}
				});
			};
	};
	acts.SetStyle = function (text)
	{
		this.CSSstyle = text;
		this.elem.style.cssText= this.CSSstyle + this.rotation2D + this.perspectiveValue + this.rotation3D;
	};
	acts.SetVisible = function (vis)
	{
		this.visible = (vis !== 0);
	};
	acts.setFocus = function ()
	{
		this.elem.focus();
	};
	pluginProto.exps = {};
	var exps = pluginProto.exps;
	exps.GetInnerHTML = function (ret)
	{
		ret.set_string(this.elem.innerHTML);
	};
	exps.GetStyle = function (ret)
	{
		ret.set_string(this.elem.style.cssText);
	};
}());
;
;
cr.plugins_.Keyboard = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Keyboard.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
		this.keyMap = new Array(256);	// stores key up/down state
		this.usedKeys = new Array(256);
		this.triggerKey = 0;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		var self = this;
		if (!this.runtime.isDomFree)
		{
			jQuery(document).keydown(
				function(info) {
					self.onKeyDown(info);
				}
			);
			jQuery(document).keyup(
				function(info) {
					self.onKeyUp(info);
				}
			);
		}
	};
	var keysToBlockWhenFramed = [32, 33, 34, 35, 36, 37, 38, 39, 40, 44];
	instanceProto.onKeyDown = function (info)
	{
		var alreadyPreventedDefault = false;
		if (window != window.top && keysToBlockWhenFramed.indexOf(info.which) > -1)
		{
			info.preventDefault();
			alreadyPreventedDefault = true;
			info.stopPropagation();
		}
		if (this.keyMap[info.which])
		{
			if (this.usedKeys[info.which] && !alreadyPreventedDefault)
				info.preventDefault();
			return;
		}
		this.keyMap[info.which] = true;
		this.triggerKey = info.which;
		this.runtime.trigger(cr.plugins_.Keyboard.prototype.cnds.OnAnyKey, this);
		var eventRan = this.runtime.trigger(cr.plugins_.Keyboard.prototype.cnds.OnKey, this);
		var eventRan2 = this.runtime.trigger(cr.plugins_.Keyboard.prototype.cnds.OnKeyCode, this);
		if (eventRan || eventRan2)
		{
			this.usedKeys[info.which] = true;
			if (!alreadyPreventedDefault)
				info.preventDefault();
		}
	};
	instanceProto.onKeyUp = function (info)
	{
		this.keyMap[info.which] = false;
		this.triggerKey = info.which;
		this.runtime.trigger(cr.plugins_.Keyboard.prototype.cnds.OnAnyKeyReleased, this);
		var eventRan = this.runtime.trigger(cr.plugins_.Keyboard.prototype.cnds.OnKeyReleased, this);
		var eventRan2 = this.runtime.trigger(cr.plugins_.Keyboard.prototype.cnds.OnKeyCodeReleased, this);
		if (eventRan || eventRan2 || this.usedKeys[info.which])
		{
			this.usedKeys[info.which] = true;
			info.preventDefault();
		}
	};
	instanceProto.saveToJSON = function ()
	{
		return { "triggerKey": this.triggerKey };
	};
	instanceProto.loadFromJSON = function (o)
	{
		this.triggerKey = o["triggerKey"];
	};
	function Cnds() {};
	Cnds.prototype.IsKeyDown = function(key)
	{
		return this.keyMap[key];
	};
	Cnds.prototype.OnKey = function(key)
	{
		return (key === this.triggerKey);
	};
	Cnds.prototype.OnAnyKey = function(key)
	{
		return true;
	};
	Cnds.prototype.OnAnyKeyReleased = function(key)
	{
		return true;
	};
	Cnds.prototype.OnKeyReleased = function(key)
	{
		return (key === this.triggerKey);
	};
	Cnds.prototype.IsKeyCodeDown = function(key)
	{
		key = Math.floor(key);
		if (key < 0 || key >= this.keyMap.length)
			return false;
		return this.keyMap[key];
	};
	Cnds.prototype.OnKeyCode = function(key)
	{
		return (key === this.triggerKey);
	};
	Cnds.prototype.OnKeyCodeReleased = function(key)
	{
		return (key === this.triggerKey);
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.LastKeyCode = function (ret)
	{
		ret.set_int(this.triggerKey);
	};
	function fixedStringFromCharCode(kc)
	{
		kc = Math.floor(kc);
		switch (kc) {
		case 8:		return "backspace";
		case 9:		return "tab";
		case 13:	return "enter";
		case 16:	return "shift";
		case 17:	return "control";
		case 18:	return "alt";
		case 19:	return "pause";
		case 20:	return "capslock";
		case 27:	return "esc";
		case 33:	return "pageup";
		case 34:	return "pagedown";
		case 35:	return "end";
		case 36:	return "home";
		case 37:	return "←";
		case 38:	return "↑";
		case 39:	return "→";
		case 40:	return "↓";
		case 45:	return "insert";
		case 46:	return "del";
		case 91:	return "left window key";
		case 92:	return "right window key";
		case 93:	return "select";
		case 96:	return "numpad 0";
		case 97:	return "numpad 1";
		case 98:	return "numpad 2";
		case 99:	return "numpad 3";
		case 100:	return "numpad 4";
		case 101:	return "numpad 5";
		case 102:	return "numpad 6";
		case 103:	return "numpad 7";
		case 104:	return "numpad 8";
		case 105:	return "numpad 9";
		case 106:	return "numpad *";
		case 107:	return "numpad +";
		case 109:	return "numpad -";
		case 110:	return "numpad .";
		case 111:	return "numpad /";
		case 112:	return "F1";
		case 113:	return "F2";
		case 114:	return "F3";
		case 115:	return "F4";
		case 116:	return "F5";
		case 117:	return "F6";
		case 118:	return "F7";
		case 119:	return "F8";
		case 120:	return "F9";
		case 121:	return "F10";
		case 122:	return "F11";
		case 123:	return "F12";
		case 144:	return "numlock";
		case 145:	return "scroll lock";
		case 186:	return ";";
		case 187:	return "=";
		case 188:	return ",";
		case 189:	return "-";
		case 190:	return ".";
		case 191:	return "/";
		case 192:	return "'";
		case 219:	return "[";
		case 220:	return "\\";
		case 221:	return "]";
		case 222:	return "#";
		case 223:	return "`";
		default:	return String.fromCharCode(kc);
		}
	};
	Exps.prototype.StringFromKeyCode = function (ret, kc)
	{
		ret.set_string(fixedStringFromCharCode(kc));
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.Softgames = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Softgames.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
	};
	instanceProto.onDestroy = function ()
	{
	};
	instanceProto.saveToJSON = function ()
	{
		return {
		};
	};
	instanceProto.loadFromJSON = function (o)
	{
	};
	instanceProto.draw = function(ctx)
	{
	};
	instanceProto.drawGL = function (glw)
	{
	};
	function Cnds() {};
	Cnds.prototype.IsSuspended = function ()
	{
		return this.runtime.isSuspended;
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.ConnectAPI = function ()
	{
		var softgames = new Softgames();
		softgames.ready(function() {});
	}
	Acts.prototype.ShowBanner = function ()
	{
		if (window.softgames != undefined)
		{
			window.softgames.displayBanner(function() {cr_setSuspended(false)});
		}
	};
	Acts.prototype.HideBanner = function ()
	{
		softgames.hideAllBanners(function() {});
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	function getUrlVars() {
		var vars = {};
		var parts = window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function(m,key,value) {
			vars[key] = value;
			});
		return vars;
	}
	Exps.prototype.GetLAN = function (ret)	// 'ret' must always be the first parameter - always return the expression's result through it!
	{
		ret.set_string(window.SG_getLang())
	};
	pluginProto.exps = new Exps();
}());
;
;
var apiLoaded = false;
cr.plugins_.SpilApiPlugin = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.SpilApiPlugin.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
	};
	instanceProto.draw = function(ctx)
	{
	};
	instanceProto.drawGL = function (glw)
	{
	};
	function Cnds() {};
	Cnds.prototype.MyCondition = function (myparam)
	{
		return apiLoaded != false;
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.MyAction = function (myparam)
	{
		GameAPI.loadAPI(function(API) {
			apiLoaded = true;
			
			// Checks if splash screen is enabled and if it has an 'action' method
			var splashData = API.Branding.getSplashScreen();
			if((splashData.show && splashData.action) || GameAPI.IS_STANDALONE) {
					
				var splashScreen = document.getElementById('spilgames-splash-screen');

				if(GameAPI.IS_STANDALONE){
					splashData.action = function(){
						window.open('http://www.a10.com', '_blank');
					};
				}

				splashScreen.addEventListener('click', splashData.action);
				splashScreen.addEventListener('touchend', splashData.action);

				splashScreen.classList.remove('spilgames-splash-screen-gone');
				
				// Displays the splash screen for 2 seconds,
				window.setTimeout(function() {
					splashScreen.classList.add('spilgames-splash-screen-gone');
				}, 2000);
			}
		});
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.ImageURL = function (ret)	// 'ret' must always be the first parameter - always return the expression's result through it!
	{
		ret.set_string(GameAPI.IS_STANDALONE ? './logo_A10_202x50.png' : GameAPI.Branding.getLogo().image);		// for ef_return_string
	};


	Exps.prototype.LinkURL = function (ret)	// 'ret' must always be the first parameter - always return the expression's result through it!
	{
		if (
			GameAPI &&
			GameAPI.Branding &&
			GameAPI.Branding.getLogo &&
			GameAPI.Branding.getLogo().action
		) {
			logoClick = function () {
				if(GameAPI.IS_STANDALONE)
					window.open('http://www.a10.com/', '_blank')
				else	
					GameAPI.Branding.getLogo().action();
			};
			ret.set_string('javascript:logoClick()');
		} else {
			ret.set_string('http://www.a10.com/');
		}
	};
	Exps.prototype.ImageWidth = function (ret)	// 'ret' must always be the first parameter - always return the expression's result through it!
	{
		ret.set_int(1337);				// return our value
	};
	Exps.prototype.ImageHeight = function (ret)	// 'ret' must always be the first parameter - always return the expression's result through it!
	{
		ret.set_int(1337);				// return our value
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.Sprite = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Sprite.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	function frame_getDataUri()
	{
		if (this.datauri.length === 0)
		{
			var tmpcanvas = document.createElement("canvas");
			tmpcanvas.width = this.width;
			tmpcanvas.height = this.height;
			var tmpctx = tmpcanvas.getContext("2d");
			if (this.spritesheeted)
			{
				tmpctx.drawImage(this.texture_img, this.offx, this.offy, this.width, this.height,
										 0, 0, this.width, this.height);
			}
			else
			{
				tmpctx.drawImage(this.texture_img, 0, 0, this.width, this.height);
			}
			this.datauri = tmpcanvas.toDataURL("image/png");
		}
		return this.datauri;
	};
	typeProto.onCreate = function()
	{
		if (this.is_family)
			return;
		var i, leni, j, lenj;
		var anim, frame, animobj, frameobj, wt, uv;
		this.all_frames = [];
		this.has_loaded_textures = false;
		for (i = 0, leni = this.animations.length; i < leni; i++)
		{
			anim = this.animations[i];
			animobj = {};
			animobj.name = anim[0];
			animobj.speed = anim[1];
			animobj.loop = anim[2];
			animobj.repeatcount = anim[3];
			animobj.repeatto = anim[4];
			animobj.pingpong = anim[5];
			animobj.sid = anim[6];
			animobj.frames = [];
			for (j = 0, lenj = anim[7].length; j < lenj; j++)
			{
				frame = anim[7][j];
				frameobj = {};
				frameobj.texture_file = frame[0];
				frameobj.texture_filesize = frame[1];
				frameobj.offx = frame[2];
				frameobj.offy = frame[3];
				frameobj.width = frame[4];
				frameobj.height = frame[5];
				frameobj.duration = frame[6];
				frameobj.hotspotX = frame[7];
				frameobj.hotspotY = frame[8];
				frameobj.image_points = frame[9];
				frameobj.poly_pts = frame[10];
				frameobj.pixelformat = frame[11];
				frameobj.spritesheeted = (frameobj.width !== 0);
				frameobj.datauri = "";		// generated on demand and cached
				frameobj.getDataUri = frame_getDataUri;
				uv = {};
				uv.left = 0;
				uv.top = 0;
				uv.right = 1;
				uv.bottom = 1;
				frameobj.sheetTex = uv;
				frameobj.webGL_texture = null;
				wt = this.runtime.findWaitingTexture(frame[0]);
				if (wt)
				{
					frameobj.texture_img = wt;
				}
				else
				{
					frameobj.texture_img = new Image();
					frameobj.texture_img["idtkLoadDisposed"] = true;
					frameobj.texture_img.src = frame[0];
					frameobj.texture_img.cr_src = frame[0];
					frameobj.texture_img.cr_filesize = frame[1];
					frameobj.texture_img.c2webGL_texture = null;
					this.runtime.wait_for_textures.push(frameobj.texture_img);
				}
				cr.seal(frameobj);
				animobj.frames.push(frameobj);
				this.all_frames.push(frameobj);
			}
			cr.seal(animobj);
			this.animations[i] = animobj;		// swap array data for object
		}
	};
	typeProto.updateAllCurrentTexture = function ()
	{
		var i, len, inst;
		for (i = 0, len = this.instances.length; i < len; i++)
		{
			inst = this.instances[i];
			inst.curWebGLTexture = inst.curFrame.webGL_texture;
		}
	};
	typeProto.onLostWebGLContext = function ()
	{
		if (this.is_family)
			return;
		var i, len, frame;
		for (i = 0, len = this.all_frames.length; i < len; ++i)
		{
			frame = this.all_frames[i];
			frame.texture_img.c2webGL_texture = null;
			frame.webGL_texture = null;
		}
	};
	typeProto.onRestoreWebGLContext = function ()
	{
		if (this.is_family || !this.instances.length)
			return;
		var i, len, frame;
		for (i = 0, len = this.all_frames.length; i < len; ++i)
		{
			frame = this.all_frames[i];
			frame.webGL_texture = this.runtime.glwrap.loadTexture(frame.texture_img, false, this.runtime.linearSampling, frame.pixelformat);
		}
		this.updateAllCurrentTexture();
	};
	typeProto.loadTextures = function ()
	{
		if (this.is_family || this.has_loaded_textures || !this.runtime.glwrap)
			return;
		var i, len, frame;
		for (i = 0, len = this.all_frames.length; i < len; ++i)
		{
			frame = this.all_frames[i];
			frame.webGL_texture = this.runtime.glwrap.loadTexture(frame.texture_img, false, this.runtime.linearSampling, frame.pixelformat);
		}
		this.has_loaded_textures = true;
	};
	typeProto.unloadTextures = function ()
	{
		if (this.is_family || this.instances.length || !this.has_loaded_textures)
			return;
		var i, len, frame;
		for (i = 0, len = this.all_frames.length; i < len; ++i)
		{
			frame = this.all_frames[i];
			this.runtime.glwrap.deleteTexture(frame.webGL_texture);
		}
		this.has_loaded_textures = false;
	};
	var already_drawn_images = [];
	typeProto.preloadCanvas2D = function (ctx)
	{
		var i, len, frameimg;
		already_drawn_images.length = 0;
		for (i = 0, len = this.all_frames.length; i < len; ++i)
		{
			frameimg = this.all_frames[i].texture_img;
			if (already_drawn_images.indexOf(frameimg) !== -1)
					continue;
			ctx.drawImage(frameimg, 0, 0);
			already_drawn_images.push(frameimg);
		}
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
		var poly_pts = this.type.animations[0].frames[0].poly_pts;
		if (this.recycled)
			this.collision_poly.set_pts(poly_pts);
		else
			this.collision_poly = new cr.CollisionPoly(poly_pts);
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		this.visible = (this.properties[0] === 0);	// 0=visible, 1=invisible
		this.isTicking = false;
		this.inAnimTrigger = false;
		this.collisionsEnabled = (this.properties[3] !== 0);
		if (!(this.type.animations.length === 1 && this.type.animations[0].frames.length === 1) && this.type.animations[0].speed !== 0)
		{
			this.runtime.tickMe(this);
			this.isTicking = true;
		}
		this.cur_animation = this.getAnimationByName(this.properties[1]) || this.type.animations[0];
		this.cur_frame = this.properties[2];
		if (this.cur_frame < 0)
			this.cur_frame = 0;
		if (this.cur_frame >= this.cur_animation.frames.length)
			this.cur_frame = this.cur_animation.frames.length - 1;
		var curanimframe = this.cur_animation.frames[this.cur_frame];
		this.collision_poly.set_pts(curanimframe.poly_pts);
		this.hotspotX = curanimframe.hotspotX;
		this.hotspotY = curanimframe.hotspotY;
		this.cur_anim_speed = this.cur_animation.speed;
		if (this.recycled)
			this.animTimer.reset();
		else
			this.animTimer = new cr.KahanAdder();
		this.frameStart = this.getNowTime();
		this.animPlaying = true;
		this.animRepeats = 0;
		this.animForwards = true;
		this.animTriggerName = "";
		this.changeAnimName = "";
		this.changeAnimFrom = 0;
		this.changeAnimFrame = -1;
		this.type.loadTextures();
		var i, leni, j, lenj;
		var anim, frame, uv, maintex;
		for (i = 0, leni = this.type.animations.length; i < leni; i++)
		{
			anim = this.type.animations[i];
			for (j = 0, lenj = anim.frames.length; j < lenj; j++)
			{
				frame = anim.frames[j];
				if (frame.width === 0)
				{
					frame.width = frame.texture_img.width;
					frame.height = frame.texture_img.height;
				}
				if (frame.spritesheeted)
				{
					maintex = frame.texture_img;
					uv = frame.sheetTex;
					uv.left = frame.offx / maintex.width;
					uv.top = frame.offy / maintex.height;
					uv.right = (frame.offx + frame.width) / maintex.width;
					uv.bottom = (frame.offy + frame.height) / maintex.height;
					if (frame.offx === 0 && frame.offy === 0 && frame.width === maintex.width && frame.height === maintex.height)
					{
						frame.spritesheeted = false;
					}
				}
			}
		}
		this.curFrame = this.cur_animation.frames[this.cur_frame];
		this.curWebGLTexture = this.curFrame.webGL_texture;
	};
	instanceProto.saveToJSON = function ()
	{
		var o = {
			"a": this.cur_animation.sid,
			"f": this.cur_frame,
			"cas": this.cur_anim_speed,
			"fs": this.frameStart,
			"ar": this.animRepeats,
			"at": this.animTimer.sum
		};
		if (!this.animPlaying)
			o["ap"] = this.animPlaying;
		if (!this.animForwards)
			o["af"] = this.animForwards;
		return o;
	};
	instanceProto.loadFromJSON = function (o)
	{
		var anim = this.getAnimationBySid(o["a"]);
		if (anim)
			this.cur_animation = anim;
		this.cur_frame = o["f"];
		if (this.cur_frame < 0)
			this.cur_frame = 0;
		if (this.cur_frame >= this.cur_animation.frames.length)
			this.cur_frame = this.cur_animation.frames.length - 1;
		this.cur_anim_speed = o["cas"];
		this.frameStart = o["fs"];
		this.animRepeats = o["ar"];
		this.animTimer.reset();
		this.animTimer.sum = o["at"];
		this.animPlaying = o.hasOwnProperty("ap") ? o["ap"] : true;
		this.animForwards = o.hasOwnProperty("af") ? o["af"] : true;
		this.curFrame = this.cur_animation.frames[this.cur_frame];
		this.curWebGLTexture = this.curFrame.webGL_texture;
		this.collision_poly.set_pts(this.curFrame.poly_pts);
		this.hotspotX = this.curFrame.hotspotX;
		this.hotspotY = this.curFrame.hotspotY;
	};
	instanceProto.animationFinish = function (reverse)
	{
		this.cur_frame = reverse ? 0 : this.cur_animation.frames.length - 1;
		this.animPlaying = false;
		this.animTriggerName = this.cur_animation.name;
		this.inAnimTrigger = true;
		this.runtime.trigger(cr.plugins_.Sprite.prototype.cnds.OnAnyAnimFinished, this);
		this.runtime.trigger(cr.plugins_.Sprite.prototype.cnds.OnAnimFinished, this);
		this.inAnimTrigger = false;
		this.animRepeats = 0;
	};
	instanceProto.getNowTime = function()
	{
		return this.animTimer.sum;
	};
	instanceProto.tick = function()
	{
		this.animTimer.add(this.runtime.getDt(this));
		if (this.changeAnimName.length)
			this.doChangeAnim();
		if (this.changeAnimFrame >= 0)
			this.doChangeAnimFrame();
		var now = this.getNowTime();
		var cur_animation = this.cur_animation;
		var prev_frame = cur_animation.frames[this.cur_frame];
		var next_frame;
		var cur_frame_time = prev_frame.duration / this.cur_anim_speed;
		if (this.animPlaying && now >= this.frameStart + cur_frame_time)
		{
			if (this.animForwards)
			{
				this.cur_frame++;
			}
			else
			{
				this.cur_frame--;
			}
			this.frameStart += cur_frame_time;
			if (this.cur_frame >= cur_animation.frames.length)
			{
				if (cur_animation.pingpong)
				{
					this.animForwards = false;
					this.cur_frame = cur_animation.frames.length - 2;
				}
				else if (cur_animation.loop)
				{
					this.cur_frame = cur_animation.repeatto;
				}
				else
				{
					this.animRepeats++;
					if (this.animRepeats >= cur_animation.repeatcount)
					{
						this.animationFinish(false);
					}
					else
					{
						this.cur_frame = cur_animation.repeatto;
					}
				}
			}
			if (this.cur_frame < 0)
			{
				if (cur_animation.pingpong)
				{
					this.cur_frame = 1;
					this.animForwards = true;
					if (!cur_animation.loop)
					{
						this.animRepeats++;
						if (this.animRepeats >= cur_animation.repeatcount)
						{
							this.animationFinish(true);
						}
					}
				}
				else
				{
					if (cur_animation.loop)
					{
						this.cur_frame = cur_animation.repeatto;
					}
					else
					{
						this.animRepeats++;
						if (this.animRepeats >= cur_animation.repeatcount)
						{
							this.animationFinish(true);
						}
						else
						{
							this.cur_frame = cur_animation.repeatto;
						}
					}
				}
			}
			if (this.cur_frame < 0)
				this.cur_frame = 0;
			else if (this.cur_frame >= cur_animation.frames.length)
				this.cur_frame = cur_animation.frames.length - 1;
			if (now > this.frameStart + (cur_animation.frames[this.cur_frame].duration / this.cur_anim_speed))
			{
				this.frameStart = now;
			}
			next_frame = cur_animation.frames[this.cur_frame];
			this.OnFrameChanged(prev_frame, next_frame);
			this.runtime.redraw = true;
		}
	};
	instanceProto.getAnimationByName = function (name_)
	{
		var i, len, a;
		for (i = 0, len = this.type.animations.length; i < len; i++)
		{
			a = this.type.animations[i];
			if (cr.equals_nocase(a.name, name_))
				return a;
		}
		return null;
	};
	instanceProto.getAnimationBySid = function (sid_)
	{
		var i, len, a;
		for (i = 0, len = this.type.animations.length; i < len; i++)
		{
			a = this.type.animations[i];
			if (a.sid === sid_)
				return a;
		}
		return null;
	};
	instanceProto.doChangeAnim = function ()
	{
		var prev_frame = this.cur_animation.frames[this.cur_frame];
		var anim = this.getAnimationByName(this.changeAnimName);
		this.changeAnimName = "";
		if (!anim)
			return;
		if (cr.equals_nocase(anim.name, this.cur_animation.name) && this.animPlaying)
			return;
		this.cur_animation = anim;
		this.cur_anim_speed = anim.speed;
		if (this.cur_frame < 0)
			this.cur_frame = 0;
		if (this.cur_frame >= this.cur_animation.frames.length)
			this.cur_frame = this.cur_animation.frames.length - 1;
		if (this.changeAnimFrom === 1)
			this.cur_frame = 0;
		this.animPlaying = true;
		this.frameStart = this.getNowTime();
		this.animForwards = true;
		this.OnFrameChanged(prev_frame, this.cur_animation.frames[this.cur_frame]);
		this.runtime.redraw = true;
	};
	instanceProto.doChangeAnimFrame = function ()
	{
		var prev_frame = this.cur_animation.frames[this.cur_frame];
		var prev_frame_number = this.cur_frame;
		this.cur_frame = cr.floor(this.changeAnimFrame);
		if (this.cur_frame < 0)
			this.cur_frame = 0;
		if (this.cur_frame >= this.cur_animation.frames.length)
			this.cur_frame = this.cur_animation.frames.length - 1;
		if (prev_frame_number !== this.cur_frame)
		{
			this.OnFrameChanged(prev_frame, this.cur_animation.frames[this.cur_frame]);
			this.frameStart = this.getNowTime();
			this.runtime.redraw = true;
		}
		this.changeAnimFrame = -1;
	};
	instanceProto.OnFrameChanged = function (prev_frame, next_frame)
	{
		var oldw = prev_frame.width;
		var oldh = prev_frame.height;
		var neww = next_frame.width;
		var newh = next_frame.height;
		if (oldw != neww)
			this.width *= (neww / oldw);
		if (oldh != newh)
			this.height *= (newh / oldh);
		this.hotspotX = next_frame.hotspotX;
		this.hotspotY = next_frame.hotspotY;
		this.collision_poly.set_pts(next_frame.poly_pts);
		this.set_bbox_changed();
		this.curFrame = next_frame;
		this.curWebGLTexture = next_frame.webGL_texture;
		var i, len, b;
		for (i = 0, len = this.behavior_insts.length; i < len; i++)
		{
			b = this.behavior_insts[i];
			if (b.onSpriteFrameChanged)
				b.onSpriteFrameChanged(prev_frame, next_frame);
		}
		this.runtime.trigger(cr.plugins_.Sprite.prototype.cnds.OnFrameChanged, this);
	};
	instanceProto.draw = function(ctx)
	{
		ctx.globalAlpha = this.opacity;
		var cur_frame = this.curFrame;
		var spritesheeted = cur_frame.spritesheeted;
		var cur_image = cur_frame.texture_img;
		var myx = this.x;
		var myy = this.y;
		var w = this.width;
		var h = this.height;
		if (this.angle === 0 && w >= 0 && h >= 0)
		{
			myx -= this.hotspotX * w;
			myy -= this.hotspotY * h;
			if (this.runtime.pixel_rounding)
			{
				myx = (myx + 0.5) | 0;
				myy = (myy + 0.5) | 0;
			}
			if (spritesheeted)
			{
				ctx.drawImage(cur_image, cur_frame.offx, cur_frame.offy, cur_frame.width, cur_frame.height,
										 myx, myy, w, h);
			}
			else
			{
				ctx.drawImage(cur_image, myx, myy, w, h);
			}
		}
		else
		{
			if (this.runtime.pixel_rounding)
			{
				myx = (myx + 0.5) | 0;
				myy = (myy + 0.5) | 0;
			}
			ctx.save();
			var widthfactor = w > 0 ? 1 : -1;
			var heightfactor = h > 0 ? 1 : -1;
			ctx.translate(myx, myy);
			if (widthfactor !== 1 || heightfactor !== 1)
				ctx.scale(widthfactor, heightfactor);
			ctx.rotate(this.angle * widthfactor * heightfactor);
			var drawx = 0 - (this.hotspotX * cr.abs(w))
			var drawy = 0 - (this.hotspotY * cr.abs(h));
			if (spritesheeted)
			{
				ctx.drawImage(cur_image, cur_frame.offx, cur_frame.offy, cur_frame.width, cur_frame.height,
										 drawx, drawy, cr.abs(w), cr.abs(h));
			}
			else
			{
				ctx.drawImage(cur_image, drawx, drawy, cr.abs(w), cr.abs(h));
			}
			ctx.restore();
		}
		/*
		ctx.strokeStyle = "#f00";
		ctx.lineWidth = 3;
		ctx.beginPath();
		this.collision_poly.cache_poly(this.width, this.height, this.angle);
		var i, len, ax, ay, bx, by;
		for (i = 0, len = this.collision_poly.pts_count; i < len; i++)
		{
			ax = this.collision_poly.pts_cache[i*2] + this.x;
			ay = this.collision_poly.pts_cache[i*2+1] + this.y;
			bx = this.collision_poly.pts_cache[((i+1)%len)*2] + this.x;
			by = this.collision_poly.pts_cache[((i+1)%len)*2+1] + this.y;
			ctx.moveTo(ax, ay);
			ctx.lineTo(bx, by);
		}
		ctx.stroke();
		ctx.closePath();
		*/
		/*
		if (this.behavior_insts.length >= 1 && this.behavior_insts[0].draw)
		{
			this.behavior_insts[0].draw(ctx);
		}
		*/
	};
	instanceProto.drawGL = function(glw)
	{
		glw.setTexture(this.curWebGLTexture);
		glw.setOpacity(this.opacity);
		var cur_frame = this.curFrame;
		var q = this.bquad;
		if (this.runtime.pixel_rounding)
		{
			var ox = ((this.x + 0.5) | 0) - this.x;
			var oy = ((this.y + 0.5) | 0) - this.y;
			if (cur_frame.spritesheeted)
				glw.quadTex(q.tlx + ox, q.tly + oy, q.trx + ox, q.try_ + oy, q.brx + ox, q.bry + oy, q.blx + ox, q.bly + oy, cur_frame.sheetTex);
			else
				glw.quad(q.tlx + ox, q.tly + oy, q.trx + ox, q.try_ + oy, q.brx + ox, q.bry + oy, q.blx + ox, q.bly + oy);
		}
		else
		{
			if (cur_frame.spritesheeted)
				glw.quadTex(q.tlx, q.tly, q.trx, q.try_, q.brx, q.bry, q.blx, q.bly, cur_frame.sheetTex);
			else
				glw.quad(q.tlx, q.tly, q.trx, q.try_, q.brx, q.bry, q.blx, q.bly);
		}
	};
	instanceProto.getImagePointIndexByName = function(name_)
	{
		var cur_frame = this.curFrame;
		var i, len;
		for (i = 0, len = cur_frame.image_points.length; i < len; i++)
		{
			if (cr.equals_nocase(name_, cur_frame.image_points[i][0]))
				return i;
		}
		return -1;
	};
	instanceProto.getImagePoint = function(imgpt, getX)
	{
		var cur_frame = this.curFrame;
		var image_points = cur_frame.image_points;
		var index;
		if (cr.is_string(imgpt))
			index = this.getImagePointIndexByName(imgpt);
		else
			index = imgpt - 1;	// 0 is origin
		index = cr.floor(index);
		if (index < 0 || index >= image_points.length)
			return getX ? this.x : this.y;	// return origin
		var x = (image_points[index][1] - cur_frame.hotspotX) * this.width;
		var y = image_points[index][2];
		y = (y - cur_frame.hotspotY) * this.height;
		var cosa = Math.cos(this.angle);
		var sina = Math.sin(this.angle);
		var x_temp = (x * cosa) - (y * sina);
		y = (y * cosa) + (x * sina);
		x = x_temp;
		x += this.x;
		y += this.y;
		return getX ? x : y;
	};
	function Cnds() {};
	var arrCache = [];
	function allocArr()
	{
		if (arrCache.length)
			return arrCache.pop();
		else
			return [0, 0];
	};
	function freeArr(a)
	{
		a[0] = 0;
		a[1] = 0;
		arrCache.push(a);
	};
	function collmemory_add(collmemory, a, b)
	{
		var arr = allocArr();
		arr[0] = a.uid;
		arr[1] = b.uid;
		collmemory.push(arr);
	};
	function collmemory_remove(collmemory, a, b)
	{
;
		var a_uid = a.uid;
		var b_uid = b.uid;
		var i, j = 0, len, entry;
		for (i = 0, len = collmemory.length; i < len; i++)
		{
			entry = collmemory[i];
			if (!((entry[0] === a_uid && entry[1] === b_uid) || (entry[0] === b_uid && entry[1] === a_uid)))
			{
				collmemory[j][0] = collmemory[i][0];
				collmemory[j][1] = collmemory[i][1];
				j++;
			}
		}
		for (i = j; i < len; i++)
			freeArr(collmemory[i]);
		collmemory.length = j;
	};
	function collmemory_removeInstance(collmemory, inst)
	{
;
		var i, j = 0, len, entry, uid = inst.uid;
		for (i = 0, len = collmemory.length; i < len; i++)
		{
			entry = collmemory[i];
			if (entry[0] !== uid && entry[1] !== uid)
			{
				collmemory[j][0] = collmemory[i][0];
				collmemory[j][1] = collmemory[i][1];
				j++;
			}
		}
		for (i = j; i < len; i++)
			freeArr(collmemory[i]);
		collmemory.length = j;
	};
	function collmemory_has(collmemory, a, b)
	{
		var a_uid = a.uid;
		var b_uid = b.uid;
		var i, len, entry;
		for (i = 0, len = collmemory.length; i < len; i++)
		{
			entry = collmemory[i];
			if ((entry[0] === a_uid && entry[1] === b_uid) || (entry[0] === b_uid && entry[1] === a_uid))
				return true;
		}
		return false;
	};
	Cnds.prototype.OnCollision = function (rtype)
	{
		if (!rtype)
			return false;
		var runtime = this.runtime;
		var cnd = runtime.getCurrentCondition();
		var ltype = cnd.type;
		if (!cnd.extra.collmemory)
		{
			cnd.extra.collmemory = [];
			runtime.addDestroyCallback((function (collmemory) {
				return function(inst) {
					collmemory_removeInstance(collmemory, inst);
				};
			})(cnd.extra.collmemory));
		}
		var lsol = ltype.getCurrentSol();
		var rsol = rtype.getCurrentSol();
		var linstances = lsol.getObjects();
		var rinstances = rsol.getObjects();
		var l, linst, r, rinst;
		var curlsol, currsol;
		var current_event = runtime.getCurrentEventStack().current_event;
		var orblock = current_event.orblock;
		for (l = 0; l < linstances.length; l++)
		{
			linst = linstances[l];
			for (r = 0; r < rinstances.length; r++)
			{
				rinst = rinstances[r];
				if (runtime.testOverlap(linst, rinst) || runtime.checkRegisteredCollision(linst, rinst))
				{
					if (!collmemory_has(cnd.extra.collmemory, linst, rinst))
					{
						collmemory_add(cnd.extra.collmemory, linst, rinst);
						runtime.pushCopySol(current_event.solModifiers);
						curlsol = ltype.getCurrentSol();
						currsol = rtype.getCurrentSol();
						curlsol.select_all = false;
						currsol.select_all = false;
						if (ltype === rtype)
						{
							curlsol.instances.length = 2;	// just use lsol, is same reference as rsol
							curlsol.instances[0] = linst;
							curlsol.instances[1] = rinst;
							ltype.applySolToContainer();
						}
						else
						{
							curlsol.instances.length = 1;
							currsol.instances.length = 1;
							curlsol.instances[0] = linst;
							currsol.instances[0] = rinst;
							ltype.applySolToContainer();
							rtype.applySolToContainer();
						}
						current_event.retrigger();
						runtime.popSol(current_event.solModifiers);
					}
				}
				else
				{
					collmemory_remove(cnd.extra.collmemory, linst, rinst);
				}
			}
		}
		return false;
	};
	var rpicktype = null;
	var rtopick = new cr.ObjectSet();
	var needscollisionfinish = false;
	function DoOverlapCondition(rtype, offx, offy)
	{
		if (!rtype)
			return false;
		var do_offset = (offx !== 0 || offy !== 0);
		var oldx, oldy, ret = false, r, lenr, rinst;
		var cnd = this.runtime.getCurrentCondition();
		var ltype = cnd.type;
		var inverted = cnd.inverted;
		var rsol = rtype.getCurrentSol();
		var orblock = this.runtime.getCurrentEventStack().current_event.orblock;
		var rinstances;
		if (rsol.select_all)
			rinstances = rsol.type.instances;
		else if (orblock)
			rinstances = rsol.else_instances;
		else
			rinstances = rsol.instances;
		rpicktype = rtype;
		needscollisionfinish = (ltype !== rtype && !inverted);
		if (do_offset)
		{
			oldx = this.x;
			oldy = this.y;
			this.x += offx;
			this.y += offy;
			this.set_bbox_changed();
		}
		for (r = 0, lenr = rinstances.length; r < lenr; r++)
		{
			rinst = rinstances[r];
			if (this.runtime.testOverlap(this, rinst))
			{
				ret = true;
				if (inverted)
					break;
				if (ltype !== rtype)
					rtopick.add(rinst);
			}
		}
		if (do_offset)
		{
			this.x = oldx;
			this.y = oldy;
			this.set_bbox_changed();
		}
		return ret;
	};
	typeProto.finish = function (do_pick)
	{
		if (!needscollisionfinish)
			return;
		if (do_pick)
		{
			var orblock = this.runtime.getCurrentEventStack().current_event.orblock;
			var sol = rpicktype.getCurrentSol();
			var topick = rtopick.valuesRef();
			var i, len, inst;
			if (sol.select_all)
			{
				sol.select_all = false;
				sol.instances.length = topick.length;
				for (i = 0, len = topick.length; i < len; i++)
				{
					sol.instances[i] = topick[i];
				}
				if (orblock)
				{
					sol.else_instances.length = 0;
					for (i = 0, len = rpicktype.instances.length; i < len; i++)
					{
						inst = rpicktype.instances[i];
						if (!rtopick.contains(inst))
							sol.else_instances.push(inst);
					}
				}
			}
			else
			{
				var initsize = sol.instances.length;
				sol.instances.length = initsize + topick.length;
				for (i = 0, len = topick.length; i < len; i++)
				{
					sol.instances[initsize + i] = topick[i];
					if (orblock)
						cr.arrayFindRemove(sol.else_instances, topick[i]);
				}
			}
			rpicktype.applySolToContainer();
		}
		rtopick.clear();
		needscollisionfinish = false;
	};
	Cnds.prototype.IsOverlapping = function (rtype)
	{
		return DoOverlapCondition.call(this, rtype, 0, 0);
	};
	Cnds.prototype.IsOverlappingOffset = function (rtype, offx, offy)
	{
		return DoOverlapCondition.call(this, rtype, offx, offy);
	};
	Cnds.prototype.IsAnimPlaying = function (animname)
	{
		if (this.changeAnimName.length)
			return cr.equals_nocase(this.changeAnimName, animname);
		else
			return cr.equals_nocase(this.cur_animation.name, animname);
	};
	Cnds.prototype.CompareFrame = function (cmp, framenum)
	{
		return cr.do_cmp(this.cur_frame, cmp, framenum);
	};
	Cnds.prototype.OnAnimFinished = function (animname)
	{
		return cr.equals_nocase(this.animTriggerName, animname);
	};
	Cnds.prototype.OnAnyAnimFinished = function ()
	{
		return true;
	};
	Cnds.prototype.OnFrameChanged = function ()
	{
		return true;
	};
	Cnds.prototype.IsMirrored = function ()
	{
		return this.width < 0;
	};
	Cnds.prototype.IsFlipped = function ()
	{
		return this.height < 0;
	};
	Cnds.prototype.OnURLLoaded = function ()
	{
		return true;
	};
	Cnds.prototype.IsCollisionEnabled = function ()
	{
		return this.collisionsEnabled;
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.Spawn = function (obj, layer, imgpt)
	{
		if (!obj || !layer)
			return;
		var inst = this.runtime.createInstance(obj, layer, this.getImagePoint(imgpt, true), this.getImagePoint(imgpt, false));
		if (!inst)
			return;
		if (typeof inst.angle !== "undefined")
		{
			inst.angle = this.angle;
			inst.set_bbox_changed();
		}
		this.runtime.isInOnDestroy++;
		var i, len, s;
		this.runtime.trigger(Object.getPrototypeOf(obj.plugin).cnds.OnCreated, inst);
		if (inst.is_contained)
		{
			for (i = 0, len = inst.siblings.length; i < len; i++)
			{
				s = inst.siblings[i];
				this.runtime.trigger(Object.getPrototypeOf(s.type.plugin).cnds.OnCreated, s);
			}
		}
		this.runtime.isInOnDestroy--;
		var cur_act = this.runtime.getCurrentAction();
		var reset_sol = false;
		if (cr.is_undefined(cur_act.extra.Spawn_LastExec) || cur_act.extra.Spawn_LastExec < this.runtime.execcount)
		{
			reset_sol = true;
			cur_act.extra.Spawn_LastExec = this.runtime.execcount;
		}
		var sol;
		if (obj != this.type)
		{
			sol = obj.getCurrentSol();
			sol.select_all = false;
			if (reset_sol)
			{
				sol.instances.length = 1;
				sol.instances[0] = inst;
			}
			else
				sol.instances.push(inst);
			if (inst.is_contained)
			{
				for (i = 0, len = inst.siblings.length; i < len; i++)
				{
					s = inst.siblings[i];
					sol = s.type.getCurrentSol();
					sol.select_all = false;
					if (reset_sol)
					{
						sol.instances.length = 1;
						sol.instances[0] = s;
					}
					else
						sol.instances.push(s);
				}
			}
		}
	};
	Acts.prototype.SetEffect = function (effect)
	{
		this.compositeOp = cr.effectToCompositeOp(effect);
		cr.setGLBlend(this, effect, this.runtime.gl);
		this.runtime.redraw = true;
	};
	Acts.prototype.StopAnim = function ()
	{
		this.animPlaying = false;
	};
	Acts.prototype.StartAnim = function (from)
	{
		this.animPlaying = true;
		this.frameStart = this.getNowTime();
		if (from === 1 && this.cur_frame !== 0)
		{
			this.changeAnimFrame = 0;
			if (!this.inAnimTrigger)
				this.doChangeAnimFrame();
		}
		if (!this.isTicking)
		{
			this.runtime.tickMe(this);
			this.isTicking = true;
		}
	};
	Acts.prototype.SetAnim = function (animname, from)
	{
		this.changeAnimName = animname;
		this.changeAnimFrom = from;
		if (!this.isTicking)
		{
			this.runtime.tickMe(this);
			this.isTicking = true;
		}
		if (!this.inAnimTrigger)
			this.doChangeAnim();
	};
	Acts.prototype.SetAnimFrame = function (framenumber)
	{
		this.changeAnimFrame = framenumber;
		if (!this.isTicking)
		{
			this.runtime.tickMe(this);
			this.isTicking = true;
		}
		if (!this.inAnimTrigger)
			this.doChangeAnimFrame();
	};
	Acts.prototype.SetAnimSpeed = function (s)
	{
		this.cur_anim_speed = cr.abs(s);
		this.animForwards = (s >= 0);
		if (!this.isTicking)
		{
			this.runtime.tickMe(this);
			this.isTicking = true;
		}
	};
	Acts.prototype.SetMirrored = function (m)
	{
		var neww = cr.abs(this.width) * (m === 0 ? -1 : 1);
		if (this.width === neww)
			return;
		this.width = neww;
		this.set_bbox_changed();
	};
	Acts.prototype.SetFlipped = function (f)
	{
		var newh = cr.abs(this.height) * (f === 0 ? -1 : 1);
		if (this.height === newh)
			return;
		this.height = newh;
		this.set_bbox_changed();
	};
	Acts.prototype.SetScale = function (s)
	{
		var cur_frame = this.curFrame;
		var mirror_factor = (this.width < 0 ? -1 : 1);
		var flip_factor = (this.height < 0 ? -1 : 1);
		var new_width = cur_frame.width * s * mirror_factor;
		var new_height = cur_frame.height * s * flip_factor;
		if (this.width !== new_width || this.height !== new_height)
		{
			this.width = new_width;
			this.height = new_height;
			this.set_bbox_changed();
		}
	};
	Acts.prototype.LoadURL = function (url_, resize_)
	{
		var img = new Image();
		var self = this;
		var curFrame_ = this.curFrame;
		img.onload = function ()
		{
			if (curFrame_.texture_img.src === img.src)
			{
				if (self.runtime.glwrap && self.curFrame === curFrame_)
					self.curWebGLTexture = curFrame_.webGL_texture;
				self.runtime.redraw = true;
				self.runtime.trigger(cr.plugins_.Sprite.prototype.cnds.OnURLLoaded, self);
				return;
			}
			curFrame_.texture_img = img;
			curFrame_.offx = 0;
			curFrame_.offy = 0;
			curFrame_.width = img.width;
			curFrame_.height = img.height;
			curFrame_.spritesheeted = false;
			curFrame_.datauri = "";
			if (self.runtime.glwrap)
			{
				if (curFrame_.webGL_texture)
					self.runtime.glwrap.deleteTexture(curFrame_.webGL_texture);
				curFrame_.webGL_texture = self.runtime.glwrap.loadTexture(img, false, self.runtime.linearSampling);
				if (self.curFrame === curFrame_)
					self.curWebGLTexture = curFrame_.webGL_texture;
				self.type.updateAllCurrentTexture();
			}
			if (resize_ === 0)		// resize to image size
			{
				self.width = img.width;
				self.height = img.height;
				self.set_bbox_changed();
			}
			self.runtime.redraw = true;
			self.runtime.trigger(cr.plugins_.Sprite.prototype.cnds.OnURLLoaded, self);
		};
		if (url_.substr(0, 5) !== "data:")
			img.crossOrigin = 'anonymous';
		img.src = url_;
	};
	Acts.prototype.SetCollisions = function (set_)
	{
		this.collisionsEnabled = (set_ !== 0);
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.AnimationFrame = function (ret)
	{
		ret.set_int(this.cur_frame);
	};
	Exps.prototype.AnimationFrameCount = function (ret)
	{
		ret.set_int(this.cur_animation.frames.length);
	};
	Exps.prototype.AnimationName = function (ret)
	{
		ret.set_string(this.cur_animation.name);
	};
	Exps.prototype.AnimationSpeed = function (ret)
	{
		ret.set_float(this.cur_anim_speed);
	};
	Exps.prototype.ImagePointX = function (ret, imgpt)
	{
		ret.set_float(this.getImagePoint(imgpt, true));
	};
	Exps.prototype.ImagePointY = function (ret, imgpt)
	{
		ret.set_float(this.getImagePoint(imgpt, false));
	};
	Exps.prototype.ImagePointCount = function (ret)
	{
		ret.set_int(this.curFrame.image_points.length);
	};
	Exps.prototype.ImageWidth = function (ret)
	{
		ret.set_float(this.curFrame.width);
	};
	Exps.prototype.ImageHeight = function (ret)
	{
		ret.set_float(this.curFrame.height);
	};
	pluginProto.exps = new Exps();
}());
/* global cr,log,assert2 */
/* jshint globalstrict: true */
/* jshint strict: true */
;
;
cr.plugins_.Spritefont2 = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Spritefont2.prototype;
	pluginProto.onCreate = function ()
	{
	};
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
		if (this.is_family)
			return;
		this.texture_img = new Image();
		this.texture_img["idtkLoadDisposed"] = true;
		this.texture_img.src = this.texture_file;
		this.runtime.wait_for_textures.push(this.texture_img);
		this.webGL_texture = null;
	};
	typeProto.onLostWebGLContext = function ()
	{
		if (this.is_family)
			return;
		this.webGL_texture = null;
	};
	typeProto.onRestoreWebGLContext = function ()
	{
		if (this.is_family || !this.instances.length)
			return;
		if (!this.webGL_texture)
		{
			this.webGL_texture = this.runtime.glwrap.loadTexture(this.texture_img, false, this.runtime.linearSampling, this.texture_pixelformat);
		}
		var i, len;
		for (i = 0, len = this.instances.length; i < len; i++)
			this.instances[i].webGL_texture = this.webGL_texture;
	};
	typeProto.unloadTextures = function ()
	{
		if (this.is_family || this.instances.length || !this.webGL_texture)
			return;
		this.runtime.glwrap.deleteTexture(this.webGL_texture);
		this.webGL_texture = null;
	};
	typeProto.preloadCanvas2D = function (ctx)
	{
		ctx.drawImage(this.texture_img, 0, 0);
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onDestroy = function()
	{
		freeAllLines (this.lines);
		freeAllClip  (this.clipList);
		freeAllClipUV(this.clipUV);
		cr.wipe(this.characterWidthList);
	};
	instanceProto.onCreate = function()
	{
		this.texture_img      = this.type.texture_img;
		this.characterWidth   = this.properties[0];
		this.characterHeight  = this.properties[1];
		this.characterSet     = this.properties[2];
		this.text             = this.properties[3];
		this.characterScale   = this.properties[4];
		this.visible          = (this.properties[5] === 0);	// 0=visible, 1=invisible
		this.halign           = this.properties[6]/2.0;			// 0=left, 1=center, 2=right
		this.valign           = this.properties[7]/2.0;			// 0=top, 1=center, 2=bottom
		this.wrapbyword       = (this.properties[9] === 0);	// 0=word, 1=character
		this.characterSpacing = this.properties[10];
		this.lineHeight       = this.properties[11];
		this.textWidth  = 0;
		this.textHeight = 0;
		if (this.recycled)
		{
			this.lines.length = 0;
			cr.wipe(this.clipList);
			cr.wipe(this.clipUV);
			cr.wipe(this.characterWidthList);
		}
		else
		{
			this.lines = [];
			this.clipList = {};
			this.clipUV = {};
			this.characterWidthList = {};
		}
		this.text_changed = true;
		this.lastwrapwidth = this.width;
		if (this.runtime.glwrap)
		{
			if (!this.type.webGL_texture)
			{
				this.type.webGL_texture = this.runtime.glwrap.loadTexture(this.type.texture_img, false, this.runtime.linearSampling, this.type.texture_pixelformat);
			}
			this.webGL_texture = this.type.webGL_texture;
		}
		this.SplitSheet();
	};
	instanceProto.saveToJSON = function ()
	{
		var save = {
			"t": this.text,
			"csc": this.characterScale,
			"csp": this.characterSpacing,
			"lh": this.lineHeight,
			"tw": this.textWidth,
			"th": this.textHeight,
			"lrt": this.last_render_tick,
			"cw": {}
		};
		for (var ch in this.characterWidthList)
			save["cw"][ch] = this.characterWidthList[ch];
		return save;
	};
	instanceProto.loadFromJSON = function (o)
	{
		this.text = o["t"];
		this.characterScale = o["csc"];
		this.characterSpacing = o["csp"];
		this.lineHeight = o["lh"];
		this.textWidth = o["tw"];
		this.textHeight = o["th"];
		this.last_render_tick = o["lrt"];
		for(var ch in o["cw"])
			this.characterWidthList[ch] = o["cw"][ch];
		this.text_changed = true;
		this.lastwrapwidth = this.width;
	};
	function trimRight(text)
	{
		return text.replace(/\s\s*$/, '');
	}
	var MAX_CACHE_SIZE = 1000;
	function alloc(cache,Constructor)
	{
		if (cache.length)
			return cache.pop();
		else
			return new Constructor();
	}
	function free(cache,data)
	{
		if (cache.length < MAX_CACHE_SIZE)
		{
			cache.push(data);
		}
	}
	function freeAll(cache,dataList,isArray)
	{
		if (isArray) {
			var i, len;
			for (i = 0, len = dataList.length; i < len; i++)
			{
				free(cache,dataList[i]);
			}
			dataList.length = 0;
		} else {
			var prop;
			for(prop in dataList) {
				if(Object.prototype.hasOwnProperty.call(dataList,prop)) {
					free(cache,dataList[prop]);
					delete dataList[prop];
				}
			}
		}
	}
	function addLine(inst,lineIndex,cur_line) {
		var lines = inst.lines;
		var line;
		cur_line = trimRight(cur_line);
		if (lineIndex >= lines.length)
			lines.push(allocLine());
		line = lines[lineIndex];
		line.text = cur_line;
		line.width = inst.measureWidth(cur_line);
		inst.textWidth = cr.max(inst.textWidth,line.width);
	}
	var linesCache = [];
	function allocLine()       { return alloc(linesCache,Object); }
	function freeLine(l)       { free(linesCache,l); }
	function freeAllLines(arr) { freeAll(linesCache,arr,true); }
	function addClip(obj,property,x,y,w,h) {
		if (obj[property] === undefined) {
			obj[property] = alloc(clipCache,Object);
		}
		obj[property].x = x;
		obj[property].y = y;
		obj[property].w = w;
		obj[property].h = h;
	}
	var clipCache = [];
	function allocClip()      { return alloc(clipCache,Object); }
	function freeAllClip(obj) { freeAll(clipCache,obj,false);}
	function addClipUV(obj,property,left,top,right,bottom) {
		if (obj[property] === undefined) {
			obj[property] = alloc(clipUVCache,cr.rect);
		}
		obj[property].left   = left;
		obj[property].top    = top;
		obj[property].right  = right;
		obj[property].bottom = bottom;
	}
	var clipUVCache = [];
	function allocClipUV()      { return alloc(clipUVCache,cr.rect);}
	function freeAllClipUV(obj) { freeAll(clipUVCache,obj,false);}
	instanceProto.SplitSheet = function() {
		var texture      = this.texture_img;
		var texWidth     = texture.width;
		var texHeight    = texture.height;
		var charWidth    = this.characterWidth;
		var charHeight   = this.characterHeight;
		var charU        = charWidth /texWidth;
		var charV        = charHeight/texHeight;
		var charSet      = this.characterSet ;
		var cols = Math.floor(texWidth/charWidth);
		var rows = Math.floor(texHeight/charHeight);
		for ( var c = 0; c < charSet.length; c++) {
			if  (c >= cols * rows) break;
			var x = c%cols;
			var y = Math.floor(c/cols);
			var letter = charSet.charAt(c);
			if (this.runtime.glwrap) {
				addClipUV(
					this.clipUV, letter,
					x * charU ,
					y * charV ,
					(x+1) * charU ,
					(y+1) * charV
				);
			} else {
				addClip(
					this.clipList, letter,
					x * charWidth,
					y * charHeight,
					charWidth,
					charHeight
				);
			}
		}
	};
	/*
     *	Word-Wrapping
     */
	var wordsCache = [];
	pluginProto.TokeniseWords = function (text)
	{
		wordsCache.length = 0;
		var cur_word = "";
		var ch;
		var i = 0;
		while (i < text.length)
		{
			ch = text.charAt(i);
			if (ch === "\n")
			{
				if (cur_word.length)
				{
					wordsCache.push(cur_word);
					cur_word = "";
				}
				wordsCache.push("\n");
				++i;
			}
			else if (ch === " " || ch === "\t" || ch === "-")
			{
				do {
					cur_word += text.charAt(i);
					i++;
				}
				while (i < text.length && (text.charAt(i) === " " || text.charAt(i) === "\t"));
				wordsCache.push(cur_word);
				cur_word = "";
			}
			else if (i < text.length)
			{
				cur_word += ch;
				i++;
			}
		}
		if (cur_word.length)
			wordsCache.push(cur_word);
	};
	pluginProto.WordWrap = function (inst)
	{
		var text = inst.text;
		var lines = inst.lines;
		if (!text || !text.length)
		{
			freeAllLines(lines);
			return;
		}
		var width = inst.width;
		if (width <= 2.0)
		{
			freeAllLines(lines);
			return;
		}
		var charWidth = inst.characterWidth;
		var charScale = inst.characterScale;
		var charSpacing = inst.characterSpacing;
		if ( (text.length * (charWidth * charScale + charSpacing) - charSpacing) <= width && text.indexOf("\n") === -1)
		{
			var all_width = inst.measureWidth(text);
			if (all_width <= width)
			{
				freeAllLines(lines);
				lines.push(allocLine());
				lines[0].text = text;
				lines[0].width = all_width;
				inst.textWidth  = all_width;
				inst.textHeight = inst.characterHeight * charScale + inst.lineHeight;
				return;
			}
		}
		var wrapbyword = inst.wrapbyword;
		this.WrapText(inst);
		inst.textHeight = lines.length * (inst.characterHeight * charScale + inst.lineHeight);
	};
	pluginProto.WrapText = function (inst)
	{
		var wrapbyword = inst.wrapbyword;
		var text       = inst.text;
		var lines      = inst.lines;
		var width      = inst.width;
		var wordArray;
		if (wrapbyword) {
			this.TokeniseWords(text);	// writes to wordsCache
			wordArray = wordsCache;
		} else {
			wordArray = text;
		}
		var cur_line = "";
		var prev_line;
		var line_width;
		var i;
		var lineIndex = 0;
		var line;
		var ignore_newline = false;
		for (i = 0; i < wordArray.length; i++)
		{
			if (wordArray[i] === "\n")
			{
				if (ignore_newline === true) {
					ignore_newline = false;
				} else {
					addLine(inst,lineIndex,cur_line);
					lineIndex++;
				}
				cur_line = "";
				continue;
			}
			ignore_newline = false;
			prev_line = cur_line;
			cur_line += wordArray[i];
			line_width = inst.measureWidth(trimRight(cur_line));
			if (line_width > width)
			{
				if (prev_line === "") {
					addLine(inst,lineIndex,cur_line);
					cur_line = "";
					ignore_newline = true;
				} else {
					addLine(inst,lineIndex,prev_line);
					cur_line = wordArray[i];
				}
				lineIndex++;
				if (!wrapbyword && cur_line === " ")
					cur_line = "";
			}
		}
		if (trimRight(cur_line).length)
		{
			addLine(inst,lineIndex,cur_line);
			lineIndex++;
		}
		for (i = lineIndex; i < lines.length; i++)
			freeLine(lines[i]);
		lines.length = lineIndex;
	};
	instanceProto.measureWidth = function(text) {
		var spacing = this.characterSpacing;
		var len     = text.length;
		var width   = 0;
		for (var i = 0; i < len; i++) {
			width += this.getCharacterWidth(text.charAt(i)) * this.characterScale + spacing;
		}
		width -= (width > 0) ? spacing : 0;
		return width;
	};
	/***/
	instanceProto.getCharacterWidth = function(character) {
		var widthList = this.characterWidthList;
		if (widthList[character] !== undefined) {
			return widthList[character];
		} else {
			return this.characterWidth;
		}
	};
	instanceProto.rebuildText = function() {
		if (this.text_changed || this.width !== this.lastwrapwidth) {
			this.textWidth = 0;
			this.textHeight = 0;
			this.type.plugin.WordWrap(this);
			this.text_changed = false;
			this.lastwrapwidth = this.width;
		}
	};
	var EPSILON = 0.00001;
	instanceProto.draw = function(ctx, glmode)
	{
		var texture = this.texture_img;
		if (this.text !== "" && texture != null) {
			this.rebuildText();
			if (this.height < this.characterHeight*this.characterScale + this.lineHeight) {
				return;
			}
			ctx.globalAlpha = this.opacity;
			var myx = this.x;
			var myy = this.y;
			if (this.runtime.pixel_rounding)
			{
				myx = (myx + 0.5) | 0;
				myy = (myy + 0.5) | 0;
			}
			ctx.save();
			ctx.translate(myx, myy);
			ctx.rotate(this.angle);
			var ha         = this.halign;
			var va         = this.valign;
			var scale      = this.characterScale;
			var charHeight = this.characterHeight * scale;
			var lineHeight = this.lineHeight;
			var charSpace  = this.characterSpacing;
			var lines = this.lines;
			var textHeight = this.textHeight;
			var halign;
			var valign = va * cr.max(0,(this.height - textHeight));
			var offx = -(this.hotspotX * this.width);
			var offy = -(this.hotspotY * this.height);
			offy += valign;
			var drawX ;
			var drawY = offy;
			for(var i = 0; i < lines.length; i++) {
				var line = lines[i].text;
				var len  = lines[i].width;
				halign = ha * cr.max(0,this.width - len);
				drawX = offx + halign;
				drawY += lineHeight;
				for(var j = 0; j < line.length; j++) {
					var letter = line.charAt(j);
					var clip = this.clipList[letter];
					if ( drawX + this.getCharacterWidth(letter) * scale > this.width + EPSILON ) {
						break;
					}
					if (clip !== undefined) {
						ctx.drawImage( this.texture_img,
									 clip.x, clip.y, clip.w, clip.h,
									 Math.round(drawX),Math.round(drawY),clip.w*scale,clip.h*scale);
					}
					drawX  += this.getCharacterWidth(letter) * scale + charSpace;
				}
				drawY += charHeight;
				if ( drawY + charHeight + lineHeight > this.height) {
					break;
				}
			}
			ctx.restore();
		}
	};
	var dQuad = new cr.quad();
	function rotateQuad(quad,cosa,sina) {
		var x_temp;
		x_temp   = (quad.tlx * cosa) - (quad.tly * sina);
		quad.tly = (quad.tly * cosa) + (quad.tlx * sina);
		quad.tlx = x_temp;
		x_temp    = (quad.trx * cosa) - (quad.try_ * sina);
		quad.try_ = (quad.try_ * cosa) + (quad.trx * sina);
		quad.trx  = x_temp;
		x_temp   = (quad.blx * cosa) - (quad.bly * sina);
		quad.bly = (quad.bly * cosa) + (quad.blx * sina);
		quad.blx = x_temp;
		x_temp    = (quad.brx * cosa) - (quad.bry * sina);
		quad.bry = (quad.bry * cosa) + (quad.brx * sina);
		quad.brx  = x_temp;
	}
	instanceProto.drawGL = function(glw)
	{
		glw.setTexture(this.webGL_texture);
		glw.setOpacity(this.opacity);
		if (this.text !== "") {
			this.rebuildText();
			if (this.height < this.characterHeight*this.characterScale + this.lineHeight) {
				return;
			}
			this.update_bbox();
			var q = this.bquad;
			var ox = 0;
			var oy = 0;
			if (this.runtime.pixel_rounding)
			{
				ox = ((this.x + 0.5) | 0) - this.x;
				oy = ((this.y + 0.5) | 0) - this.y;
			}
			var angle      = this.angle;
			var ha         = this.halign;
			var va         = this.valign;
			var scale      = this.characterScale;
			var charHeight = this.characterHeight * scale;   // to precalculate in onCreate or on change
			var lineHeight = this.lineHeight;
			var charSpace  = this.characterSpacing;
			var lines = this.lines;
			var textHeight = this.textHeight;
			var cosa,sina;
			if (angle !== 0)
			{
				cosa = Math.cos(angle);
				sina = Math.sin(angle);
			}
			var halign;
			var valign = va * cr.max(0,(this.height - textHeight));
			var offx = q.tlx + ox;
			var offy = q.tly + oy;
			var drawX ;
			var drawY = valign;
			for(var i = 0; i < lines.length; i++) {
				var line       = lines[i].text;
				var lineWidth  = lines[i].width;
				halign = ha * cr.max(0,this.width - lineWidth);
				drawX = halign;
				drawY += lineHeight;
				for(var j = 0; j < line.length; j++) {
					var letter = line.charAt(j);
					var clipUV = this.clipUV[letter];
					if ( drawX + this.getCharacterWidth(letter) * scale  > this.width + EPSILON) {
						break;
					}
					if (clipUV !== undefined) {
						var clipWidth  = this.characterWidth*scale;
						var clipHeight = this.characterHeight*scale;
						dQuad.tlx  = drawX;
						dQuad.tly  = drawY;
						dQuad.trx  = drawX + clipWidth;
						dQuad.try_ = drawY ;
						dQuad.blx  = drawX;
						dQuad.bly  = drawY + clipHeight;
						dQuad.brx  = drawX + clipWidth;
						dQuad.bry  = drawY + clipHeight;
						if(angle !== 0)
						{
							rotateQuad(dQuad,cosa,sina);
						}
						dQuad.offset(offx,offy);
						glw.quadTex(
							dQuad.tlx, dQuad.tly,
							dQuad.trx, dQuad.try_,
							dQuad.brx, dQuad.bry,
							dQuad.blx, dQuad.bly,
							clipUV
						);
					}
					drawX  += this.getCharacterWidth(letter) * scale + charSpace;
				}
				drawY += charHeight;
				if ( drawY + charHeight + lineHeight > this.height) {
					break;
				}
			}
		}
	};
	function Cnds() {}
	Cnds.prototype.CompareText = function(text_to_compare, case_sensitive)
	{
		if (case_sensitive)
			return this.text == text_to_compare;
		else
			return cr.equals_nocase(this.text, text_to_compare);
	};
	pluginProto.cnds = new Cnds();
	function Acts() {}
	Acts.prototype.SetText = function(param)
	{
		if (cr.is_number(param) && param < 1e9)
			param = Math.round(param * 1e10) / 1e10;	// round to nearest ten billionth - hides floating point errors
		var text_to_set = param.toString();
		if (this.text !== text_to_set)
		{
			this.text = text_to_set;
			this.text_changed = true;
			this.runtime.redraw = true;
		}
	};
	Acts.prototype.AppendText = function(param)
	{
		if (cr.is_number(param))
			param = Math.round(param * 1e10) / 1e10;	// round to nearest ten billionth - hides floating point errors
		var text_to_append = param.toString();
		if (text_to_append)	// not empty
		{
			this.text += text_to_append;
			this.text_changed = true;
			this.runtime.redraw = true;
		}
	};
	Acts.prototype.SetScale = function(param)
	{
		if (param !== this.characterScale) {
			this.characterScale = param;
			this.text_changed = true;
			this.runtime.redraw = true;
		}
	};
	Acts.prototype.SetCharacterSpacing = function(param)
	{
		if (param !== this.CharacterSpacing) {
			this.characterSpacing = param;
			this.text_changed = true;
			this.runtime.redraw = true;
		}
	};
	Acts.prototype.SetLineHeight = function(param)
	{
		if (param !== this.lineHeight) {
			this.lineHeight = param;
			this.text_changed = true;
			this.runtime.redraw = true;
		}
	};
	instanceProto.SetCharWidth = function(character,width) {
		var w = parseInt(width,10);
		if (this.characterWidthList[character] !== w) {
			this.characterWidthList[character] = w;
			this.text_changed = true;
			this.runtime.redraw = true;
		}
	};
	Acts.prototype.SetCharacterWidth = function(characterSet,width)
	{
		if (characterSet !== "") {
			for(var c = 0; c < characterSet.length; c++) {
				this.SetCharWidth(characterSet.charAt(c),width);
			}
		}
	};
	Acts.prototype.SetEffect = function (effect)
	{
		this.compositeOp = cr.effectToCompositeOp(effect);
		cr.setGLBlend(this, effect, this.runtime.gl);
		this.runtime.redraw = true;
	};
	pluginProto.acts = new Acts();
	function Exps() {}
	Exps.prototype.CharacterWidth = function(ret,character)
	{
		ret.set_int(this.getCharacterWidth(character));
	};
	Exps.prototype.CharacterHeight = function(ret)
	{
		ret.set_int(this.characterHeight);
	};
	Exps.prototype.CharacterScale = function(ret)
	{
		ret.set_float(this.characterScale);
	};
	Exps.prototype.CharacterSpacing = function(ret)
	{
		ret.set_int(this.characterSpacing);
	};
	Exps.prototype.LineHeight = function(ret)
	{
		ret.set_int(this.lineHeight);
	};
	Exps.prototype.Text = function(ret)
	{
		ret.set_string(this.text);
	};
	Exps.prototype.TextWidth = function (ret)
	{
		this.rebuildText();
		ret.set_float(this.textWidth);
	};
	Exps.prototype.TextHeight = function (ret)
	{
		this.rebuildText();
		ret.set_float(this.textHeight);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.Text = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Text.prototype;
	pluginProto.onCreate = function ()
	{
		pluginProto.acts.SetWidth = function (w)
		{
			if (this.width !== w)
			{
				this.width = w;
				this.text_changed = true;	// also recalculate text wrapping
				this.set_bbox_changed();
			}
		};
	};
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	typeProto.onLostWebGLContext = function ()
	{
		if (this.is_family)
			return;
		var i, len, inst;
		for (i = 0, len = this.instances.length; i < len; i++)
		{
			inst = this.instances[i];
			inst.mycanvas = null;
			inst.myctx = null;
			inst.mytex = null;
		}
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
		if (this.recycled)
			this.lines.length = 0;
		else
			this.lines = [];		// for word wrapping
		this.text_changed = true;
	};
	var instanceProto = pluginProto.Instance.prototype;
	var requestedWebFonts = {};		// already requested web fonts have an entry here
	instanceProto.onCreate = function()
	{
		this.text = this.properties[0];
		this.visible = (this.properties[1] === 0);		// 0=visible, 1=invisible
		this.font = this.properties[2];
		this.color = this.properties[3];
		this.halign = this.properties[4];				// 0=left, 1=center, 2=right
		this.valign = this.properties[5];				// 0=top, 1=center, 2=bottom
		this.wrapbyword = (this.properties[7] === 0);	// 0=word, 1=character
		this.lastwidth = this.width;
		this.lastwrapwidth = this.width;
		this.lastheight = this.height;
		this.line_height_offset = this.properties[8];
		this.facename = "";
		this.fontstyle = "";
		this.ptSize = 0;
		this.textWidth = 0;
		this.textHeight = 0;
		this.parseFont();
		this.mycanvas = null;
		this.myctx = null;
		this.mytex = null;
		this.need_text_redraw = false;
		this.last_render_tick = this.runtime.tickcount;
		if (this.recycled)
			this.rcTex.set(0, 0, 1, 1);
		else
			this.rcTex = new cr.rect(0, 0, 1, 1);
		if (this.runtime.glwrap)
			this.runtime.tickMe(this);
;
	};
	instanceProto.parseFont = function ()
	{
		var arr = this.font.split(" ");
		var i;
		for (i = 0; i < arr.length; i++)
		{
			if (arr[i].substr(arr[i].length - 2, 2) === "pt")
			{
				this.ptSize = parseInt(arr[i].substr(0, arr[i].length - 2));
				this.pxHeight = Math.ceil((this.ptSize / 72.0) * 96.0) + 4;	// assume 96dpi...
				if (i > 0)
					this.fontstyle = arr[i - 1];
				this.facename = arr[i + 1];
				for (i = i + 2; i < arr.length; i++)
					this.facename += " " + arr[i];
				break;
			}
		}
	};
	instanceProto.saveToJSON = function ()
	{
		return {
			"t": this.text,
			"f": this.font,
			"c": this.color,
			"ha": this.halign,
			"va": this.valign,
			"wr": this.wrapbyword,
			"lho": this.line_height_offset,
			"fn": this.facename,
			"fs": this.fontstyle,
			"ps": this.ptSize,
			"pxh": this.pxHeight,
			"tw": this.textWidth,
			"th": this.textHeight,
			"lrt": this.last_render_tick
		};
	};
	instanceProto.loadFromJSON = function (o)
	{
		this.text = o["t"];
		this.font = o["f"];
		this.color = o["c"];
		this.halign = o["ha"];
		this.valign = o["va"];
		this.wrapbyword = o["wr"];
		this.line_height_offset = o["lho"];
		this.facename = o["fn"];
		this.fontstyle = o["fs"];
		this.ptSize = o["ps"];
		this.pxHeight = o["pxh"];
		this.textWidth = o["tw"];
		this.textHeight = o["th"];
		this.last_render_tick = o["lrt"];
		this.text_changed = true;
		this.lastwidth = this.width;
		this.lastwrapwidth = this.width;
		this.lastheight = this.height;
	};
	instanceProto.tick = function ()
	{
		if (this.runtime.glwrap && this.mytex && (this.runtime.tickcount - this.last_render_tick >= 300))
		{
			var layer = this.layer;
            this.update_bbox();
            var bbox = this.bbox;
            if (bbox.right < layer.viewLeft || bbox.bottom < layer.viewTop || bbox.left > layer.viewRight || bbox.top > layer.viewBottom)
			{
				this.runtime.glwrap.deleteTexture(this.mytex);
				this.mytex = null;
				this.myctx = null;
				this.mycanvas = null;
			}
		}
	};
	instanceProto.onDestroy = function ()
	{
		this.myctx = null;
		this.mycanvas = null;
		if (this.runtime.glwrap && this.mytex)
			this.runtime.glwrap.deleteTexture(this.mytex);
		this.mytex = null;
	};
	instanceProto.updateFont = function ()
	{
		this.font = this.fontstyle + " " + this.ptSize.toString() + "pt " + this.facename;
		this.text_changed = true;
		this.runtime.redraw = true;
	};
	instanceProto.draw = function(ctx, glmode)
	{
		ctx.font = this.font;
		ctx.textBaseline = "top";
		ctx.fillStyle = this.color;
		ctx.globalAlpha = glmode ? 1 : this.opacity;
		var myscale = 1;
		if (glmode)
		{
			myscale = this.layer.getScale();
			ctx.save();
			ctx.scale(myscale, myscale);
		}
		if (this.text_changed || this.width !== this.lastwrapwidth)
		{
			this.type.plugin.WordWrap(this.text, this.lines, ctx, this.width, this.wrapbyword);
			this.text_changed = false;
			this.lastwrapwidth = this.width;
		}
		this.update_bbox();
		var penX = glmode ? 0 : this.bquad.tlx;
		var penY = glmode ? 0 : this.bquad.tly;
		if (this.runtime.pixel_rounding)
		{
			penX = (penX + 0.5) | 0;
			penY = (penY + 0.5) | 0;
		}
		if (this.angle !== 0 && !glmode)
		{
			ctx.save();
			ctx.translate(penX, penY);
			ctx.rotate(this.angle);
			penX = 0;
			penY = 0;
		}
		var endY = penY + this.height;
		var line_height = this.pxHeight;
		line_height += (this.line_height_offset * this.runtime.devicePixelRatio);
		var drawX;
		var i;
		if (this.valign === 1)		// center
			penY += Math.max(this.height / 2 - (this.lines.length * line_height) / 2, 0);
		else if (this.valign === 2)	// bottom
			penY += Math.max(this.height - (this.lines.length * line_height) - 2, 0);
		for (i = 0; i < this.lines.length; i++)
		{
			drawX = penX;
			if (this.halign === 1)		// center
				drawX = penX + (this.width - this.lines[i].width) / 2;
			else if (this.halign === 2)	// right
				drawX = penX + (this.width - this.lines[i].width);
			ctx.fillText(this.lines[i].text, drawX, penY);
			penY += line_height;
			if (penY >= endY - line_height)
				break;
		}
		if (this.angle !== 0 || glmode)
			ctx.restore();
		this.last_render_tick = this.runtime.tickcount;
	};
	instanceProto.drawGL = function(glw)
	{
		if (this.width < 1 || this.height < 1)
			return;
		var need_redraw = this.text_changed || this.need_text_redraw;
		this.need_text_redraw = false;
		var layer_scale = this.layer.getScale();
		var layer_angle = this.layer.getAngle();
		var rcTex = this.rcTex;
		var floatscaledwidth = layer_scale * this.width;
		var floatscaledheight = layer_scale * this.height;
		var scaledwidth = Math.ceil(floatscaledwidth);
		var scaledheight = Math.ceil(floatscaledheight);
		var windowWidth = this.runtime.width;
		var windowHeight = this.runtime.height;
		var halfw = windowWidth / 2;
		var halfh = windowHeight / 2;
		if (!this.myctx)
		{
			this.mycanvas = document.createElement("canvas");
			this.mycanvas.width = scaledwidth;
			this.mycanvas.height = scaledheight;
			this.lastwidth = scaledwidth;
			this.lastheight = scaledheight;
			need_redraw = true;
			this.myctx = this.mycanvas.getContext("2d");
		}
		if (scaledwidth !== this.lastwidth || scaledheight !== this.lastheight)
		{
			this.mycanvas.width = scaledwidth;
			this.mycanvas.height = scaledheight;
			if (this.mytex)
			{
				glw.deleteTexture(this.mytex);
				this.mytex = null;
			}
			need_redraw = true;
		}
		if (need_redraw)
		{
			this.myctx.clearRect(0, 0, scaledwidth, scaledheight);
			this.draw(this.myctx, true);
			if (!this.mytex)
				this.mytex = glw.createEmptyTexture(scaledwidth, scaledheight, this.runtime.linearSampling, this.runtime.isMobile);
			glw.videoToTexture(this.mycanvas, this.mytex, this.runtime.isMobile);
		}
		this.lastwidth = scaledwidth;
		this.lastheight = scaledheight;
		glw.setTexture(this.mytex);
		glw.setOpacity(this.opacity);
		glw.resetModelView();
		glw.translate(-halfw, -halfh);
		glw.updateModelView();
		var q = this.bquad;
		var tlx = this.layer.layerToCanvas(q.tlx, q.tly, true);
		var tly = this.layer.layerToCanvas(q.tlx, q.tly, false);
		var trx = this.layer.layerToCanvas(q.trx, q.try_, true);
		var try_ = this.layer.layerToCanvas(q.trx, q.try_, false);
		var brx = this.layer.layerToCanvas(q.brx, q.bry, true);
		var bry = this.layer.layerToCanvas(q.brx, q.bry, false);
		var blx = this.layer.layerToCanvas(q.blx, q.bly, true);
		var bly = this.layer.layerToCanvas(q.blx, q.bly, false);
		if (this.runtime.pixel_rounding || (this.angle === 0 && layer_angle === 0))
		{
			var ox = ((tlx + 0.5) | 0) - tlx;
			var oy = ((tly + 0.5) | 0) - tly
			tlx += ox;
			tly += oy;
			trx += ox;
			try_ += oy;
			brx += ox;
			bry += oy;
			blx += ox;
			bly += oy;
		}
		if (this.angle === 0 && layer_angle === 0)
		{
			trx = tlx + scaledwidth;
			try_ = tly;
			brx = trx;
			bry = tly + scaledheight;
			blx = tlx;
			bly = bry;
			rcTex.right = 1;
			rcTex.bottom = 1;
		}
		else
		{
			rcTex.right = floatscaledwidth / scaledwidth;
			rcTex.bottom = floatscaledheight / scaledheight;
		}
		glw.quadTex(tlx, tly, trx, try_, brx, bry, blx, bly, rcTex);
		glw.resetModelView();
		glw.scale(layer_scale, layer_scale);
		glw.rotateZ(-this.layer.getAngle());
		glw.translate((this.layer.viewLeft + this.layer.viewRight) / -2, (this.layer.viewTop + this.layer.viewBottom) / -2);
		glw.updateModelView();
		this.last_render_tick = this.runtime.tickcount;
	};
	var wordsCache = [];
	pluginProto.TokeniseWords = function (text)
	{
		wordsCache.length = 0;
		var cur_word = "";
		var ch;
		var i = 0;
		while (i < text.length)
		{
			ch = text.charAt(i);
			if (ch === "\n")
			{
				if (cur_word.length)
				{
					wordsCache.push(cur_word);
					cur_word = "";
				}
				wordsCache.push("\n");
				++i;
			}
			else if (ch === " " || ch === "\t" || ch === "-")
			{
				do {
					cur_word += text.charAt(i);
					i++;
				}
				while (i < text.length && (text.charAt(i) === " " || text.charAt(i) === "\t"));
				wordsCache.push(cur_word);
				cur_word = "";
			}
			else if (i < text.length)
			{
				cur_word += ch;
				i++;
			}
		}
		if (cur_word.length)
			wordsCache.push(cur_word);
	};
	var linesCache = [];
	function allocLine()
	{
		if (linesCache.length)
			return linesCache.pop();
		else
			return {};
	};
	function freeLine(l)
	{
		linesCache.push(l);
	};
	function freeAllLines(arr)
	{
		var i, len;
		for (i = 0, len = arr.length; i < len; i++)
		{
			freeLine(arr[i]);
		}
		arr.length = 0;
	};
	pluginProto.WordWrap = function (text, lines, ctx, width, wrapbyword)
	{
		if (!text || !text.length)
		{
			freeAllLines(lines);
			return;
		}
		if (width <= 2.0)
		{
			freeAllLines(lines);
			return;
		}
		if (text.length <= 100 && text.indexOf("\n") === -1)
		{
			var all_width = ctx.measureText(text).width;
			if (all_width <= width)
			{
				freeAllLines(lines);
				lines.push(allocLine());
				lines[0].text = text;
				lines[0].width = all_width;
				return;
			}
		}
		this.WrapText(text, lines, ctx, width, wrapbyword);
	};
	pluginProto.WrapText = function (text, lines, ctx, width, wrapbyword)
	{
		var wordArray;
		if (wrapbyword)
		{
			this.TokeniseWords(text);	// writes to wordsCache
			wordArray = wordsCache;
		}
		else
			wordArray = text;
		var cur_line = "";
		var prev_line;
		var line_width;
		var i;
		var lineIndex = 0;
		var line;
		for (i = 0; i < wordArray.length; i++)
		{
			if (wordArray[i] === "\n")
			{
				if (lineIndex >= lines.length)
					lines.push(allocLine());
				line = lines[lineIndex];
				line.text = cur_line;
				line.width = ctx.measureText(cur_line).width;
				lineIndex++;
				cur_line = "";
				continue;
			}
			prev_line = cur_line;
			cur_line += wordArray[i];
			line_width = ctx.measureText(cur_line).width;
			if (line_width >= width)
			{
				if (lineIndex >= lines.length)
					lines.push(allocLine());
				line = lines[lineIndex];
				line.text = prev_line;
				line.width = ctx.measureText(prev_line).width;
				lineIndex++;
				cur_line = wordArray[i];
				if (!wrapbyword && cur_line === " ")
					cur_line = "";
			}
		}
		if (cur_line.length)
		{
			if (lineIndex >= lines.length)
				lines.push(allocLine());
			line = lines[lineIndex];
			line.text = cur_line;
			line.width = ctx.measureText(cur_line).width;
			lineIndex++;
		}
		for (i = lineIndex; i < lines.length; i++)
			freeLine(lines[i]);
		lines.length = lineIndex;
	};
	function Cnds() {};
	Cnds.prototype.CompareText = function(text_to_compare, case_sensitive)
	{
		if (case_sensitive)
			return this.text == text_to_compare;
		else
			return cr.equals_nocase(this.text, text_to_compare);
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.SetText = function(param)
	{
		if (cr.is_number(param) && param < 1e9)
			param = Math.round(param * 1e10) / 1e10;	// round to nearest ten billionth - hides floating point errors
		var text_to_set = param.toString();
		if (this.text !== text_to_set)
		{
			this.text = text_to_set;
			this.text_changed = true;
			this.runtime.redraw = true;
		}
	};
	Acts.prototype.AppendText = function(param)
	{
		if (cr.is_number(param))
			param = Math.round(param * 1e10) / 1e10;	// round to nearest ten billionth - hides floating point errors
		var text_to_append = param.toString();
		if (text_to_append)	// not empty
		{
			this.text += text_to_append;
			this.text_changed = true;
			this.runtime.redraw = true;
		}
	};
	Acts.prototype.SetFontFace = function (face_, style_)
	{
		var newstyle = "";
		switch (style_) {
		case 1: newstyle = "bold"; break;
		case 2: newstyle = "italic"; break;
		case 3: newstyle = "bold italic"; break;
		}
		if (face_ === this.facename && newstyle === this.fontstyle)
			return;		// no change
		this.facename = face_;
		this.fontstyle = newstyle;
		this.updateFont();
	};
	Acts.prototype.SetFontSize = function (size_)
	{
		if (this.ptSize === size_)
			return;
		this.ptSize = size_;
		this.pxHeight = Math.ceil((this.ptSize / 72.0) * 96.0) + 4;	// assume 96dpi...
		this.updateFont();
	};
	Acts.prototype.SetFontColor = function (rgb)
	{
		var newcolor = "rgb(" + cr.GetRValue(rgb).toString() + "," + cr.GetGValue(rgb).toString() + "," + cr.GetBValue(rgb).toString() + ")";
		if (newcolor === this.color)
			return;
		this.color = newcolor;
		this.need_text_redraw = true;
		this.runtime.redraw = true;
	};
	Acts.prototype.SetWebFont = function (familyname_, cssurl_)
	{
		if (this.runtime.isDomFree)
		{
			cr.logexport("[Construct 2] Text plugin: 'Set web font' not supported on this platform - the action has been ignored");
			return;		// DC todo
		}
		var self = this;
		var refreshFunc = (function () {
							self.runtime.redraw = true;
							self.text_changed = true;
						});
		if (requestedWebFonts.hasOwnProperty(cssurl_))
		{
			var newfacename = "'" + familyname_ + "'";
			if (this.facename === newfacename)
				return;	// no change
			this.facename = newfacename;
			this.updateFont();
			for (var i = 1; i < 10; i++)
			{
				setTimeout(refreshFunc, i * 100);
				setTimeout(refreshFunc, i * 1000);
			}
			return;
		}
		var wf = document.createElement("link");
		wf.href = cssurl_;
		wf.rel = "stylesheet";
		wf.type = "text/css";
		wf.onload = refreshFunc;
		document.getElementsByTagName('head')[0].appendChild(wf);
		requestedWebFonts[cssurl_] = true;
		this.facename = "'" + familyname_ + "'";
		this.updateFont();
		for (var i = 1; i < 10; i++)
		{
			setTimeout(refreshFunc, i * 100);
			setTimeout(refreshFunc, i * 1000);
		}
;
	};
	Acts.prototype.SetEffect = function (effect)
	{
		this.compositeOp = cr.effectToCompositeOp(effect);
		cr.setGLBlend(this, effect, this.runtime.gl);
		this.runtime.redraw = true;
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.Text = function(ret)
	{
		ret.set_string(this.text);
	};
	Exps.prototype.FaceName = function (ret)
	{
		ret.set_string(this.facename);
	};
	Exps.prototype.FaceSize = function (ret)
	{
		ret.set_int(this.ptSize);
	};
	Exps.prototype.TextWidth = function (ret)
	{
		var w = 0;
		var i, len, x;
		for (i = 0, len = this.lines.length; i < len; i++)
		{
			x = this.lines[i].width;
			if (w < x)
				w = x;
		}
		ret.set_int(w);
	};
	Exps.prototype.TextHeight = function (ret)
	{
		ret.set_int(this.lines.length * (this.pxHeight + this.line_height_offset) - this.line_height_offset);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.TiledBg = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.TiledBg.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
		if (this.is_family)
			return;
		this.texture_img = new Image();
		this.texture_img["idtkLoadDisposed"] = true;
		this.texture_img.src = this.texture_file;
		this.texture_img.cr_filesize = this.texture_filesize;
		this.runtime.wait_for_textures.push(this.texture_img);
		this.pattern = null;
		this.webGL_texture = null;
	};
	typeProto.onLostWebGLContext = function ()
	{
		if (this.is_family)
			return;
		this.webGL_texture = null;
	};
	typeProto.onRestoreWebGLContext = function ()
	{
		if (this.is_family || !this.instances.length)
			return;
		if (!this.webGL_texture)
		{
			this.webGL_texture = this.runtime.glwrap.loadTexture(this.texture_img, true, this.runtime.linearSampling, this.texture_pixelformat);
		}
		var i, len;
		for (i = 0, len = this.instances.length; i < len; i++)
			this.instances[i].webGL_texture = this.webGL_texture;
	};
	typeProto.loadTextures = function ()
	{
		if (this.is_family || this.webGL_texture || !this.runtime.glwrap)
			return;
		this.webGL_texture = this.runtime.glwrap.loadTexture(this.texture_img, true, this.runtime.linearSampling, this.texture_pixelformat);
	};
	typeProto.unloadTextures = function ()
	{
		if (this.is_family || this.instances.length || !this.webGL_texture)
			return;
		this.runtime.glwrap.deleteTexture(this.webGL_texture);
		this.webGL_texture = null;
	};
	typeProto.preloadCanvas2D = function (ctx)
	{
		ctx.drawImage(this.texture_img, 0, 0);
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		this.visible = (this.properties[0] === 0);							// 0=visible, 1=invisible
		this.rcTex = new cr.rect(0, 0, 0, 0);
		this.has_own_texture = false;										// true if a texture loaded in from URL
		this.texture_img = this.type.texture_img;
		if (this.runtime.glwrap)
		{
			this.type.loadTextures();
			this.webGL_texture = this.type.webGL_texture;
		}
		else
		{
			if (!this.type.pattern)
				this.type.pattern = this.runtime.ctx.createPattern(this.type.texture_img, "repeat");
			this.pattern = this.type.pattern;
		}
	};
	instanceProto.afterLoad = function ()
	{
		this.has_own_texture = false;
		this.texture_img = this.type.texture_img;
	};
	instanceProto.onDestroy = function ()
	{
		if (this.runtime.glwrap && this.has_own_texture && this.webGL_texture)
		{
			this.runtime.glwrap.deleteTexture(this.webGL_texture);
			this.webGL_texture = null;
		}
	};
	instanceProto.draw = function(ctx)
	{
		ctx.globalAlpha = this.opacity;
		ctx.save();
		ctx.fillStyle = this.pattern;
		var myx = this.x;
		var myy = this.y;
		if (this.runtime.pixel_rounding)
		{
			myx = (myx + 0.5) | 0;
			myy = (myy + 0.5) | 0;
		}
		var drawX = -(this.hotspotX * this.width);
		var drawY = -(this.hotspotY * this.height);
		var offX = drawX % this.texture_img.width;
		var offY = drawY % this.texture_img.height;
		if (offX < 0)
			offX += this.texture_img.width;
		if (offY < 0)
			offY += this.texture_img.height;
		ctx.translate(myx, myy);
		ctx.rotate(this.angle);
		ctx.translate(offX, offY);
		ctx.fillRect(drawX - offX,
					 drawY - offY,
					 this.width,
					 this.height);
		ctx.restore();
	};
	instanceProto.drawGL = function(glw)
	{
		glw.setTexture(this.webGL_texture);
		glw.setOpacity(this.opacity);
		var rcTex = this.rcTex;
		rcTex.right = this.width / this.texture_img.width;
		rcTex.bottom = this.height / this.texture_img.height;
		var q = this.bquad;
		if (this.runtime.pixel_rounding)
		{
			var ox = ((this.x + 0.5) | 0) - this.x;
			var oy = ((this.y + 0.5) | 0) - this.y;
			glw.quadTex(q.tlx + ox, q.tly + oy, q.trx + ox, q.try_ + oy, q.brx + ox, q.bry + oy, q.blx + ox, q.bly + oy, rcTex);
		}
		else
			glw.quadTex(q.tlx, q.tly, q.trx, q.try_, q.brx, q.bry, q.blx, q.bly, rcTex);
	};
	function Cnds() {};
	Cnds.prototype.OnURLLoaded = function ()
	{
		return true;
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.SetEffect = function (effect)
	{
		this.compositeOp = cr.effectToCompositeOp(effect);
		cr.setGLBlend(this, effect, this.runtime.gl);
		this.runtime.redraw = true;
	};
	Acts.prototype.LoadURL = function (url_)
	{
		var img = new Image();
		var self = this;
		img.onload = function ()
		{
			self.texture_img = img;
			if (self.runtime.glwrap)
			{
				if (self.has_own_texture && self.webGL_texture)
					self.runtime.glwrap.deleteTexture(self.webGL_texture);
				self.webGL_texture = self.runtime.glwrap.loadTexture(img, true, self.runtime.linearSampling);
			}
			else
			{
				self.pattern = self.runtime.ctx.createPattern(img, "repeat");
			}
			self.has_own_texture = true;
			self.runtime.redraw = true;
			self.runtime.trigger(cr.plugins_.TiledBg.prototype.cnds.OnURLLoaded, self);
		};
		if (url_.substr(0, 5) !== "data:")
			img.crossOrigin = 'anonymous';
		img.src = url_;
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.ImageWidth = function (ret)
	{
		ret.set_float(this.texture_img.width);
	};
	Exps.prototype.ImageHeight = function (ret)
	{
		ret.set_float(this.texture_img.height);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.Touch = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Touch.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
		this.touches = [];
		this.mouseDown = false;
	};
	var instanceProto = pluginProto.Instance.prototype;
	var dummyoffset = {left: 0, top: 0};
	instanceProto.findTouch = function (id)
	{
		var i, len;
		for (i = 0, len = this.touches.length; i < len; i++)
		{
			if (this.touches[i]["id"] === id)
				return i;
		}
		return -1;
	};
	var appmobi_accx = 0;
	var appmobi_accy = 0;
	var appmobi_accz = 0;
	function AppMobiGetAcceleration(evt)
	{
		appmobi_accx = evt.x;
		appmobi_accy = evt.y;
		appmobi_accz = evt.z;
	};
	var pg_accx = 0;
	var pg_accy = 0;
	var pg_accz = 0;
	function PhoneGapGetAcceleration(evt)
	{
		pg_accx = evt.x;
		pg_accy = evt.y;
		pg_accz = evt.z;
	};
	var theInstance = null;
	instanceProto.onCreate = function()
	{
		theInstance = this;
		this.isWindows8 = !!(typeof window["c2isWindows8"] !== "undefined" && window["c2isWindows8"]);
		this.orient_alpha = 0;
		this.orient_beta = 0;
		this.orient_gamma = 0;
		this.acc_g_x = 0;
		this.acc_g_y = 0;
		this.acc_g_z = 0;
		this.acc_x = 0;
		this.acc_y = 0;
		this.acc_z = 0;
		this.curTouchX = 0;
		this.curTouchY = 0;
		this.trigger_index = 0;
		this.trigger_id = 0;
		this.useMouseInput = (this.properties[0] !== 0);
		var elem = (this.runtime.fullscreen_mode > 0) ? document : this.runtime.canvas;
		var elem2 = document;
		if (this.runtime.isDirectCanvas)
			elem2 = elem = window["Canvas"];
		else if (this.runtime.isCocoonJs)
			elem2 = elem = window;
		var self = this;
		if (window.navigator["msPointerEnabled"])
		{
			elem.addEventListener("MSPointerDown",
				function(info) {
					self.onPointerStart(info);
				},
				false
			);
			elem.addEventListener("MSPointerMove",
				function(info) {
					self.onPointerMove(info);
				},
				false
			);
			elem2.addEventListener("MSPointerUp",
				function(info) {
					self.onPointerEnd(info);
				},
				false
			);
			elem2.addEventListener("MSPointerCancel",
				function(info) {
					self.onPointerEnd(info);
				},
				false
			);
			if (this.runtime.canvas)
			{
				this.runtime.canvas.addEventListener("MSGestureHold", function(e) {
					e.preventDefault();
				}, false);
				document.addEventListener("MSGestureHold", function(e) {
					e.preventDefault();
				}, false);
			}
		}
		else
		{
			elem.addEventListener("touchstart",
				function(info) {
					self.onTouchStart(info);
				},
				false
			);
			elem.addEventListener("touchmove",
				function(info) {
					self.onTouchMove(info);
				},
				false
			);
			elem2.addEventListener("touchend",
				function(info) {
					self.onTouchEnd(info);
				},
				false
			);
			elem2.addEventListener("touchcancel",
				function(info) {
					self.onTouchEnd(info);
				},
				false
			);
		}
		if (this.isWindows8)
		{
			var win8accelerometerFn = function(e) {
					var reading = e["reading"];
					self.acc_x = reading["accelerationX"];
					self.acc_y = reading["accelerationY"];
					self.acc_z = reading["accelerationZ"];
				};
			var win8inclinometerFn = function(e) {
					var reading = e["reading"];
					self.orient_alpha = reading["yawDegrees"];
					self.orient_beta = reading["pitchDegrees"];
					self.orient_gamma = reading["rollDegrees"];
				};
			var accelerometer = Windows["Devices"]["Sensors"]["Accelerometer"]["getDefault"]();
            if (accelerometer)
			{
                accelerometer["reportInterval"] = Math.max(accelerometer["minimumReportInterval"], 16);
				accelerometer.addEventListener("readingchanged", win8accelerometerFn);
            }
			var inclinometer = Windows["Devices"]["Sensors"]["Inclinometer"]["getDefault"]();
			if (inclinometer)
			{
				inclinometer["reportInterval"] = Math.max(inclinometer["minimumReportInterval"], 16);
				inclinometer.addEventListener("readingchanged", win8inclinometerFn);
			}
			document.addEventListener("visibilitychange", function(e) {
				if (document["hidden"] || document["msHidden"])
				{
					if (accelerometer)
						accelerometer.removeEventListener("readingchanged", win8accelerometerFn);
					if (inclinometer)
						inclinometer.removeEventListener("readingchanged", win8inclinometerFn);
				}
				else
				{
					if (accelerometer)
						accelerometer.addEventListener("readingchanged", win8accelerometerFn);
					if (inclinometer)
						inclinometer.addEventListener("readingchanged", win8inclinometerFn);
				}
			}, false);
		}
		else
		{
			window.addEventListener("deviceorientation", function (eventData) {
				self.orient_alpha = eventData["alpha"] || 0;
				self.orient_beta = eventData["beta"] || 0;
				self.orient_gamma = eventData["gamma"] || 0;
			}, false);
			window.addEventListener("devicemotion", function (eventData) {
				if (eventData["accelerationIncludingGravity"])
				{
					self.acc_g_x = eventData["accelerationIncludingGravity"]["x"];
					self.acc_g_y = eventData["accelerationIncludingGravity"]["y"];
					self.acc_g_z = eventData["accelerationIncludingGravity"]["z"];
				}
				if (eventData["acceleration"])
				{
					self.acc_x = eventData["acceleration"]["x"];
					self.acc_y = eventData["acceleration"]["y"];
					self.acc_z = eventData["acceleration"]["z"];
				}
			}, false);
		}
		if (this.useMouseInput && !this.runtime.isDomFree)
		{
			jQuery(document).mousemove(
				function(info) {
					self.onMouseMove(info);
				}
			);
			jQuery(document).mousedown(
				function(info) {
					self.onMouseDown(info);
				}
			);
			jQuery(document).mouseup(
				function(info) {
					self.onMouseUp(info);
				}
			);
		}
		if (this.runtime.isAppMobi && !this.runtime.isDirectCanvas)
		{
			AppMobi["accelerometer"]["watchAcceleration"](AppMobiGetAcceleration, { "frequency": 40, "adjustForRotation": true });
		}
		if (this.runtime.isPhoneGap)
		{
			navigator["accelerometer"]["watchAcceleration"](PhoneGapGetAcceleration, null, { "frequency": 40 });
		}
		this.runtime.tick2Me(this);
	};
	instanceProto.onPointerMove = function (info)
	{
		if (info["pointerType"] === info["MSPOINTER_TYPE_MOUSE"])
			return;
		if (info.preventDefault)
			info.preventDefault();
		var i = this.findTouch(info["pointerId"]);
		var nowtime = cr.performance_now();
		if (i >= 0)
		{
			var offset = this.runtime.isDomFree ? dummyoffset : jQuery(this.runtime.canvas).offset();
			var t = this.touches[i];
			if (nowtime - t.time < 2)
				return;
			t.lasttime = t.time;
			t.lastx = t.x;
			t.lasty = t.y;
			t.time = nowtime;
			t.x = info.pageX - offset.left;
			t.y = info.pageY - offset.top;
		}
	};
	instanceProto.onPointerStart = function (info)
	{
		if (info["pointerType"] === info["MSPOINTER_TYPE_MOUSE"])
			return;
		if (info.preventDefault)
			info.preventDefault();
		var offset = this.runtime.isDomFree ? dummyoffset : jQuery(this.runtime.canvas).offset();
		var touchx = info.pageX - offset.left;
		var touchy = info.pageY - offset.top;
		var nowtime = cr.performance_now();
		this.trigger_index = this.touches.length;
		this.trigger_id = info["pointerId"];
		this.touches.push({ time: nowtime,
							x: touchx,
							y: touchy,
							lasttime: nowtime,
							lastx: touchx,
							lasty: touchy,
							"id": info["pointerId"],
							startindex: this.trigger_index
						});
		this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnNthTouchStart, this);
		this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnTouchStart, this);
		this.curTouchX = touchx;
		this.curTouchY = touchy;
		this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnTouchObject, this);
	};
	instanceProto.onPointerEnd = function (info)
	{
		if (info["pointerType"] === info["MSPOINTER_TYPE_MOUSE"])
			return;
		if (info.preventDefault)
			info.preventDefault();
		var i = this.findTouch(info["pointerId"]);
		this.trigger_index = (i >= 0 ? this.touches[i].startindex : -1);
		this.trigger_id = (i >= 0 ? this.touches[i]["id"] : -1);
		this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnNthTouchEnd, this);
		this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnTouchEnd, this);
		if (i >= 0)
		{
			this.touches.splice(i, 1);
		}
	};
	instanceProto.onTouchMove = function (info)
	{
		if (info.preventDefault)
			info.preventDefault();
		var nowtime = cr.performance_now();
		var i, len, t, u;
		for (i = 0, len = info.changedTouches.length; i < len; i++)
		{
			t = info.changedTouches[i];
			var j = this.findTouch(t["identifier"]);
			if (j >= 0)
			{
				var offset = this.runtime.isDomFree ? dummyoffset : jQuery(this.runtime.canvas).offset();
				u = this.touches[j];
				if (nowtime - u.time < 2)
					continue;
				u.lasttime = u.time;
				u.lastx = u.x;
				u.lasty = u.y;
				u.time = nowtime;
				u.x = t.pageX - offset.left;
				u.y = t.pageY - offset.top;
			}
		}
	};
	instanceProto.onTouchStart = function (info)
	{
		if (info.preventDefault)
			info.preventDefault();
		var offset = this.runtime.isDomFree ? dummyoffset : jQuery(this.runtime.canvas).offset();
		var nowtime = cr.performance_now();
		var i, len, t, j;
		for (i = 0, len = info.changedTouches.length; i < len; i++)
		{
			t = info.changedTouches[i];
			j = this.findTouch(t["identifier"]);
			if (j !== -1)
				continue;
			var touchx = t.pageX - offset.left;
			var touchy = t.pageY - offset.top;
			this.trigger_index = this.touches.length;
			this.trigger_id = t["identifier"];
			this.touches.push({ time: nowtime,
								x: touchx,
								y: touchy,
								lasttime: nowtime,
								lastx: touchx,
								lasty: touchy,
								"id": t["identifier"],
								startindex: this.trigger_index
							});
			this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnNthTouchStart, this);
			this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnTouchStart, this);
			this.curTouchX = touchx;
			this.curTouchY = touchy;
			this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnTouchObject, this);
		}
	};
	instanceProto.onTouchEnd = function (info)
	{
		if (info.preventDefault)
			info.preventDefault();
		var i, len, t, j;
		for (i = 0, len = info.changedTouches.length; i < len; i++)
		{
			t = info.changedTouches[i];
			j = this.findTouch(t["identifier"]);
			if (j >= 0)
			{
				this.trigger_index = this.touches[j].startindex;
				this.trigger_id = this.touches[j]["id"];
				this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnNthTouchEnd, this);
				this.runtime.trigger(cr.plugins_.Touch.prototype.cnds.OnTouchEnd, this);
				this.touches.splice(j, 1);
			}
		}
	};
	instanceProto.getAlpha = function ()
	{
		if (this.runtime.isAppMobi && this.orient_alpha === 0 && appmobi_accz !== 0)
			return appmobi_accz * 90;
		else if (this.runtime.isPhoneGap  && this.orient_alpha === 0 && pg_accz !== 0)
			return pg_accz * 90;
		else
			return this.orient_alpha;
	};
	instanceProto.getBeta = function ()
	{
		if (this.runtime.isAppMobi && this.orient_beta === 0 && appmobi_accy !== 0)
			return appmobi_accy * -90;
		else if (this.runtime.isPhoneGap  && this.orient_beta === 0 && pg_accy !== 0)
			return pg_accy * -90;
		else
			return this.orient_beta;
	};
	instanceProto.getGamma = function ()
	{
		if (this.runtime.isAppMobi && this.orient_gamma === 0 && appmobi_accx !== 0)
			return appmobi_accx * 90;
		else if (this.runtime.isPhoneGap  && this.orient_gamma === 0 && pg_accx !== 0)
			return pg_accx * 90;
		else
			return this.orient_gamma;
	};
	var noop_func = function(){};
	instanceProto.onMouseDown = function(info)
	{
		if (info.preventDefault && this.runtime.had_a_click)
			info.preventDefault();
		var t = { pageX: info.pageX, pageY: info.pageY, "identifier": 0 };
		var fakeinfo = { changedTouches: [t] };
		this.onTouchStart(fakeinfo);
		this.mouseDown = true;
	};
	instanceProto.onMouseMove = function(info)
	{
		if (info.preventDefault && this.runtime.had_a_click)
			info.preventDefault();
		if (!this.mouseDown)
			return;
		var t = { pageX: info.pageX, pageY: info.pageY, "identifier": 0 };
		var fakeinfo = { changedTouches: [t] };
		this.onTouchMove(fakeinfo);
	};
	instanceProto.onMouseUp = function(info)
	{
		if (info.preventDefault && this.runtime.had_a_click)
			info.preventDefault();
		this.runtime.had_a_click = true;
		var t = { pageX: info.pageX, pageY: info.pageY, "identifier": 0 };
		var fakeinfo = { changedTouches: [t] };
		this.onTouchEnd(fakeinfo);
		this.mouseDown = false;
	};
	instanceProto.tick2 = function()
	{
		var i, len, t;
		var nowtime = cr.performance_now();
		for (i = 0, len = this.touches.length; i < len; i++)
		{
			t = this.touches[i];
			if (t.time <= nowtime - 50)
				t.lasttime = nowtime;
		}
	};
	function Cnds() {};
	Cnds.prototype.OnTouchStart = function ()
	{
		return true;
	};
	Cnds.prototype.OnTouchEnd = function ()
	{
		return true;
	};
	Cnds.prototype.IsInTouch = function ()
	{
		return this.touches.length;
	};
	Cnds.prototype.OnTouchObject = function (type)
	{
		if (!type)
			return false;
		return this.runtime.testAndSelectCanvasPointOverlap(type, this.curTouchX, this.curTouchY, false);
	};
	Cnds.prototype.IsTouchingObject = function (type)
	{
		if (!type)
			return false;
		var sol = type.getCurrentSol();
		var instances = sol.getObjects();
		var px, py;
		var touching = [];
		var i, leni, j, lenj;
		for (i = 0, leni = instances.length; i < leni; i++)
		{
			var inst = instances[i];
			inst.update_bbox();
			for (j = 0, lenj = this.touches.length; j < lenj; j++)
			{
				var touch = this.touches[j];
				px = inst.layer.canvasToLayer(touch.x, touch.y, true);
				py = inst.layer.canvasToLayer(touch.x, touch.y, false);
				if (inst.contains_pt(px, py))
				{
					touching.push(inst);
					break;
				}
			}
		}
		if (touching.length)
		{
			sol.select_all = false;
			sol.instances = touching;
			return true;
		}
		else
			return false;
	};
	Cnds.prototype.CompareTouchSpeed = function (index, cmp, s)
	{
		index = Math.floor(index);
		if (index < 0 || index >= this.touches.length)
			return false;
		var t = this.touches[index];
		var dist = cr.distanceTo(t.x, t.y, t.lastx, t.lasty);
		var timediff = (t.time - t.lasttime) / 1000;
		var speed = 0;
		if (timediff > 0)
			speed = dist / timediff;
		return cr.do_cmp(speed, cmp, s);
	};
	Cnds.prototype.OrientationSupported = function ()
	{
		return typeof window["DeviceOrientationEvent"] !== "undefined";
	};
	Cnds.prototype.MotionSupported = function ()
	{
		return typeof window["DeviceMotionEvent"] !== "undefined";
	};
	Cnds.prototype.CompareOrientation = function (orientation_, cmp_, angle_)
	{
		var v = 0;
		if (orientation_ === 0)
			v = this.getAlpha();
		else if (orientation_ === 1)
			v = this.getBeta();
		else
			v = this.getGamma();
		return cr.do_cmp(v, cmp_, angle_);
	};
	Cnds.prototype.CompareAcceleration = function (acceleration_, cmp_, angle_)
	{
		var v = 0;
		if (acceleration_ === 0)
			v = this.acc_g_x;
		else if (acceleration_ === 1)
			v = this.acc_g_y;
		else if (acceleration_ === 2)
			v = this.acc_g_z;
		else if (acceleration_ === 3)
			v = this.acc_x;
		else if (acceleration_ === 4)
			v = this.acc_y;
		else if (acceleration_ === 5)
			v = this.acc_z;
		return cr.do_cmp(v, cmp_, angle_);
	};
	Cnds.prototype.OnNthTouchStart = function (touch_)
	{
		touch_ = Math.floor(touch_);
		return touch_ === this.trigger_index;
	};
	Cnds.prototype.OnNthTouchEnd = function (touch_)
	{
		touch_ = Math.floor(touch_);
		return touch_ === this.trigger_index;
	};
	Cnds.prototype.HasNthTouch = function (touch_)
	{
		touch_ = Math.floor(touch_);
		return this.touches.length >= touch_ + 1;
	};
	pluginProto.cnds = new Cnds();
	function Exps() {};
	Exps.prototype.TouchCount = function (ret)
	{
		ret.set_int(this.touches.length);
	};
	Exps.prototype.X = function (ret, layerparam)
	{
		if (this.touches.length)
		{
			var layer, oldScale, oldZoomRate, oldParallaxX, oldAngle;
			if (cr.is_undefined(layerparam))
			{
				layer = this.runtime.getLayerByNumber(0);
				oldScale = layer.scale;
				oldZoomRate = layer.zoomRate;
				oldParallaxX = layer.parallaxX;
				oldAngle = layer.angle;
				layer.scale = this.runtime.running_layout.scale;
				layer.zoomRate = 1.0;
				layer.parallaxX = 1.0;
				layer.angle = this.runtime.running_layout.angle;
				ret.set_float(layer.canvasToLayer(this.touches[0].x, this.touches[0].y, true));
				layer.scale = oldScale;
				layer.zoomRate = oldZoomRate;
				layer.parallaxX = oldParallaxX;
				layer.angle = oldAngle;
			}
			else
			{
				if (cr.is_number(layerparam))
					layer = this.runtime.getLayerByNumber(layerparam);
				else
					layer = this.runtime.getLayerByName(layerparam);
				if (layer)
					ret.set_float(layer.canvasToLayer(this.touches[0].x, this.touches[0].y, true));
				else
					ret.set_float(0);
			}
		}
		else
			ret.set_float(0);
	};
	Exps.prototype.XAt = function (ret, index, layerparam)
	{
		index = Math.floor(index);
		if (index < 0 || index >= this.touches.length)
		{
			ret.set_float(0);
			return;
		}
		var layer, oldScale, oldZoomRate, oldParallaxX, oldAngle;
		if (cr.is_undefined(layerparam))
		{
			layer = this.runtime.getLayerByNumber(0);
			oldScale = layer.scale;
			oldZoomRate = layer.zoomRate;
			oldParallaxX = layer.parallaxX;
			oldAngle = layer.angle;
			layer.scale = this.runtime.running_layout.scale;
			layer.zoomRate = 1.0;
			layer.parallaxX = 1.0;
			layer.angle = this.runtime.running_layout.angle;
			ret.set_float(layer.canvasToLayer(this.touches[index].x, this.touches[index].y, true));
			layer.scale = oldScale;
			layer.zoomRate = oldZoomRate;
			layer.parallaxX = oldParallaxX;
			layer.angle = oldAngle;
		}
		else
		{
			if (cr.is_number(layerparam))
				layer = this.runtime.getLayerByNumber(layerparam);
			else
				layer = this.runtime.getLayerByName(layerparam);
			if (layer)
				ret.set_float(layer.canvasToLayer(this.touches[index].x, this.touches[index].y, true));
			else
				ret.set_float(0);
		}
	};
	Exps.prototype.XForID = function (ret, id, layerparam)
	{
		var index = this.findTouch(id);
		if (index < 0)
		{
			ret.set_float(0);
			return;
		}
		var touch = this.touches[index];
		var layer, oldScale, oldZoomRate, oldParallaxX, oldAngle;
		if (cr.is_undefined(layerparam))
		{
			layer = this.runtime.getLayerByNumber(0);
			oldScale = layer.scale;
			oldZoomRate = layer.zoomRate;
			oldParallaxX = layer.parallaxX;
			oldAngle = layer.angle;
			layer.scale = this.runtime.running_layout.scale;
			layer.zoomRate = 1.0;
			layer.parallaxX = 1.0;
			layer.angle = this.runtime.running_layout.angle;
			ret.set_float(layer.canvasToLayer(touch.x, touch.y, true));
			layer.scale = oldScale;
			layer.zoomRate = oldZoomRate;
			layer.parallaxX = oldParallaxX;
			layer.angle = oldAngle;
		}
		else
		{
			if (cr.is_number(layerparam))
				layer = this.runtime.getLayerByNumber(layerparam);
			else
				layer = this.runtime.getLayerByName(layerparam);
			if (layer)
				ret.set_float(layer.canvasToLayer(touch.x, touch.y, true));
			else
				ret.set_float(0);
		}
	};
	Exps.prototype.Y = function (ret, layerparam)
	{
		if (this.touches.length)
		{
			var layer, oldScale, oldZoomRate, oldParallaxY, oldAngle;
			if (cr.is_undefined(layerparam))
			{
				layer = this.runtime.getLayerByNumber(0);
				oldScale = layer.scale;
				oldZoomRate = layer.zoomRate;
				oldParallaxY = layer.parallaxY;
				oldAngle = layer.angle;
				layer.scale = this.runtime.running_layout.scale;
				layer.zoomRate = 1.0;
				layer.parallaxY = 1.0;
				layer.angle = this.runtime.running_layout.angle;
				ret.set_float(layer.canvasToLayer(this.touches[0].x, this.touches[0].y, false));
				layer.scale = oldScale;
				layer.zoomRate = oldZoomRate;
				layer.parallaxY = oldParallaxY;
				layer.angle = oldAngle;
			}
			else
			{
				if (cr.is_number(layerparam))
					layer = this.runtime.getLayerByNumber(layerparam);
				else
					layer = this.runtime.getLayerByName(layerparam);
				if (layer)
					ret.set_float(layer.canvasToLayer(this.touches[0].x, this.touches[0].y, false));
				else
					ret.set_float(0);
			}
		}
		else
			ret.set_float(0);
	};
	Exps.prototype.YAt = function (ret, index, layerparam)
	{
		index = Math.floor(index);
		if (index < 0 || index >= this.touches.length)
		{
			ret.set_float(0);
			return;
		}
		var layer, oldScale, oldZoomRate, oldParallaxY, oldAngle;
		if (cr.is_undefined(layerparam))
		{
			layer = this.runtime.getLayerByNumber(0);
			oldScale = layer.scale;
			oldZoomRate = layer.zoomRate;
			oldParallaxY = layer.parallaxY;
			oldAngle = layer.angle;
			layer.scale = this.runtime.running_layout.scale;
			layer.zoomRate = 1.0;
			layer.parallaxY = 1.0;
			layer.angle = this.runtime.running_layout.angle;
			ret.set_float(layer.canvasToLayer(this.touches[index].x, this.touches[index].y, false));
			layer.scale = oldScale;
			layer.zoomRate = oldZoomRate;
			layer.parallaxY = oldParallaxY;
			layer.angle = oldAngle;
		}
		else
		{
			if (cr.is_number(layerparam))
				layer = this.runtime.getLayerByNumber(layerparam);
			else
				layer = this.runtime.getLayerByName(layerparam);
			if (layer)
				ret.set_float(layer.canvasToLayer(this.touches[index].x, this.touches[index].y, false));
			else
				ret.set_float(0);
		}
	};
	Exps.prototype.YForID = function (ret, id, layerparam)
	{
		var index = this.findTouch(id);
		if (index < 0)
		{
			ret.set_float(0);
			return;
		}
		var touch = this.touches[index];
		var layer, oldScale, oldZoomRate, oldParallaxY, oldAngle;
		if (cr.is_undefined(layerparam))
		{
			layer = this.runtime.getLayerByNumber(0);
			oldScale = layer.scale;
			oldZoomRate = layer.zoomRate;
			oldParallaxY = layer.parallaxY;
			oldAngle = layer.angle;
			layer.scale = this.runtime.running_layout.scale;
			layer.zoomRate = 1.0;
			layer.parallaxY = 1.0;
			layer.angle = this.runtime.running_layout.angle;
			ret.set_float(layer.canvasToLayer(touch.x, touch.y, false));
			layer.scale = oldScale;
			layer.zoomRate = oldZoomRate;
			layer.parallaxY = oldParallaxY;
			layer.angle = oldAngle;
		}
		else
		{
			if (cr.is_number(layerparam))
				layer = this.runtime.getLayerByNumber(layerparam);
			else
				layer = this.runtime.getLayerByName(layerparam);
			if (layer)
				ret.set_float(layer.canvasToLayer(touch.x, touch.y, false));
			else
				ret.set_float(0);
		}
	};
	Exps.prototype.AbsoluteX = function (ret)
	{
		if (this.touches.length)
			ret.set_float(this.touches[0].x);
		else
			ret.set_float(0);
	};
	Exps.prototype.AbsoluteXAt = function (ret, index)
	{
		index = Math.floor(index);
		if (index < 0 || index >= this.touches.length)
		{
			ret.set_float(0);
			return;
		}
		ret.set_float(this.touches[index].x);
	};
	Exps.prototype.AbsoluteXForID = function (ret, id)
	{
		var index = this.findTouch(id);
		if (index < 0)
		{
			ret.set_float(0);
			return;
		}
		var touch = this.touches[index];
		ret.set_float(touch.x);
	};
	Exps.prototype.AbsoluteY = function (ret)
	{
		if (this.touches.length)
			ret.set_float(this.touches[0].y);
		else
			ret.set_float(0);
	};
	Exps.prototype.AbsoluteYAt = function (ret, index)
	{
		index = Math.floor(index);
		if (index < 0 || index >= this.touches.length)
		{
			ret.set_float(0);
			return;
		}
		ret.set_float(this.touches[index].y);
	};
	Exps.prototype.AbsoluteYForID = function (ret, id)
	{
		var index = this.findTouch(id);
		if (index < 0)
		{
			ret.set_float(0);
			return;
		}
		var touch = this.touches[index];
		ret.set_float(touch.y);
	};
	Exps.prototype.SpeedAt = function (ret, index)
	{
		index = Math.floor(index);
		if (index < 0 || index >= this.touches.length)
		{
			ret.set_float(0);
			return;
		}
		var t = this.touches[index];
		var dist = cr.distanceTo(t.x, t.y, t.lastx, t.lasty);
		var timediff = (t.time - t.lasttime) / 1000;
		if (timediff === 0)
			ret.set_float(0);
		else
			ret.set_float(dist / timediff);
	};
	Exps.prototype.SpeedForID = function (ret, id)
	{
		var index = this.findTouch(id);
		if (index < 0)
		{
			ret.set_float(0);
			return;
		}
		var touch = this.touches[index];
		var dist = cr.distanceTo(touch.x, touch.y, touch.lastx, touch.lasty);
		var timediff = (touch.time - touch.lasttime) / 1000;
		if (timediff === 0)
			ret.set_float(0);
		else
			ret.set_float(dist / timediff);
	};
	Exps.prototype.AngleAt = function (ret, index)
	{
		index = Math.floor(index);
		if (index < 0 || index >= this.touches.length)
		{
			ret.set_float(0);
			return;
		}
		var t = this.touches[index];
		ret.set_float(cr.to_degrees(cr.angleTo(t.lastx, t.lasty, t.x, t.y)));
	};
	Exps.prototype.AngleForID = function (ret, id)
	{
		var index = this.findTouch(id);
		if (index < 0)
		{
			ret.set_float(0);
			return;
		}
		var touch = this.touches[index];
		ret.set_float(cr.to_degrees(cr.angleTo(touch.lastx, touch.lasty, touch.x, touch.y)));
	};
	Exps.prototype.Alpha = function (ret)
	{
		ret.set_float(this.getAlpha());
	};
	Exps.prototype.Beta = function (ret)
	{
		ret.set_float(this.getBeta());
	};
	Exps.prototype.Gamma = function (ret)
	{
		ret.set_float(this.getGamma());
	};
	Exps.prototype.AccelerationXWithG = function (ret)
	{
		ret.set_float(this.acc_g_x);
	};
	Exps.prototype.AccelerationYWithG = function (ret)
	{
		ret.set_float(this.acc_g_y);
	};
	Exps.prototype.AccelerationZWithG = function (ret)
	{
		ret.set_float(this.acc_g_z);
	};
	Exps.prototype.AccelerationX = function (ret)
	{
		ret.set_float(this.acc_x);
	};
	Exps.prototype.AccelerationY = function (ret)
	{
		ret.set_float(this.acc_y);
	};
	Exps.prototype.AccelerationZ = function (ret)
	{
		ret.set_float(this.acc_z);
	};
	Exps.prototype.TouchIndex = function (ret)
	{
		ret.set_int(this.trigger_index);
	};
	Exps.prototype.TouchID = function (ret)
	{
		ret.set_float(this.trigger_id);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.WebStorage = function(runtime)
{
	this.runtime = runtime;
};
(function()
{
	var pluginProto = cr.plugins_.WebStorage.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	var prefix = "";
	var is_arcade = (typeof window["is_scirra_arcade"] !== "undefined");
	if (is_arcade)
		prefix = "arcade" + window["scirra_arcade_id"];
	var logged_sessionnotsupported = false;
	function LogSessionNotSupported()
	{
		if (logged_sessionnotsupported)
			return;
		cr.logexport("[Construct 2] Webstorage plugin: session storage is not supported on this platform. Try using local storage or global variables instead.");
		logged_sessionnotsupported = true;
	};
	instanceProto.onCreate = function()
	{
	};
	function Cnds() {};
	Cnds.prototype.LocalStorageEnabled = function()
	{
		return true;
	};
	Cnds.prototype.SessionStorageEnabled = function()
	{
		return true;
	};
	Cnds.prototype.LocalStorageExists = function(key)
	{
		return localStorage.getItem(prefix + key) != null;
	};
	Cnds.prototype.SessionStorageExists = function(key)
	{
		if (this.runtime.isCocoonJs || !sessionStorage)
		{
			LogSessionNotSupported();
			return false;
		}
		return sessionStorage.getItem(prefix + key) != null;
	};
	Cnds.prototype.OnQuotaExceeded = function ()
	{
		return true;
	};
	Cnds.prototype.CompareKeyText = function (key, text_to_compare, case_sensitive)
	{
		var value = localStorage.getItem(prefix + key) || "";
		if (case_sensitive)
			return value == text_to_compare;
		else
			return cr.equals_nocase(value, text_to_compare);
	};
	Cnds.prototype.CompareKeyNumber = function (key, cmp, x)
	{
		var value = localStorage.getItem(prefix + key) || "";
		return cr.do_cmp(parseFloat(value), cmp, x);
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.StoreLocal = function(key, data)
	{
        console.log(key+","+data);
		try {
			localStorage.setItem(prefix + key, data);
		}
		catch (e)
		{
			this.runtime.trigger(cr.plugins_.WebStorage.prototype.cnds.OnQuotaExceeded, this);
		}
	};
	Acts.prototype.StoreSession = function(key,data)
	{
		if (this.runtime.isCocoonJs || !sessionStorage)
		{
			LogSessionNotSupported();
			return;
		}
		try {
			sessionStorage.setItem(prefix + key, data);
		}
		catch (e)
		{
			this.runtime.trigger(cr.plugins_.WebStorage.prototype.cnds.OnQuotaExceeded, this);
		}
	};
	Acts.prototype.RemoveLocal = function(key)
	{
		localStorage.removeItem(prefix + key);
	};
	Acts.prototype.RemoveSession = function(key)
	{
		if (this.runtime.isCocoonJs || !sessionStorage)
		{
			LogSessionNotSupported();
			return;
		}
		sessionStorage.removeItem(prefix + key);
	};
	Acts.prototype.ClearLocal = function()
	{
		if (!is_arcade)
			localStorage.clear();
	};
	Acts.prototype.ClearSession = function()
	{
		if (this.runtime.isCocoonJs || !sessionStorage)
		{
			LogSessionNotSupported();
			return;
		}
		if (!is_arcade)
			sessionStorage.clear();
	};
	Acts.prototype.JSONLoad = function (json_, mode_)
	{
		var d;
		try {
			d = JSON.parse(json_);
		}
		catch(e) { return; }
		if (!d["c2dictionary"])			// presumably not a c2dictionary object
			return;
		var o = d["data"];
		if (mode_ === 0 && !is_arcade)	// 'set' mode: must clear webstorage first
			localStorage.clear();
		var p;
		for (p in o)
		{
			if (o.hasOwnProperty(p))
			{
				try {
					localStorage.setItem(prefix + p, o[p]);
				}
				catch (e)
				{
					this.runtime.trigger(cr.plugins_.WebStorage.prototype.cnds.OnQuotaExceeded, this);
					return;
				}
			}
		}
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.LocalValue = function(ret,key)
	{
		ret.set_string(localStorage.getItem(prefix + key) || "");
	};
	Exps.prototype.SessionValue = function(ret,key)
	{
		if (this.runtime.isCocoonJs || !sessionStorage)
		{
			LogSessionNotSupported();
			ret.set_string("");
			return;
		}
		ret.set_string(sessionStorage.getItem(prefix + key) || "");
	};
	Exps.prototype.LocalCount = function(ret)
	{
		ret.set_int(is_arcade ? 0 : localStorage.length);
	};
	Exps.prototype.SessionCount = function(ret)
	{
		if (this.runtime.isCocoonJs || !sessionStorage)
		{
			LogSessionNotSupported();
			ret.set_int(0);
			return;
		}
		ret.set_int(is_arcade ? 0 : sessionStorage.length);
	};
	Exps.prototype.LocalAt = function(ret,n)
	{
		if (is_arcade)
			ret.set_string("");
		else
			ret.set_string(localStorage.getItem(localStorage.key(n)) || "");
	};
	Exps.prototype.SessionAt = function(ret,n)
	{
		if (this.runtime.isCocoonJs || !sessionStorage)
		{
			LogSessionNotSupported();
			ret.set_string("");
			return;
		}
		if (is_arcade)
			ret.set_string("");
		else
			ret.set_string(sessionStorage.getItem(sessionStorage.key(n)) || "");
	};
	Exps.prototype.LocalKeyAt = function(ret,n)
	{
		if (is_arcade)
			ret.set_string("");
		else
			ret.set_string(localStorage.key(n) || "");
	};
	Exps.prototype.SessionKeyAt = function(ret,n)
	{
		if (this.runtime.isCocoonJs || !sessionStorage)
		{
			LogSessionNotSupported();
			ret.set_string("");
			return;
		}
		if (is_arcade)
			ret.set_string("");
		else
			ret.set_string(sessionStorage.key(n) || "");
	};
	Exps.prototype.AsJSON = function (ret)
	{
		var o = {}, i, len, k;
		for (i = 0, len = localStorage.length; i < len; i++)
		{
			k = localStorage.key(i);
			if (is_arcade)
			{
				if (k.substr(0, prefix.length) === prefix)
				{
					o[k.substr(prefix.length)] = localStorage.getItem(k);
				}
			}
			else
				o[k] = localStorage.getItem(k);
		}
		ret.set_string(JSON.stringify({
			"c2dictionary": true,
			"data": o
		}));
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.behaviors.Anchor = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var behaviorProto = cr.behaviors.Anchor.prototype;
	behaviorProto.Type = function(behavior, objtype)
	{
		this.behavior = behavior;
		this.objtype = objtype;
		this.runtime = behavior.runtime;
	};
	var behtypeProto = behaviorProto.Type.prototype;
	behtypeProto.onCreate = function()
	{
	};
	behaviorProto.Instance = function(type, inst)
	{
		this.type = type;
		this.behavior = type.behavior;
		this.inst = inst;				// associated object instance to modify
		this.runtime = type.runtime;
	};
	var behinstProto = behaviorProto.Instance.prototype;
	behinstProto.onCreate = function()
	{
		this.anch_left = this.properties[0];		// 0 = left, 1 = right
		this.anch_top = this.properties[1];			// 0 = top, 1 = bottom
		this.anch_right = this.properties[2];		// 0 = none, 1 = right
		this.anch_bottom = this.properties[3];		// 0 = none, 1 = bottom
		this.inst.update_bbox();
		this.xleft = this.inst.bbox.left;
		this.ytop = this.inst.bbox.top;
		this.xright = this.runtime.original_width - this.inst.bbox.left;
		this.ybottom = this.runtime.original_height - this.inst.bbox.top;
		this.rdiff = this.runtime.original_width - this.inst.bbox.right;
		this.bdiff = this.runtime.original_height - this.inst.bbox.bottom;
		this.enabled = (this.properties[4] !== 0);
	};
	behinstProto.saveToJSON = function ()
	{
		return {
			"xleft": this.xleft,
			"ytop": this.ytop,
			"xright": this.xright,
			"ybottom": this.ybottom,
			"rdiff": this.rdiff,
			"bdiff": this.bdiff,
			"enabled": this.enabled
		};
	};
	behinstProto.loadFromJSON = function (o)
	{
		this.xleft = o["xleft"];
		this.ytop = o["ytop"];
		this.xright = o["xright"];
		this.ybottom = o["ybottom"];
		this.rdiff = o["rdiff"];
		this.bdiff = o["bdiff"];
		this.enabled = o["enabled"];
	};
	behinstProto.tick = function ()
	{
		if (!this.enabled)
			return;
		var n;
		var layer = this.inst.layer;
		var inst = this.inst;
		var bbox = this.inst.bbox;
		if (this.anch_left === 0)
		{
			inst.update_bbox();
			n = (layer.viewLeft + this.xleft) - bbox.left;
			if (n !== 0)
			{
				inst.x += n;
				inst.set_bbox_changed();
			}
		}
		else if (this.anch_left === 1)
		{
			inst.update_bbox();
			n = (layer.viewRight - this.xright) - bbox.left;
			if (n !== 0)
			{
				inst.x += n;
				inst.set_bbox_changed();
			}
		}
		if (this.anch_top === 0)
		{
			inst.update_bbox();
			n = (layer.viewTop + this.ytop) - bbox.top;
			if (n !== 0)
			{
				inst.y += n;
				inst.set_bbox_changed();
			}
		}
		else if (this.anch_top === 1)
		{
			inst.update_bbox();
			n = (layer.viewBottom - this.ybottom) - bbox.top;
			if (n !== 0)
			{
				inst.y += n;
				inst.set_bbox_changed();
			}
		}
		if (this.anch_right === 1)
		{
			inst.update_bbox();
			n = (layer.viewRight - this.rdiff) - bbox.right;
			if (n !== 0)
			{
				inst.width += n;
				if (inst.width < 0)
					inst.width = 0;
				inst.set_bbox_changed();
			}
		}
		if (this.anch_bottom === 1)
		{
			inst.update_bbox();
			n = (layer.viewBottom - this.bdiff) - bbox.bottom;
			if (n !== 0)
			{
				inst.height += n;
				if (inst.height < 0)
					inst.height = 0;
				inst.set_bbox_changed();
			}
		}
	};
	function Cnds() {};
	behaviorProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.SetEnabled = function (e)
	{
		if (this.enabled && e === 0)
			this.enabled = false;
		else if (!this.enabled && e !== 0)
		{
			this.inst.update_bbox();
			this.xleft = this.inst.bbox.left;
			this.ytop = this.inst.bbox.top;
			this.xright = this.runtime.original_width - this.inst.bbox.left;
			this.ybottom = this.runtime.original_height - this.inst.bbox.top;
			this.rdiff = this.runtime.original_width - this.inst.bbox.right;
			this.bdiff = this.runtime.original_height - this.inst.bbox.bottom;
			this.enabled = true;
		}
	};
	behaviorProto.acts = new Acts();
	function Exps() {};
	behaviorProto.exps = new Exps();
}());
;
;
cr.behaviors.Pin = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var behaviorProto = cr.behaviors.Pin.prototype;
	behaviorProto.Type = function(behavior, objtype)
	{
		this.behavior = behavior;
		this.objtype = objtype;
		this.runtime = behavior.runtime;
	};
	var behtypeProto = behaviorProto.Type.prototype;
	behtypeProto.onCreate = function()
	{
	};
	behaviorProto.Instance = function(type, inst)
	{
		this.type = type;
		this.behavior = type.behavior;
		this.inst = inst;				// associated object instance to modify
		this.runtime = type.runtime;
	};
	var behinstProto = behaviorProto.Instance.prototype;
	behinstProto.onCreate = function()
	{
		this.pinObject = null;
		this.pinObjectUid = -1;		// for loading
		this.pinAngle = 0;
		this.pinDist = 0;
		this.myStartAngle = 0;
		this.theirStartAngle = 0;
		this.lastKnownAngle = 0;
		this.mode = 0;				// 0 = position & angle; 1 = position; 2 = angle; 3 = rope; 4 = bar
		var self = this;
		if (!this.recycled)
		{
			this.myDestroyCallback = (function(inst) {
													self.onInstanceDestroyed(inst);
												});
		}
		this.runtime.addDestroyCallback(this.myDestroyCallback);
	};
	behinstProto.saveToJSON = function ()
	{
		return {
			"uid": this.pinObject ? this.pinObject.uid : -1,
			"pa": this.pinAngle,
			"pd": this.pinDist,
			"msa": this.myStartAngle,
			"tsa": this.theirStartAngle,
			"lka": this.lastKnownAngle,
			"m": this.mode
		};
	};
	behinstProto.loadFromJSON = function (o)
	{
		this.pinObjectUid = o["uid"];		// wait until afterLoad to look up
		this.pinAngle = o["pa"];
		this.pinDist = o["pd"];
		this.myStartAngle = o["msa"];
		this.theirStartAngle = o["tsa"];
		this.lastKnownAngle = o["lka"];
		this.mode = o["m"];
	};
	behinstProto.afterLoad = function ()
	{
		if (this.pinObjectUid === -1)
			this.pinObject = null;
		else
		{
			this.pinObject = this.runtime.getObjectByUID(this.pinObjectUid);
;
		}
		this.pinObjectUid = -1;
	};
	behinstProto.onInstanceDestroyed = function (inst)
	{
		if (this.pinObject == inst)
			this.pinObject = null;
	};
	behinstProto.onDestroy = function()
	{
		this.pinObject = null;
		this.runtime.removeDestroyCallback(this.myDestroyCallback);
	};
	behinstProto.tick = function ()
	{
	};
	behinstProto.tick2 = function ()
	{
		if (!this.pinObject)
			return;
		if (this.lastKnownAngle !== this.inst.angle)
			this.myStartAngle = cr.clamp_angle(this.myStartAngle + (this.inst.angle - this.lastKnownAngle));
		var newx = this.inst.x;
		var newy = this.inst.y;
		if (this.mode === 3 || this.mode === 4)		// rope mode or bar mode
		{
			var dist = cr.distanceTo(this.inst.x, this.inst.y, this.pinObject.x, this.pinObject.y);
			if ((dist > this.pinDist) || (this.mode === 4 && dist < this.pinDist))
			{
				var a = cr.angleTo(this.pinObject.x, this.pinObject.y, this.inst.x, this.inst.y);
				newx = this.pinObject.x + Math.cos(a) * this.pinDist;
				newy = this.pinObject.y + Math.sin(a) * this.pinDist;
			}
		}
		else
		{
			newx = this.pinObject.x + Math.cos(this.pinObject.angle + this.pinAngle) * this.pinDist;
			newy = this.pinObject.y + Math.sin(this.pinObject.angle + this.pinAngle) * this.pinDist;
		}
		var newangle = cr.clamp_angle(this.myStartAngle + (this.pinObject.angle - this.theirStartAngle));
		this.lastKnownAngle = newangle;
		if ((this.mode === 0 || this.mode === 1 || this.mode === 3 || this.mode === 4)
			&& (this.inst.x !== newx || this.inst.y !== newy))
		{
			this.inst.x = newx;
			this.inst.y = newy;
			this.inst.set_bbox_changed();
		}
		if ((this.mode === 0 || this.mode === 2) && (this.inst.angle !== newangle))
		{
			this.inst.angle = newangle;
			this.inst.set_bbox_changed();
		}
	};
	function Cnds() {};
	Cnds.prototype.IsPinned = function ()
	{
		return !!this.pinObject;
	};
	behaviorProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.Pin = function (obj, mode_)
	{
		if (!obj)
			return;
		var otherinst = obj.getFirstPicked(this.inst);
		if (!otherinst)
			return;
		this.pinObject = otherinst;
		this.pinAngle = cr.angleTo(otherinst.x, otherinst.y, this.inst.x, this.inst.y) - otherinst.angle;
		this.pinDist = cr.distanceTo(otherinst.x, otherinst.y, this.inst.x, this.inst.y);
		this.myStartAngle = this.inst.angle;
		this.lastKnownAngle = this.inst.angle;
		this.theirStartAngle = otherinst.angle;
		this.mode = mode_;
	};
	Acts.prototype.Unpin = function ()
	{
		this.pinObject = null;
	};
	behaviorProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.PinnedUID = function (ret)
	{
		ret.set_int(this.pinObject ? this.pinObject.uid : -1);
	};
	behaviorProto.exps = new Exps();
}());
cr.getProjectModel = function() { return [
	null,
	"PreloaderScreen",
	[
	[
		cr.plugins_.Function,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.Keyboard,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.HTML_Div_Pode,
		false,
		true,
		true,
		true,
		true,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.Softgames,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.SpilApiPlugin,
		true,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.Sprite,
		false,
		true,
		true,
		true,
		true,
		true,
		true,
		true,
		false
	]
,	[
		cr.plugins_.Spritefont2,
		false,
		true,
		true,
		true,
		true,
		true,
		true,
		true,
		true
	]
,	[
		cr.plugins_.Text,
		false,
		true,
		true,
		true,
		true,
		true,
		true,
		true,
		false
	]
,	[
		cr.plugins_.Audio,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.Browser,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.TiledBg,
		false,
		true,
		true,
		true,
		true,
		true,
		true,
		true,
		true
	]
,	[
		cr.plugins_.Touch,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.WebStorage,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
	],
	[
	[
		"t0",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			10,
			true,
			1,
			0,
			false,
			395609434606686,
			[
				["images/craigen-sheet0.png", 1456577, 1572, 1348, 170, 213, 1, 0.388235, 0.948357,[],[],0],
				["images/craigen-sheet0.png", 1456577, 1129, 1438, 169, 213, 1, 0.378698, 0.948357,[],[],0],
				["images/craigen-sheet0.png", 1456577, 172, 1488, 168, 213, 1, 0.375, 0.948357,[],[],0],
				["images/craigen-sheet0.png", 1456577, 1867, 1571, 166, 212, 1, 0.36747, 0.948113,[],[],0],
				["images/craigen-sheet0.png", 1456577, 1470, 1562, 167, 213, 1, 0.371257, 0.948357,[],[],0],
				["images/craigen-sheet0.png", 1456577, 523, 1504, 168, 213, 1, 0.375, 0.948357,[],[],0],
				["images/craigen-sheet0.png", 1456577, 898, 1441, 169, 213, 1, 0.378698, 0.948357,[],[],0]
			]
			]
,			[
			"Attack_1",
			15,
			false,
			1,
			0,
			false,
			6874578157650217,
			[
				["images/craigen-sheet0.png", 1456577, 1743, 1357, 170, 213, 1, 0.4, 0.957747,[],[],0],
				["images/craigen-sheet0.png", 1456577, 1221, 1226, 174, 211, 1, 0.5, 0.957346,[],[],0],
				["images/craigen-sheet0.png", 1456577, 1396, 1242, 175, 208, 1, 0.588571, 0.956731,[],[],0],
				["images/craigen-sheet0.png", 1456577, 193, 1067, 185, 205, 1, 0.648649, 0.956098,[],[],0],
				["images/craigen-sheet0.png", 1456577, 1, 1009, 191, 205, 1, 0.554974, 0.956098,[],[],0],
				["images/craigen-sheet0.png", 1456577, 1611, 926, 213, 206, 1, 0.455399, 0.956311,[],[],0],
				["images/craigen-sheet0.png", 1456577, 885, 782, 234, 206, 1, 0.376068, 0.956311,[],[],0],
				["images/craigen-sheet0.png", 1456577, 1160, 599, 254, 207, 1, 0.311024, 0.956522,[],[],0],
				["images/craigen-sheet0.png", 1456577, 191, 363, 275, 207, 1, 0.254545, 0.956522,[],[],0],
				["images/craigen-sheet0.png", 1456577, 1745, 1, 296, 208, 1, 0.206081, 0.956731,[],[],0],
				["images/craigen-sheet0.png", 1456577, 906, 571, 253, 210, 1, 0.241107, 0.957143,[],[],0],
				["images/craigen-sheet0.png", 1456577, 1120, 807, 209, 212, 1, 0.291866, 0.957547,[],[],0]
			]
			]
,			[
			"Attack_2",
			15,
			false,
			1,
			0,
			false,
			4789833837382057,
			[
				["images/craigen-sheet0.png", 1456577, 352, 1386, 170, 213, 1, 0.405882, 0.962441,[],[],0],
				["images/craigen-sheet0.png", 1456577, 1825, 926, 200, 219, 1, 0.3, 0.968037,[],[],0],
				["images/craigen-sheet0.png", 1456577, 1670, 688, 211, 237, 1, 0.279621, 0.970464,[],[],0],
				["images/craigen-sheet0.png", 1456577, 482, 633, 156, 323, 1, 0.615385, 0.981424,[],[],0],
				["images/craigen-sheet0.png", 1456577, 679, 363, 226, 245, 1, 0.712389, 0.979592,[],[],0],
				["images/craigen-sheet0.png", 1456577, 679, 609, 205, 246, 1, 0.717073, 0.979675,[],[],0],
				["images/craigen-sheet0.png", 1456577, 1901, 421, 142, 313, 1, 0.471831, 0.984026,[],[],0],
				["images/craigen-sheet0.png", 1456577, 1272, 1, 209, 317, 1, 0.334928, 0.984227,[],[],0],
				["images/craigen-sheet0.png", 1456577, 1, 1, 290, 245, 1, 0.268966, 0.979592,[],[],0],
				["images/craigen-sheet0.png", 1456577, 1482, 1, 262, 238, 1, 0.274809, 0.97479,[],[],0],
				["images/craigen-sheet0.png", 1456577, 1, 571, 233, 230, 1, 0.296137, 0.969565,[],[],0],
				["images/craigen-sheet0.png", 1456577, 221, 845, 200, 221, 1, 0.33, 0.968326,[],[],0]
			]
			]
,			[
			"Attack_3",
			15,
			false,
			1,
			0,
			false,
			9524133322864073,
			[
				["images/craigen-sheet0.png", 1456577, 1, 1422, 170, 213, 1, 0.405882, 0.953052,[],[],0],
				["images/craigen-sheet0.png", 1456577, 1299, 1451, 170, 211, 1, 0.594118, 0.952607,[],[],0],
				["images/craigen-sheet0.png", 1456577, 1032, 1020, 188, 208, 1, 0.643617, 0.951923,[],[],0],
				["images/craigen-sheet0.png", 1456577, 1221, 1020, 187, 205, 1, 0.652406, 0.951219,[],[],0],
				["images/craigen-sheet0.png", 1456577, 1, 802, 219, 206, 1, 0.652968, 0.951456,[],[],0],
				["images/craigen-sheet0.png", 1456577, 906, 363, 267, 207, 1, 0.655431, 0.951691,[],[],0],
				["images/craigen-sheet0.png", 1456577, 1, 247, 189, 303, 1, 0.428571, 0.966997,[],[],0],
				["images/craigen-sheet0.png", 1456577, 1272, 319, 197, 279, 1, 0.370558, 0.964158,[],[],0],
				["images/craigen-sheet0.png", 1456577, 1745, 210, 278, 210, 1, 0.23741, 0.952381,[],[],0],
				["images/craigen-sheet0.png", 1456577, 235, 633, 246, 211, 1, 0.264228, 0.952607,[],[],0],
				["images/craigen-sheet0.png", 1456577, 422, 957, 189, 218, 1, 0.338624, 0.954128,[],[],0],
				["images/craigen-sheet0.png", 1456577, 1409, 1028, 179, 213, 1, 0.351955, 0.953052,[],[],0]
			]
			]
,			[
			"Block",
			15,
			false,
			1,
			0,
			false,
			25812117058518,
			[
				["images/craigen-sheet0.png", 1456577, 727, 1429, 170, 213, 1, 0.411765, 0.943662,[],[],0],
				["images/craigen-sheet0.png", 1456577, 1, 1636, 161, 210, 1, 0.409938, 0.942857,[],[],0],
				["images/craigen-sheet0.png", 1456577, 1068, 1652, 155, 207, 1, 0.445161, 0.942029,[],[],0],
				["images/craigen-sheet0.png", 1456577, 507, 1718, 146, 204, 1, 0.493151, 0.941176,[],[],0],
				["images/craigen-sheet0.png", 1456577, 1775, 1784, 137, 215, 1, 0.547445, 0.944186,[],[],0],
				["images/craigen-sheet0.png", 1456577, 1913, 1784, 132, 223, 1, 0.590909, 0.946188,[],[],0],
				["images/craigen-sheet0.png", 1456577, 163, 1702, 135, 227, 1, 0.592593, 0.947137,[],[],0],
				["images/craigen-sheet0.png", 1456577, 299, 1811, 132, 222, 1, 0.583333, 0.945946,[],[],0],
				["images/craigen-sheet0.png", 1456577, 1376, 1776, 141, 211, 1, 0.524823, 0.943128,[],[],0],
				["images/craigen-sheet0.png", 1456577, 1224, 1663, 151, 206, 1, 0.463576, 0.941748,[],[],0],
				["images/craigen-sheet0.png", 1456577, 692, 1643, 160, 210, 1, 0.41875, 0.942857,[],[],0]
			]
			]
,			[
			"Die",
			15,
			false,
			1,
			0,
			false,
			1960084165646041,
			[
				["images/craigen-sheet0.png", 1456577, 1638, 1728, 136, 219, 1, 0.507353, 0.949772,[],[],0],
				["images/craigen-sheet0.png", 1456577, 853, 1655, 147, 217, 1, 0.408163, 0.949309,[],[],0],
				["images/craigen-sheet0.png", 1456577, 341, 1600, 165, 210, 1, 0.430303, 0.952381,[],[],0],
				["images/craigen-sheet0.png", 1456577, 848, 989, 183, 221, 1, 0.491803, 0.954751,[],[],0],
				["images/craigen-sheet0.png", 1456577, 1415, 778, 195, 249, 1, 0.538462, 0.963855,[],[],0],
				["images/craigen-sheet0.png", 1456577, 1482, 240, 211, 273, 1, 0.535545, 0.970696,[],[],0],
				["images/craigen-sheet0.png", 1456577, 467, 363, 211, 269, 1, 0.511848, 0.97026,[],[],0],
				["images/craigen-sheet0.png", 1456577, 1694, 421, 206, 266, 1, 0.5, 0.969925,[],[],0],
				["images/craigen-sheet0.png", 1456577, 1470, 514, 199, 263, 1, 0.492462, 0.969582,[],[],0],
				["images/craigen-sheet0.png", 1456577, 639, 856, 208, 212, 1, 0.471154, 0.962264,[],[],0],
				["images/craigen-sheet0.png", 1456577, 1638, 1571, 228, 156, 1, 0.482456, 0.948718,[],[],0],
				["images/craigen-sheet0.png", 1456577, 1001, 1870, 247, 106, 1, 0.489879, 0.924528,[],[],0],
				["images/craigen-sheet0.png", 1456577, 654, 1873, 259, 84, 1, 0.494208, 0.892857,[],[],0]
			]
			]
,			[
			"Victory",
			5,
			false,
			1,
			0,
			false,
			7815844650921826,
			[
				["images/craigen-sheet0.png", 1456577, 292, 1, 195, 361, 1, 0.507692, 0.975069,[],[],0],
				["images/craigen-sheet0.png", 1456577, 488, 1, 195, 361, 1, 0.507692, 0.975069,[],[],0],
				["images/craigen-sheet0.png", 1456577, 684, 1, 195, 361, 1, 0.507692, 0.975069,[],[],0],
				["images/craigen-sheet0.png", 1456577, 880, 1, 195, 361, 1, 0.507692, 0.975069,[],[],0],
				["images/craigen-sheet0.png", 1456577, 1076, 1, 195, 361, 1, 0.507692, 0.975069,[],[],0]
			]
			]
,			[
			"Move",
			15,
			true,
			1,
			0,
			false,
			3948796730075265,
			[
				["images/craigen-sheet0.png", 1456577, 181, 1273, 170, 214, 1, 0.394118, 0.948598,[],[],0],
				["images/craigen-sheet0.png", 1456577, 557, 1288, 169, 215, 1, 0.378698, 0.948837,[],[],0],
				["images/craigen-sheet0.png", 1456577, 784, 1211, 170, 217, 1, 0.364706, 0.949309,[],[],0],
				["images/craigen-sheet0.png", 1456577, 612, 1069, 171, 218, 1, 0.350877, 0.949541,[],[],0],
				["images/craigen-sheet0.png", 1456577, 1589, 1133, 174, 214, 1, 0.350575, 0.948598,[],[],0],
				["images/craigen-sheet0.png", 1456577, 1764, 1146, 177, 210, 1, 0.350282, 0.947619,[],[],0],
				["images/craigen-sheet0.png", 1456577, 1, 1215, 179, 206, 1, 0.351955, 0.946602,[],[],0],
				["images/craigen-sheet0.png", 1456577, 379, 1176, 177, 209, 1, 0.367232, 0.947368,[],[],0],
				["images/craigen-sheet0.png", 1456577, 955, 1229, 173, 211, 1, 0.381503, 0.947867,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		4759189771541414,
		[]
	]
,	[
		"t1",
		cr.plugins_.Sprite,
		false,
		[7613650602025349,7596307177686458,6538994869587576,2956437823729678,2601925573594676,1287007675851202,4434124633299555,9904151470900652,5935432685672792,7564520619801652,6788973999969782,3333554007344936,5319909183900203],
		0,
		0,
		null,
		[
			[
			"Default",
			10,
			true,
			1,
			0,
			false,
			6173290844137908,
			[
				["images/eric-sheet0.png", 459536, 815, 701, 200, 202, 1, 0.725, 0.950495,[],[],0],
				["images/eric-sheet0.png", 459536, 609, 667, 205, 198, 1, 0.707317, 0.949495,[],[],0],
				["images/eric-sheet1.png", 475661, 611, 1, 205, 193, 1, 0.687805, 0.948187,[],[],0],
				["images/eric-sheet1.png", 475661, 1, 201, 202, 189, 1, 0.663366, 0.94709,[],[],0],
				["images/eric-sheet1.png", 475661, 611, 195, 204, 192, 1, 0.681373, 0.947917,[],[],0],
				["images/eric-sheet1.png", 475661, 405, 1, 205, 196, 1, 0.697561, 0.94898,[],[],0],
				["images/eric-sheet1.png", 475661, 1, 1, 203, 199, 1, 0.714286, 0.949749,[],[],0]
			]
			]
,			[
			"Attack_1",
			15,
			false,
			1,
			0,
			false,
			3504594773978997,
			[
				["images/eric-sheet1.png", 475661, 205, 1, 199, 202, 1, 0.718593, 0.960396,[],[],0],
				["images/eric-sheet1.png", 475661, 138, 664, 155, 212, 1, 0.696774, 0.962264,[],[],0],
				["images/eric-sheet2.png", 178255, 439, 1, 102, 252, 1, 0.598039, 0.968254,[],[],0],
				["images/eric-sheet1.png", 475661, 896, 421, 107, 275, 1, 0.607477, 0.970909,[],[],0],
				["images/eric-sheet1.png", 475661, 586, 388, 134, 280, 1, 0.492537, 0.971429,[],[],0],
				["images/eric-sheet0.png", 459536, 806, 1, 173, 265, 1, 0.791907, 0.969811,[],[],0],
				["images/eric-sheet0.png", 459536, 282, 1, 278, 188, 1, 0.83813, 0.957447,[],[],0],
				["images/eric-sheet0.png", 459536, 282, 190, 251, 194, 1, 0.808765, 0.958763,[],[],0],
				["images/eric-sheet0.png", 459536, 225, 385, 213, 200, 1, 0.769953, 0.96,[],[],0],
				["images/eric-sheet0.png", 459536, 641, 465, 205, 201, 1, 0.75122, 0.960199,[],[],0]
			]
			]
,			[
			"Attack_2",
			15,
			false,
			1,
			0,
			false,
			6613600907343266,
			[
				["images/eric-sheet0.png", 459536, 409, 614, 199, 205, 1, 0.718593, 0.951219,[],[],0],
				["images/eric-sheet1.png", 475661, 294, 801, 152, 203, 1, 0.565789, 0.950739,[],[],0],
				["images/eric-sheet1.png", 475661, 1, 596, 136, 245, 1, 0.441176, 0.959184,[],[],0],
				["images/eric-sheet2.png", 178255, 1, 1, 129, 240, 1, 0.341085, 0.958333,[],[],0],
				["images/eric-sheet1.png", 475661, 183, 418, 146, 245, 1, 0.5, 0.959184,[],[],0],
				["images/eric-sheet0.png", 459536, 847, 465, 174, 235, 1, 0.637931, 0.957447,[],[],0],
				["images/eric-sheet0.png", 459536, 749, 267, 219, 197, 1, 0.730594, 0.949239,[],[],0],
				["images/eric-sheet0.png", 459536, 1, 1, 280, 197, 1, 0.8, 0.949239,[],[],0],
				["images/eric-sheet0.png", 459536, 561, 1, 244, 200, 1, 0.795082, 0.95,[],[],0],
				["images/eric-sheet0.png", 459536, 534, 202, 214, 203, 1, 0.761682, 0.950739,[],[],0],
				["images/eric-sheet0.png", 459536, 1, 404, 206, 204, 1, 0.742718, 0.95098,[],[],0]
			]
			]
,			[
			"Block",
			15,
			false,
			1,
			0,
			false,
			5871777185061127,
			[
				["images/eric-sheet0.png", 459536, 1, 199, 223, 204, 1, 0.699552, 0.955882,[],[],0],
				["images/eric-sheet1.png", 475661, 721, 421, 167, 203, 1, 0.676647, 0.955665,[],[],0],
				["images/eric-sheet2.png", 178255, 669, 1, 117, 208, 1, 0.487179, 0.956731,[],[],0],
				["images/eric-sheet2.png", 178255, 904, 1, 115, 208, 1, 0.486957, 0.956731,[],[],0],
				["images/eric-sheet2.png", 178255, 787, 1, 116, 207, 1, 0.491379, 0.956522,[],[],0],
				["images/eric-sheet2.png", 178255, 131, 176, 116, 205, 1, 0.491379, 0.956098,[],[],0],
				["images/eric-sheet2.png", 178255, 248, 205, 116, 204, 1, 0.482759, 0.955882,[],[],0],
				["images/eric-sheet2.png", 178255, 542, 205, 113, 200, 1, 0.539823, 0.955,[],[],0],
				["images/eric-sheet2.png", 178255, 542, 1, 126, 203, 1, 0.571429, 0.955665,[],[],0],
				["images/eric-sheet2.png", 178255, 303, 1, 135, 203, 1, 0.607407, 0.955665,[],[],0],
				["images/eric-sheet1.png", 475661, 858, 815, 144, 204, 1, 0.638889, 0.955882,[],[],0],
				["images/eric-sheet1.png", 475661, 1, 391, 181, 204, 1, 0.712707, 0.955882,[],[],0]
			]
			]
,			[
			"Die",
			15,
			false,
			1,
			0,
			false,
			781114572926176,
			[
				["images/eric-sheet0.png", 459536, 208, 586, 200, 205, 1, 0.72, 0.956098,[],[],0],
				["images/eric-sheet1.png", 475661, 383, 416, 187, 194, 1, 0.775401, 0.953608,[],[],0],
				["images/eric-sheet1.png", 475661, 505, 669, 178, 183, 1, 0.820225, 0.95082,[],[],0],
				["images/eric-sheet2.png", 178255, 131, 1, 171, 174, 1, 0.871345, 0.931035,[],[],0],
				["images/eric-sheet1.png", 475661, 684, 815, 173, 174, 1, 0.872832, 0.931035,[],[],0],
				["images/eric-sheet1.png", 475661, 330, 611, 174, 189, 1, 0.873563, 0.857143,[],[],0],
				["images/eric-sheet1.png", 475661, 721, 625, 174, 189, 1, 0.873563, 0.857143,[],[],0],
				["images/eric-sheet1.png", 475661, 447, 853, 164, 160, 1, 0.926829, 0.83125,[],[],0],
				["images/eric-sheet0.png", 459536, 597, 866, 154, 147, 1, 0.987013, 0.816327,[],[],0],
				["images/eric-sheet1.png", 475661, 1, 877, 170, 129, 1, 1.04706, 0.790698,[],[],0],
				["images/eric-sheet0.png", 459536, 752, 904, 193, 113, 1, 1.0829, 0.699115,[],[],0]
			]
			]
,			[
			"Move",
			15,
			true,
			1,
			0,
			false,
			7157671556895229,
			[
				["images/eric-sheet0.png", 459536, 195, 792, 200, 202, 1, 0.73, 0.955446,[],[],0],
				["images/eric-sheet0.png", 459536, 439, 406, 201, 207, 1, 0.711443, 0.956522,[],[],0],
				["images/eric-sheet0.png", 459536, 1, 609, 193, 212, 1, 0.673575, 0.957547,[],[],0],
				["images/eric-sheet1.png", 475661, 405, 198, 180, 217, 1, 0.627778, 0.958525,[],[],0],
				["images/eric-sheet1.png", 475661, 204, 204, 178, 213, 1, 0.657303, 0.957747,[],[],0],
				["images/eric-sheet1.png", 475661, 816, 209, 178, 211, 1, 0.679775, 0.957346,[],[],0],
				["images/eric-sheet1.png", 475661, 817, 1, 190, 207, 1, 0.684211, 0.956522,[],[],0],
				["images/eric-sheet0.png", 459536, 1, 822, 192, 201, 1, 0.71875, 0.955224,[],[],0],
				["images/eric-sheet0.png", 459536, 396, 820, 200, 202, 1, 0.74, 0.955446,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		6030898926443446,
		[]
	]
,	[
		"t2",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6841812295110926,
			[
				["images/bgbottom-sheet0.png", 14575, 0, 0, 1012, 259, 1, 0.5, 0.50193,[],[-0.5,-0.50193,0.496047,-0.486486,0.496047,0.482626,-0.496047,0.482626],0]
			]
			]
		],
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			2332823150831307
		]
		],
		false,
		false,
		9515944012810394,
		[]
	]
,	[
		"t3",
		cr.plugins_.Sprite,
		false,
		[7613650602025349,7596307177686458,6538994869587576,2956437823729678,2601925573594676,1287007675851202,4434124633299555,9904151470900652,5935432685672792,7564520619801652,6788973999969782,3333554007344936,5319909183900203],
		0,
		0,
		null,
		[
			[
			"Default",
			10,
			true,
			1,
			0,
			false,
			669277172637691,
			[
				["images/fathans-sheet0.png", 1604098, 1, 934, 235, 231, 1, 0.719149, 0.95671,[],[],0],
				["images/fathans-sheet0.png", 1604098, 1491, 710, 238, 232, 1, 0.710084, 0.956897,[],[],0],
				["images/fathans-sheet0.png", 1604098, 242, 683, 239, 234, 1, 0.702929, 0.957265,[],[],0],
				["images/fathans-sheet0.png", 1604098, 1666, 474, 240, 235, 1, 0.691667, 0.957447,[],[],0],
				["images/fathans-sheet0.png", 1604098, 768, 463, 240, 237, 1, 0.683333, 0.957806,[],[],0],
				["images/fathans-sheet0.png", 1604098, 1, 465, 240, 236, 1, 0.691667, 0.957627,[],[],0],
				["images/fathans-sheet0.png", 1604098, 508, 537, 240, 234, 1, 0.7, 0.957265,[],[],0],
				["images/fathans-sheet0.png", 1604098, 1251, 690, 239, 233, 1, 0.707113, 0.957082,[],[],0],
				["images/fathans-sheet0.png", 1604098, 993, 725, 237, 232, 1, 0.71308, 0.956897,[],[],0]
			]
			]
,			[
			"Attack_1",
			15,
			false,
			1,
			0,
			false,
			5962330382628744,
			[
				["images/fathans-sheet0.png", 1604098, 961, 958, 232, 230, 1, 0.702586, 0.96087,[],[],0],
				["images/fathans-sheet0.png", 1604098, 1021, 231, 165, 250, 1, 0.521212, 0.964,[],[],0],
				["images/fathans-sheet0.png", 1604098, 1100, 1371, 168, 231, 1, 0.470238, 0.961039,[],[],0],
				["images/fathans-sheet0.png", 1604098, 913, 1189, 186, 236, 1, 0.387097, 0.961864,[],[],0],
				["images/fathans-sheet0.png", 1604098, 576, 231, 191, 305, 1, 0.575916, 0.970492,[],[],0],
				["images/fathans-sheet0.png", 1604098, 1192, 226, 225, 263, 1, 0.706667, 0.965779,[],[],0],
				["images/fathans-sheet0.png", 1604098, 317, 1, 304, 222, 1, 0.786184, 0.959459,[],[],0],
				["images/fathans-sheet0.png", 1604098, 1192, 1, 287, 224, 1, 0.780488, 0.959821,[],[],0],
				["images/fathans-sheet0.png", 1604098, 1480, 1, 270, 225, 1, 0.774074, 0.96,[],[],0],
				["images/fathans-sheet0.png", 1604098, 254, 455, 253, 227, 1, 0.766798, 0.960352,[],[],0],
				["images/fathans-sheet0.png", 1604098, 749, 701, 243, 229, 1, 0.736625, 0.960699,[],[],0]
			]
			]
,			[
			"Attack_2",
			15,
			false,
			1,
			0,
			false,
			6080761170677263,
			[
				["images/fathans-sheet0.png", 1604098, 1730, 940, 234, 231, 1, 0.705128, 0.95671,[],[],0],
				["images/fathans-sheet0.png", 1604098, 1418, 227, 256, 230, 1, 0.777344, 0.956522,[],[],0],
				["images/fathans-sheet0.png", 1604098, 908, 1, 283, 229, 1, 0.819788, 0.956332,[],[],0],
				["images/fathans-sheet0.png", 1604098, 1, 1, 315, 229, 1, 0.844444, 0.956332,[],[],0],
				["images/fathans-sheet0.png", 1604098, 622, 1, 285, 229, 1, 0.824561, 0.956332,[],[],0],
				["images/fathans-sheet0.png", 1604098, 317, 224, 258, 230, 1, 0.786822, 0.956522,[],[],0],
				["images/fathans-sheet0.png", 1604098, 482, 772, 238, 231, 1, 0.718487, 0.95671,[],[],0],
				["images/fathans-sheet0.png", 1604098, 1231, 924, 236, 231, 1, 0.711864, 0.95671,[],[],0]
			]
			]
,			[
			"Block",
			15,
			false,
			1,
			0,
			false,
			9535724209975656,
			[
				["images/fathans-sheet0.png", 1604098, 768, 231, 252, 231, 1, 0.68254, 0.961039,[],[],0],
				["images/fathans-sheet0.png", 1604098, 1702, 1172, 196, 232, 1, 0.653061, 0.961207,[],[],0],
				["images/fathans-sheet0.png", 1604098, 204, 1384, 152, 233, 1, 0.526316, 0.961373,[],[],0],
				["images/fathans-sheet0.png", 1604098, 1594, 1405, 122, 244, 1, 0.377049, 0.963115,[],[],0],
				["images/fathans-sheet0.png", 1604098, 1923, 238, 124, 241, 1, 0.379032, 0.962656,[],[],0],
				["images/fathans-sheet0.png", 1604098, 1899, 1172, 127, 237, 1, 0.385827, 0.962025,[],[],0],
				["images/fathans-sheet0.png", 1604098, 1465, 1386, 128, 233, 1, 0.390625, 0.961373,[],[],0],
				["images/fathans-sheet0.png", 1604098, 357, 1444, 122, 233, 1, 0.409836, 0.961373,[],[],0],
				["images/fathans-sheet0.png", 1604098, 1844, 1410, 124, 231, 1, 0.475806, 0.961039,[],[],0],
				["images/fathans-sheet0.png", 1604098, 1717, 1405, 126, 231, 1, 0.539683, 0.961039,[],[],0],
				["images/fathans-sheet0.png", 1604098, 644, 1380, 162, 231, 1, 0.62963, 0.961039,[],[],0],
				["images/fathans-sheet0.png", 1604098, 237, 1152, 201, 231, 1, 0.691542, 0.961039,[],[],0]
			]
			]
,			[
			"Die",
			15,
			false,
			1,
			0,
			false,
			4217480207283371,
			[
				["images/fathans-sheet0.png", 1604098, 1468, 943, 233, 231, 1, 0.695279, 0.95671,[],[],0],
				["images/fathans-sheet0.png", 1604098, 478, 1004, 222, 225, 1, 0.747748, 0.955556,[],[],0],
				["images/fathans-sheet0.png", 1604098, 701, 1160, 211, 219, 1, 0.805687, 0.954338,[],[],0],
				["images/fathans-sheet0.png", 1604098, 439, 1230, 204, 213, 1, 0.872549, 0.948357,[],[],0],
				["images/fathans-sheet0.png", 1604098, 1411, 1175, 211, 210, 1, 0.881517, 0.947619,[],[],0],
				["images/fathans-sheet0.png", 1604098, 1194, 1156, 216, 214, 1, 0.888889, 0.929907,[],[],0],
				["images/fathans-sheet0.png", 1604098, 1, 1166, 215, 212, 1, 0.893023, 0.929245,[],[],0],
				["images/fathans-sheet0.png", 1604098, 1, 1379, 202, 189, 1, 0.950495, 0.920635,[],[],0],
				["images/fathans-sheet0.png", 1604098, 1269, 1386, 195, 160, 1, 0.984615, 0.90625,[],[],0],
				["images/fathans-sheet0.png", 1604098, 807, 1556, 208, 135, 1, 1.02404, 0.814815,[],[],0],
				["images/fathans-sheet0.png", 1604098, 807, 1426, 225, 129, 1, 1.05333, 0.72093,[],[],0]
			]
			]
,			[
			"Move",
			15,
			true,
			1,
			0,
			false,
			9518438842400391,
			[
				["images/fathans-sheet0.png", 1604098, 242, 918, 235, 233, 1, 0.706383, 0.95279,[],[],0],
				["images/fathans-sheet0.png", 1604098, 1009, 490, 241, 234, 1, 0.713693, 0.952991,[],[],0],
				["images/fathans-sheet0.png", 1604098, 1675, 238, 247, 235, 1, 0.724696, 0.957447,[],[],0],
				["images/fathans-sheet0.png", 1604098, 1751, 1, 253, 236, 1, 0.731225, 0.961864,[],[],0],
				["images/fathans-sheet0.png", 1604098, 1, 231, 252, 233, 1, 0.702381, 0.961373,[],[],0],
				["images/fathans-sheet0.png", 1604098, 1418, 458, 247, 231, 1, 0.668016, 0.95671,[],[],0],
				["images/fathans-sheet0.png", 1604098, 721, 931, 239, 228, 1, 0.627615, 0.95614,[],[],0],
				["images/fathans-sheet0.png", 1604098, 1730, 710, 241, 229, 1, 0.655602, 0.956332,[],[],0],
				["images/fathans-sheet0.png", 1604098, 1, 702, 240, 231, 1, 0.683333, 0.952381,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		6849778829935659,
		[]
	]
,	[
		"t4",
		cr.plugins_.Sprite,
		false,
		[7613650602025349,7596307177686458,6538994869587576,2956437823729678,2601925573594676,1287007675851202,4434124633299555,9904151470900652,5935432685672792,7564520619801652,6788973999969782,3333554007344936,5319909183900203],
		0,
		0,
		null,
		[
			[
			"Default",
			10,
			true,
			1,
			0,
			false,
			5097129357699447,
			[
				["images/purimahsaar-sheet0.png", 1349551, 928, 481, 217, 210, 1, 0.668203, 0.966667,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 1525, 836, 212, 209, 1, 0.70283, 0.966507,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 219, 1189, 207, 207, 1, 0.7343, 0.966184,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 1681, 1252, 204, 206, 1, 0.754902, 0.961165,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 687, 1058, 211, 205, 1, 0.744076, 0.960976,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 1, 985, 217, 204, 1, 0.732719, 0.955882,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 873, 692, 223, 203, 1, 0.721973, 0.955665,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 1738, 836, 216, 205, 1, 0.736111, 0.956098,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 1107, 1250, 209, 205, 1, 0.746412, 0.960976,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 1317, 1255, 204, 206, 1, 0.75, 0.966019,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 1469, 1046, 211, 208, 1, 0.7109, 0.966346,[],[],0]
			]
			]
,			[
			"Attack_1",
			15,
			false,
			1,
			0,
			false,
			1955880716224451,
			[
				["images/purimahsaar-sheet0.png", 1349551, 1522, 1459, 180, 210, 1, 0.783333, 0.961905,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 1645, 1, 233, 209, 1, 0.793991, 0.961722,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 852, 196, 230, 208, 1, 0.669565, 0.961538,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 1637, 211, 230, 207, 1, 0.591304, 0.961353,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 1166, 1, 231, 215, 1, 0.532468, 0.962791,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 240, 193, 237, 202, 1, 0.700422, 0.955446,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 904, 1, 261, 194, 1, 0.777778, 0.948454,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 615, 1, 288, 188, 1, 0.815972, 0.941489,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 1, 1, 325, 183, 1, 0.843077, 0.934426,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 327, 1, 287, 191, 1, 0.836237, 0.947644,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 1398, 203, 238, 201, 1, 0.819328, 0.955224,[],[],0]
			]
			]
,			[
			"Attack_2",
			15,
			false,
			1,
			0,
			false,
			8450458502237058,
			[
				["images/purimahsaar-sheet0.png", 1349551, 1, 594, 217, 210, 1, 0.672811, 0.966667,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 450, 1187, 216, 199, 1, 0.787037, 0.959799,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 450, 999, 236, 187, 1, 0.826271, 0.951872,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 513, 823, 255, 175, 1, 0.839216, 0.948571,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 769, 896, 275, 161, 1, 0.850909, 0.956522,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 1, 813, 263, 171, 1, 0.844106, 0.953216,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 265, 813, 247, 182, 1, 0.834008, 0.950549,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 219, 996, 230, 192, 1, 0.817391, 0.953125,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 1365, 628, 226, 201, 1, 0.743363, 0.960199,[],[],0]
			]
			]
,			[
			"Block",
			15,
			false,
			1,
			0,
			false,
			5825920541406133,
			[
				["images/purimahsaar-sheet0.png", 1349551, 219, 602, 217, 210, 1, 0.672811, 0.961905,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 1097, 824, 213, 209, 1, 0.699531, 0.961722,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 1045, 1034, 211, 209, 1, 0.725118, 0.961722,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 1, 1190, 207, 207, 1, 0.753623, 0.961353,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 667, 1264, 203, 207, 1, 0.783251, 0.961353,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 209, 1397, 204, 205, 1, 0.794118, 0.960976,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 1257, 1040, 211, 209, 1, 0.781991, 0.961722,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 1, 1398, 204, 205, 1, 0.794118, 0.960976,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 427, 1387, 203, 207, 1, 0.783251, 0.961353,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 899, 1244, 207, 207, 1, 0.753623, 0.961353,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 1738, 1042, 211, 209, 1, 0.725118, 0.961722,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 1311, 830, 213, 209, 1, 0.699531, 0.961722,[],[],0]
			]
			]
,			[
			"Die",
			15,
			false,
			1,
			0,
			false,
			3884638015400774,
			[
				["images/purimahsaar-sheet0.png", 1349551, 1703, 1459, 177, 211, 1, 0.79096, 0.962085,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 1879, 1, 155, 242, 1, 0.516129, 0.966942,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 1083, 217, 180, 263, 1, 0.361111, 0.969582,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 871, 1452, 170, 239, 1, 0.264706, 0.966527,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 1042, 1456, 186, 211, 1, 0.198925, 0.957346,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 1229, 1462, 199, 183, 1, 0.135678, 0.928962,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 631, 1472, 210, 153, 1, 0.0714286, 0.875817,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 206, 1603, 217, 121, 1, -0.00921659, 0.785124,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 424, 1626, 226, 92, 1, -0.0973451, 0.641304,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 1229, 1646, 231, 90, 1, -0.203463, 0.555556,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 1461, 1670, 231, 90, 1, -0.203463, 0.555556,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 1693, 1671, 231, 90, 1, -0.203463, 0.555556,[],[],0]
			]
			]
,			[
			"Move",
			15,
			true,
			1,
			0,
			false,
			3039805752711124,
			[
				["images/purimahsaar-sheet0.png", 1349551, 437, 602, 217, 210, 1, 0.682028, 0.961905,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 655, 612, 217, 210, 1, 0.686636, 0.961905,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 1146, 614, 218, 209, 1, 0.692661, 0.961722,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 1708, 627, 219, 208, 1, 0.69863, 0.961538,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 1264, 405, 221, 208, 1, 0.701357, 0.961538,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 1708, 419, 222, 207, 1, 0.707207, 0.961353,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 703, 405, 224, 206, 1, 0.714286, 0.961165,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 1, 389, 228, 204, 1, 0.714912, 0.960784,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 1, 185, 238, 203, 1, 0.697479, 0.960591,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 1398, 1, 246, 201, 1, 0.686992, 0.960199,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 615, 190, 236, 203, 1, 0.699153, 0.960591,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 230, 396, 226, 205, 1, 0.712389, 0.960976,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 478, 394, 224, 207, 1, 0.700893, 0.961353,[],[],0],
				["images/purimahsaar-sheet0.png", 1349551, 1486, 419, 221, 208, 1, 0.692308, 0.961538,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		9819492151524571,
		[]
	]
,	[
		"t5",
		cr.plugins_.Sprite,
		false,
		[7613650602025349,7596307177686458,6538994869587576,2956437823729678,2601925573594676,1287007675851202,4434124633299555,9904151470900652,5935432685672792,7564520619801652,6788973999969782,3333554007344936,5319909183900203],
		0,
		0,
		null,
		[
			[
			"Default",
			10,
			true,
			1,
			0,
			false,
			4251146509489587,
			[
				["images/abdul-sheet0.png", 1380259, 1490, 809, 142, 294, 1, 0.598592, 0.965986,[],[],0],
				["images/abdul-sheet0.png", 1380259, 1869, 1023, 140, 290, 1, 0.585714, 0.965517,[],[],0],
				["images/abdul-sheet0.png", 1380259, 1, 1254, 137, 286, 1, 0.576642, 0.965035,[],[],0],
				["images/abdul-sheet0.png", 1380259, 1774, 1314, 137, 282, 1, 0.569343, 0.964539,[],[],0],
				["images/abdul-sheet0.png", 1380259, 1320, 1371, 137, 277, 1, 0.562044, 0.963899,[],[],0],
				["images/abdul-sheet0.png", 1380259, 687, 1471, 135, 272, 1, 0.555556, 0.963235,[],[],0],
				["images/abdul-sheet0.png", 1380259, 1, 1541, 134, 266, 1, 0.552239, 0.962406,[],[],0],
				["images/abdul-sheet0.png", 1380259, 1183, 1518, 135, 272, 1, 0.555556, 0.963235,[],[],0],
				["images/abdul-sheet0.png", 1380259, 1045, 1445, 137, 277, 1, 0.562044, 0.963899,[],[],0],
				["images/abdul-sheet0.png", 1380259, 549, 1323, 137, 282, 1, 0.569343, 0.964539,[],[],0],
				["images/abdul-sheet0.png", 1380259, 139, 1260, 137, 286, 1, 0.576642, 0.965035,[],[],0],
				["images/abdul-sheet0.png", 1380259, 1633, 1032, 140, 290, 1, 0.585714, 0.965517,[],[],0]
			]
			]
,			[
			"Attack_1",
			15,
			false,
			1,
			0,
			false,
			8014414322881216,
			[
				["images/abdul-sheet0.png", 1380259, 939, 701, 143, 295, 1, 0.58042, 0.966102,[],[],0],
				["images/abdul-sheet0.png", 1380259, 731, 1009, 163, 255, 1, 0.398773, 0.960784,[],[],0],
				["images/abdul-sheet0.png", 1380259, 731, 804, 205, 204, 1, 0.253659, 0.95098,[],[],0],
				["images/abdul-sheet0.png", 1380259, 1499, 618, 225, 190, 1, 0.217778, 0.947368,[],[],0],
				["images/abdul-sheet0.png", 1380259, 1125, 640, 220, 192, 1, 0.209091, 0.947917,[],[],0],
				["images/abdul-sheet0.png", 1380259, 1125, 442, 227, 197, 1, 0.193833, 0.949239,[],[],0],
				["images/abdul-sheet0.png", 1380259, 1302, 201, 203, 240, 1, 0.206897, 0.958333,[],[],0],
				["images/abdul-sheet0.png", 1380259, 1734, 428, 148, 308, 1, 0.317568, 0.967532,[],[],0],
				["images/abdul-sheet0.png", 1380259, 1, 409, 139, 331, 1, 0.582734, 0.969788,[],[],0],
				["images/abdul-sheet0.png", 1380259, 1088, 200, 213, 229, 1, 0.774648, 0.956332,[],[],0],
				["images/abdul-sheet0.png", 1380259, 1636, 1, 244, 211, 1, 0.82377, 0.952607,[],[],0],
				["images/abdul-sheet0.png", 1380259, 1, 198, 244, 210, 1, 0.79918, 0.952381,[],[],0],
				["images/abdul-sheet0.png", 1380259, 1742, 213, 220, 214, 1, 0.759091, 0.953271,[],[],0],
				["images/abdul-sheet0.png", 1380259, 604, 225, 176, 267, 1, 0.710227, 0.962547,[],[],0],
				["images/abdul-sheet0.png", 1380259, 1353, 442, 145, 295, 1, 0.62069, 0.966102,[],[],0]
			]
			]
,			[
			"Attack_2",
			15,
			false,
			1,
			0,
			false,
			1148884019836244,
			[
				["images/abdul-sheet0.png", 1380259, 587, 721, 143, 295, 1, 0.594406, 0.962712,[],[],0],
				["images/abdul-sheet0.png", 1380259, 913, 1299, 131, 297, 1, 0.541985, 0.962963,[],[],0],
				["images/abdul-sheet0.png", 1380259, 779, 534, 159, 269, 1, 0.610063, 0.959108,[],[],0],
				["images/abdul-sheet0.png", 1380259, 288, 1025, 193, 213, 1, 0.637306, 0.948357,[],[],0],
				["images/abdul-sheet0.png", 1380259, 141, 492, 219, 203, 1, 0.598173, 0.945813,[],[],0],
				["images/abdul-sheet0.png", 1380259, 1506, 415, 227, 202, 1, 0.682819, 0.940594,[],[],0],
				["images/abdul-sheet0.png", 1380259, 1506, 213, 235, 201, 1, 0.757447, 0.940298,[],[],0],
				["images/abdul-sheet0.png", 1380259, 1376, 1, 259, 199, 1, 0.776062, 0.939699,[],[],0],
				["images/abdul-sheet0.png", 1380259, 1088, 1, 287, 198, 1, 0.783972, 0.939394,[],[],0],
				["images/abdul-sheet0.png", 1380259, 1, 1, 314, 196, 1, 0.786624, 0.938776,[],[],0],
				["images/abdul-sheet0.png", 1380259, 316, 1, 293, 198, 1, 0.784983, 0.939394,[],[],0],
				["images/abdul-sheet0.png", 1380259, 610, 1, 259, 223, 1, 0.772201, 0.946188,[],[],0],
				["images/abdul-sheet0.png", 1380259, 870, 1, 217, 264, 1, 0.746544, 0.954545,[],[],0],
				["images/abdul-sheet0.png", 1380259, 246, 200, 174, 291, 1, 0.689655, 0.958763,[],[],0],
				["images/abdul-sheet0.png", 1380259, 1883, 428, 147, 301, 1, 0.619048, 0.960133,[],[],0]
			]
			]
,			[
			"Block",
			15,
			false,
			1,
			0,
			false,
			5163516817204708,
			[
				["images/abdul-sheet0.png", 1380259, 1725, 737, 143, 294, 1, 0.594406, 0.965986,[],[],0],
				["images/abdul-sheet0.png", 1380259, 410, 1239, 138, 284, 1, 0.543478, 0.964789,[],[],0],
				["images/abdul-sheet0.png", 1380259, 410, 1524, 132, 274, 1, 0.484848, 0.963504,[],[],0],
				["images/abdul-sheet0.png", 1380259, 271, 1564, 128, 264, 1, 0.429688, 0.962121,[],[],0],
				["images/abdul-sheet0.png", 1380259, 823, 1597, 131, 255, 1, 0.40458, 0.960784,[],[],0],
				["images/abdul-sheet0.png", 1380259, 136, 1547, 134, 258, 1, 0.380597, 0.96124,[],[],0],
				["images/abdul-sheet0.png", 1380259, 1594, 1323, 147, 261, 1, 0.340136, 0.961686,[],[],0],
				["images/abdul-sheet0.png", 1380259, 421, 465, 165, 263, 1, 0.290909, 0.961977,[],[],0],
				["images/abdul-sheet0.png", 1380259, 421, 200, 182, 264, 1, 0.258242, 0.962121,[],[],0],
				["images/abdul-sheet0.png", 1380259, 781, 266, 175, 267, 1, 0.268571, 0.962547,[],[],0],
				["images/abdul-sheet0.png", 1380259, 957, 430, 167, 270, 1, 0.281437, 0.962963,[],[],0],
				["images/abdul-sheet0.png", 1380259, 1458, 1418, 131, 282, 1, 0.40458, 0.964539,[],[],0]
			]
			]
,			[
			"Die",
			15,
			false,
			1,
			0,
			false,
			2586288755449397,
			[
				["images/abdul-sheet0.png", 1380259, 300, 729, 143, 295, 1, 0.594406, 0.962712,[],[],0],
				["images/abdul-sheet0.png", 1380259, 141, 696, 158, 267, 1, 0.620253, 0.958802,[],[],0],
				["images/abdul-sheet0.png", 1380259, 587, 493, 191, 227, 1, 0.549738, 0.951542,[],[],0],
				["images/abdul-sheet0.png", 1380259, 722, 1265, 190, 205, 1, 0.552632, 0.946341,[],[],0],
				["images/abdul-sheet0.png", 1380259, 1590, 1585, 161, 214, 1, 0.608696, 0.948598,[],[],0],
				["images/abdul-sheet0.png", 1380259, 1881, 1, 166, 185, 1, 0.60241, 0.940541,[],[],0],
				["images/abdul-sheet0.png", 1380259, 1752, 1642, 174, 168, 1, 0.586207, 0.934524,[],[],0],
				["images/abdul-sheet0.png", 1380259, 1319, 1701, 180, 158, 1, 0.572222, 0.93038,[],[],0],
				["images/abdul-sheet0.png", 1380259, 955, 1723, 186, 148, 1, 0.55914, 0.925676,[],[],0],
				["images/abdul-sheet0.png", 1380259, 543, 1744, 190, 140, 1, 0.552632, 0.9,[],[],0],
				["images/abdul-sheet0.png", 1380259, 1500, 1800, 190, 134, 1, 0.547368, 0.895522,[],[],0],
				["images/abdul-sheet0.png", 1380259, 1, 1808, 191, 128, 1, 0.544503, 0.890625,[],[],0],
				["images/abdul-sheet0.png", 1380259, 1691, 1811, 192, 123, 1, 0.541667, 0.886179,[],[],0]
			]
			]
,			[
			"Move",
			15,
			true,
			1,
			0,
			false,
			8171939552412168,
			[
				["images/abdul-sheet0.png", 1380259, 1346, 738, 143, 294, 1, 0.594406, 0.962585,[],[],0],
				["images/abdul-sheet0.png", 1380259, 146, 964, 141, 295, 1, 0.574468, 0.962712,[],[],0],
				["images/abdul-sheet0.png", 1380259, 444, 729, 142, 295, 1, 0.556338, 0.962712,[],[],0],
				["images/abdul-sheet0.png", 1380259, 1083, 833, 142, 294, 1, 0.542253, 0.962585,[],[],0],
				["images/abdul-sheet0.png", 1380259, 1883, 730, 144, 292, 1, 0.527778, 0.962329,[],[],0],
				["images/abdul-sheet0.png", 1380259, 1, 964, 144, 289, 1, 0.513889, 0.961938,[],[],0],
				["images/abdul-sheet0.png", 1380259, 937, 997, 137, 301, 1, 0.518248, 0.963455,[],[],0],
				["images/abdul-sheet0.png", 1380259, 1465, 1104, 128, 313, 1, 0.523438, 0.964856,[],[],0],
				["images/abdul-sheet0.png", 1380259, 288, 1239, 121, 324, 1, 0.53719, 0.966049,[],[],0],
				["images/abdul-sheet0.png", 1380259, 1202, 1181, 117, 336, 1, 0.529915, 0.967262,[],[],0],
				["images/abdul-sheet0.png", 1380259, 1226, 833, 118, 347, 1, 0.525424, 0.9683,[],[],0],
				["images/abdul-sheet0.png", 1380259, 1345, 1033, 119, 337, 1, 0.546219, 0.967359,[],[],0],
				["images/abdul-sheet0.png", 1380259, 1912, 1314, 118, 327, 1, 0.576271, 0.966361,[],[],0],
				["images/abdul-sheet0.png", 1380259, 1075, 1128, 126, 316, 1, 0.579365, 0.96519,[],[],0],
				["images/abdul-sheet0.png", 1380259, 587, 1017, 134, 305, 1, 0.589552, 0.963934,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		5332593931264477,
		[]
	]
,	[
		"t6",
		cr.plugins_.Sprite,
		false,
		[2704670672347368,9202822253816884,9830143538308716,5356762070653879,5887638432860489],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4281433287220185,
			[
				["images/btnsoundunmute-sheet0.png", 1142, 0, 0, 94, 100, 1, 0.510638, 0.5,[],[-0.446808,-0.44,-0.0106383,-0.5,0.457447,-0.47,0.489362,0,0.436171,0.45,-0.0106383,0.5,-0.478723,0.47,-0.510638,0],0],
				["images/btnsoundunmute-sheet1.png", 1142, 0, 0, 94, 100, 1, 0.510638, 0.5,[],[-0.446808,-0.44,-0.0106383,-0.5,0.457447,-0.47,0.489362,0,0.436171,0.45,-0.0106383,0.5,-0.478723,0.47,-0.510638,0],0]
			]
			]
		],
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			2091457987702058
		]
		],
		false,
		false,
		6348073276492111,
		[]
	]
,	[
		"t7",
		cr.plugins_.Sprite,
		false,
		[2704670672347368,9202822253816884,9830143538308716,5356762070653879,5887638432860489],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			8613722006203454,
			[
				["images/btnsoundmute-sheet0.png", 1164, 0, 0, 94, 100, 1, 0.510638, 0.5,[],[-0.446808,-0.44,-0.0106383,-0.5,0.457447,-0.47,0.489362,0,0.436171,0.45,-0.0106383,0.5,-0.478723,0.47,-0.510638,0],0],
				["images/btnsoundmute-sheet1.png", 1164, 0, 0, 94, 100, 1, 0.510638, 0.5,[],[-0.446808,-0.44,-0.0106383,-0.5,0.457447,-0.47,0.489362,0,0.436171,0.45,-0.0106383,0.5,-0.478723,0.47,-0.510638,0],0]
			]
			]
		],
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			2343670220369617
		]
		],
		false,
		false,
		1223747399349943,
		[]
	]
,	[
		"t8",
		cr.plugins_.Sprite,
		false,
		[2704670672347368,9202822253816884,9830143538308716,5356762070653879,5887638432860489],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4938876575950922,
			[
				["images/btnplay-sheet0.png", 17418, 1, 1, 390, 127, 1, 0.507692, 0.503937,[],[-0.489744,-0.448819,0.484616,-0.480315,0.476923,0.448819,-0.5,0.472441],0],
				["images/btnplay-sheet0.png", 17418, 1, 129, 390, 127, 1, 0.505128, 0.503937,[],[-0.48718,-0.448819,0.48718,-0.480315,0.479487,0.448819,-0.497436,0.472441],0]
			]
			]
		],
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			7613261609239439
		]
		],
		false,
		false,
		3488141464704435,
		[]
	]
,	[
		"t9",
		cr.plugins_.Sprite,
		false,
		[2704670672347368,9202822253816884,9830143538308716,5356762070653879,5887638432860489],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5195151395461261,
			[
				["images/btntutorialcontinue-sheet0.png", 6729, 1, 1, 347, 113, 1, 0.507205, 0.504425,[],[-0.489913,-0.451327,-0.00864559,-0.477876,0.484149,-0.477876,0.475504,0.442478,-0.00864559,0.469026,-0.498559,0.469026],0],
				["images/btntutorialcontinue-sheet0.png", 6729, 1, 115, 347, 113, 1, 0.507205, 0.504425,[],[-0.489913,-0.451327,-0.00864559,-0.477876,0.484149,-0.477876,0.475504,0.442478,-0.00864559,0.469026,-0.498559,0.469026],0]
			]
			]
		],
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			289292245574384
		]
		],
		false,
		false,
		44201936680584,
		[]
	]
,	[
		"t10",
		cr.plugins_.Sprite,
		false,
		[2704670672347368,9202822253816884,9830143538308716,5356762070653879,5887638432860489],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3886334453762252,
			[
				["images/btnpausebacktomain-sheet0.png", 7671, 1, 1, 383, 125, 1, 0.506527, 0.504,[],[-0.488251,-0.448,0.48564,-0.48,0.477807,0.448,-0.498695,0.472],0],
				["images/btnpausebacktomain-sheet0.png", 7671, 1, 127, 383, 125, 1, 0.506527, 0.504,[],[-0.488251,-0.448,0.48564,-0.48,0.477807,0.448,-0.498695,0.472],0]
			]
			]
		],
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			6264248488697094
		]
		],
		false,
		false,
		3279948984169909,
		[]
	]
,	[
		"t11",
		cr.plugins_.Sprite,
		false,
		[2704670672347368,9202822253816884,9830143538308716,5356762070653879,5887638432860489],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4111707367352328,
			[
				["images/btngameovercontinue-sheet0.png", 21227, 1, 1, 277, 105, 1, 0.509025, 0.504762,[],[-0.465704,-0.390476,-0.0108303,-0.495238,0.458484,-0.419048,0.483755,-0.00952393,0.447654,0.380952,-0.0108303,0.495238,-0.469314,0.390476,-0.505415,-0.00952393],0],
				["images/btngameovercontinue-sheet0.png", 21227, 1, 107, 277, 105, 1, 0.505415, 0.504762,[],[-0.462094,-0.390476,-0.00722015,-0.495238,0.462094,-0.419048,0.487365,-0.00952393,0.451264,0.380952,-0.00722015,0.495238,-0.465704,0.390476,-0.501805,-0.00952393],0]
			]
			]
		],
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			7725859743715481
		]
		],
		false,
		false,
		1908933482392252,
		[]
	]
,	[
		"t12",
		cr.plugins_.Sprite,
		false,
		[2704670672347368,9202822253816884,9830143538308716,5356762070653879,5887638432860489],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			956065784008081,
			[
				["images/btngameoverbacktomain-sheet0.png", 16917, 1, 1, 225, 95, 1, 0.506667, 0.505263,[],[-0.457778,-0.389474,-0.00888866,-0.494737,0.453333,-0.410526,0.488889,-0.0105262,0.448889,0.389474,-0.00888866,0.494737,-0.457778,0.378948,-0.502222,-0.0105262],0],
				["images/btngameoverbacktomain-sheet0.png", 16917, 1, 97, 225, 95, 1, 0.506667, 0.505263,[],[-0.457778,-0.389474,-0.00888866,-0.494737,0.453333,-0.410526,0.488889,-0.0105262,0.448889,0.389474,-0.00888866,0.494737,-0.457778,0.378948,-0.502222,-0.0105262],0]
			]
			]
		],
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			4462520840368162
		]
		],
		false,
		false,
		8931874654643851,
		[]
	]
,	[
		"t13",
		cr.plugins_.Sprite,
		false,
		[2704670672347368,9202822253816884,9830143538308716,5356762070653879,5887638432860489],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6627571677830064,
			[
				["images/btnpausebacktomain-sheet0.png", 7671, 1, 1, 383, 125, 1, 0.511749, 0.504,[],[-0.493473,-0.448,0.480418,-0.48,0.472585,0.448,-0.503916,0.472],0],
				["images/btnpausebacktomain-sheet0.png", 7671, 1, 127, 383, 125, 1, 0.506527, 0.504,[],[-0.488251,-0.448,0.48564,-0.48,0.477807,0.448,-0.498695,0.472],0]
			]
			]
		],
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			3547484286487656
		]
		],
		false,
		false,
		1846057166292316,
		[]
	]
,	[
		"t14",
		cr.plugins_.Sprite,
		false,
		[2704670672347368,9202822253816884,9830143538308716,5356762070653879,5887638432860489],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			951019051221564,
			[
				["images/btntutorialcontinue-sheet0.png", 6729, 1, 1, 347, 113, 1, 0.507205, 0.504425,[],[-0.489913,-0.451327,-0.00864559,-0.477876,0.484149,-0.477876,0.475504,0.442478,-0.00864559,0.469026,-0.498559,0.469026],0],
				["images/btntutorialcontinue-sheet0.png", 6729, 1, 115, 347, 113, 1, 0.507205, 0.504425,[],[-0.489913,-0.451327,-0.00864559,-0.477876,0.484149,-0.477876,0.475504,0.442478,-0.00864559,0.469026,-0.498559,0.469026],0]
			]
			]
		],
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			7904315392466361
		]
		],
		false,
		false,
		805370248847222,
		[]
	]
,	[
		"t15",
		cr.plugins_.Sprite,
		false,
		[2704670672347368,9202822253816884,9830143538308716,5356762070653879,5887638432860489],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3291607737954381,
			[
				["images/btnrestart-sheet0.png", 5228, 1, 1, 363, 118, 1, 0.506887, 0.5,[],[-0.490358,-0.449152,0.484849,-0.474576,0.476584,0.449153,-0.00826406,0.474576,-0.498623,0.474576],0],
				["images/btnrestart-sheet0.png", 5228, 1, 120, 363, 118, 1, 0.509642, 0.5,[],[-0.493113,-0.449152,0.482094,-0.474576,0.473829,0.449153,-0.0110189,0.474576,-0.501377,0.474576],0]
			]
			]
		],
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			3251259855083135
		]
		],
		false,
		false,
		3480409622680839,
		[]
	]
,	[
		"t16",
		cr.plugins_.Sprite,
		false,
		[2704670672347368,9202822253816884,9830143538308716,5356762070653879,5887638432860489],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4611471505286254,
			[
				["images/btnpause-sheet0.png", 904, 0, 0, 94, 100, 1, 0.510638, 0.5,[],[-0.446808,-0.44,-0.0106383,-0.5,0.457447,-0.47,0.489362,0,0.436171,0.45,-0.0106383,0.5,-0.478723,0.47,-0.510638,0],0],
				["images/btnpause-sheet1.png", 904, 0, 0, 94, 100, 1, 0.510638, 0.5,[],[-0.446808,-0.44,-0.0106383,-0.5,0.457447,-0.47,0.489362,0,0.436171,0.45,-0.0106383,0.5,-0.478723,0.47,-0.510638,0],0]
			]
			]
		],
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			110037771035618
		]
		],
		false,
		false,
		9376132866351825,
		[]
	]
,	[
		"t17",
		cr.plugins_.Sprite,
		false,
		[2704670672347368,9202822253816884,9830143538308716,5356762070653879,5887638432860489],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3256442517210441,
			[
				["images/btntutorialcontinue-sheet0.png", 6729, 1, 1, 347, 113, 1, 0.507205, 0.504425,[],[-0.489913,-0.451327,-0.00864559,-0.477876,0.484149,-0.477876,0.475504,0.442478,-0.00864559,0.469026,-0.498559,0.469026],0],
				["images/btntutorialcontinue-sheet0.png", 6729, 1, 115, 347, 113, 1, 0.507205, 0.504425,[],[-0.489913,-0.451327,-0.00864559,-0.477876,0.484149,-0.477876,0.475504,0.442478,-0.00864559,0.469026,-0.498559,0.469026],0]
			]
			]
		],
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			9785837429756282
		]
		],
		false,
		false,
		5156451072541302,
		[]
	]
,	[
		"t18",
		cr.plugins_.Sprite,
		false,
		[2704670672347368,9202822253816884,9830143538308716,5356762070653879,5887638432860489],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5796579067786481,
			[
				["images/btngoleft-sheet0.png", 3045, 1, 1, 146, 100, 1, 0.513699, 0.5,[],[-0.465753,-0.43,-0.0136986,-0.49,0.452054,-0.45,0.472602,0,0.424657,0.41,-0.0136986,0.48,-0.486301,0.46,-0.506849,0],0],
				["images/btngoleft-sheet0.png", 3045, 1, 102, 146, 100, 1, 0.513699, 0.5,[],[-0.465753,-0.43,-0.0136986,-0.49,0.452054,-0.45,0.472602,0,0.424657,0.41,-0.0136986,0.48,-0.486301,0.46,-0.506849,0],0]
			]
			]
		],
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			5880394409418933
		]
		],
		false,
		false,
		539052577776085,
		[]
	]
,	[
		"t19",
		cr.plugins_.Sprite,
		false,
		[2704670672347368,9202822253816884,9830143538308716,5356762070653879,5887638432860489],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5147697843614964,
			[
				["images/btngoright-sheet0.png", 2873, 1, 1, 145, 99, 1, 0.510345, 0.50505,[],[-0.462069,-0.434343,-0.0137928,-0.50505,0.455172,-0.454545,0.482758,-0.0101015,0.434483,0.414142,-0.0137928,0.484848,-0.482759,0.454545,-0.503448,-0.0101015],0],
				["images/btngoright-sheet0.png", 2873, 1, 101, 145, 99, 1, 0.510345, 0.50505,[],[-0.462069,-0.434343,-0.0137928,-0.50505,0.455172,-0.454545,0.482758,-0.0101015,0.434483,0.414142,-0.0137928,0.484848,-0.482759,0.454545,-0.503448,-0.0101015],0]
			]
			]
		],
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			6911947139858699
		]
		],
		false,
		false,
		5171419433365426,
		[]
	]
,	[
		"t20",
		cr.plugins_.Sprite,
		false,
		[2704670672347368,9202822253816884,9830143538308716,5356762070653879,5887638432860489],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3406627868993812,
			[
				["images/btndefense-sheet0.png", 4393, 1, 1, 145, 100, 1, 0.510345, 0.5,[],[-0.462069,-0.43,-0.0137928,-0.5,0.455172,-0.45,0.475862,0,0.434483,0.42,-0.0137928,0.49,-0.482759,0.46,-0.503448,0],0],
				["images/btndefense-sheet0.png", 4393, 1, 102, 145, 100, 1, 0.510345, 0.5,[],[-0.462069,-0.43,-0.0137928,-0.5,0.455172,-0.45,0.475862,0,0.434483,0.42,-0.0137928,0.49,-0.482759,0.46,-0.503448,0],0]
			]
			]
		],
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			4801899923497459
		]
		],
		false,
		false,
		416628755331235,
		[]
	]
,	[
		"t21",
		cr.plugins_.Sprite,
		false,
		[2704670672347368,9202822253816884,9830143538308716,5356762070653879,5887638432860489],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			205517161229753,
			[
				["images/btnattack-sheet0.png", 2697, 1, 1, 145, 100, 1, 0.510345, 0.5,[],[-0.455172,-0.42,-0.0137928,-0.48,0.448276,-0.44,0.482758,0,0.441379,0.43,-0.0137928,0.49,-0.475862,0.45,-0.503448,0],0],
				["images/btnattack-sheet0.png", 2697, 1, 102, 145, 100, 1, 0.510345, 0.5,[],[-0.455172,-0.42,-0.0137928,-0.48,0.448276,-0.44,0.482758,0,0.441379,0.43,-0.0137928,0.49,-0.475862,0.45,-0.503448,0],0]
			]
			]
		],
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			7570836742384004
		]
		],
		false,
		false,
		4139224414817653,
		[]
	]
,	[
		"t22",
		cr.plugins_.Sprite,
		false,
		[2704670672347368,9202822253816884,9830143538308716,5356762070653879,5887638432860489],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3930144412720333,
			[
				["images/btnstoryskip-sheet0.png", 5515, 1, 1, 279, 113, 1, 0.505376, 0.504425,[],[-0.483871,-0.451327,-0.00716835,-0.495575,0.487456,-0.486726,0.476703,0.451327,-0.494624,0.469026,-0.501792,-0.00884974],0],
				["images/btnstoryskip-sheet0.png", 5515, 1, 115, 279, 113, 1, 0.505376, 0.504425,[],[-0.483871,-0.451327,-0.00716835,-0.495575,0.487456,-0.486726,0.476703,0.451327,-0.494624,0.469026,-0.501792,-0.00884974],0]
			]
			]
		],
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			1004145397159797
		]
		],
		false,
		false,
		2130410190492072,
		[]
	]
,	[
		"t23",
		cr.plugins_.Sprite,
		false,
		[2704670672347368,9202822253816884,9830143538308716,5356762070653879,5887638432860489],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6019646481807937,
			[
				["images/btnsoundmute2-sheet0.png", 7361, 0, 0, 194, 148, 1, 0.510309, 0.5,[],[-0.381443,-0.331081,-0.0103093,-0.358108,0.309279,-0.263514,0.36598,0,0.36598,0.337838,-0.0103093,0.5,-0.453608,0.425676,-0.505155,0],0],
				["images/btnsoundmute2-sheet1.png", 7349, 0, 0, 194, 148, 1, 0.510309, 0.5,[],[-0.381443,-0.331081,-0.0103093,-0.358108,0.309279,-0.263514,0.36598,0,0.36598,0.337838,-0.0103093,0.5,-0.453608,0.425676,-0.505155,0],0]
			]
			]
		],
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			4253186426691311
		]
		],
		false,
		false,
		3844103736700064,
		[]
	]
,	[
		"t24",
		cr.plugins_.Sprite,
		false,
		[2704670672347368,9202822253816884,9830143538308716,5356762070653879,5887638432860489],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			8260297693785937,
			[
				["images/btnsoundmute3-sheet0.png", 3882, 0, 0, 174, 136, 1, 0.511494, 0.5,[],[-0.408046,-0.367647,-0.0114943,-0.492647,0.396552,-0.382353,0.488506,0,0.413793,0.404412,-0.0114943,0.492647,-0.436782,0.404412,-0.505747,0],0],
				["images/btnsoundmute3-sheet1.png", 3882, 0, 0, 174, 136, 1, 0.511494, 0.5,[],[-0.408046,-0.367647,-0.0114943,-0.492647,0.396552,-0.382353,0.488506,0,0.413793,0.404412,-0.0114943,0.492647,-0.436782,0.404412,-0.505747,0],0]
			]
			]
		],
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			6906040934972801
		]
		],
		false,
		false,
		3215476957889768,
		[]
	]
,	[
		"t25",
		cr.plugins_.Sprite,
		false,
		[2704670672347368,9202822253816884,9830143538308716,5356762070653879,5887638432860489],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			782471802314699,
			[
				["images/btnsoundmute4-sheet0.png", 7869, 0, 0, 168, 128, 1, 0.511905, 0.5,[],[-0.410715,-0.367187,-0.0119048,-0.492188,0.410714,-0.398437,0.488095,0,0.416666,0.40625,-0.0119048,0.5,-0.440476,0.40625,-0.505952,0],0],
				["images/btnsoundmute4-sheet1.png", 7853, 0, 0, 168, 128, 1, 0.511905, 0.5,[],[-0.410715,-0.367187,-0.0119048,-0.492188,0.410714,-0.398437,0.488095,0,0.416666,0.40625,-0.0119048,0.5,-0.440476,0.40625,-0.505952,0],0]
			]
			]
		],
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			8486895862663644
		]
		],
		false,
		false,
		6013034131178113,
		[]
	]
,	[
		"t26",
		cr.plugins_.Sprite,
		false,
		[2704670672347368,9202822253816884,9830143538308716,5356762070653879,5887638432860489],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4997082265296484,
			[
				["images/btnsoundmute5-sheet0.png", 7387, 0, 0, 172, 139, 1, 0.511628, 0.503597,[],[-0.418605,-0.388489,-0.0116279,-0.503597,0.395349,-0.388489,0.482558,-0.00719413,0.406977,0.395684,-0.0116279,0.496403,-0.453488,0.424461,-0.511628,-0.00719413],0],
				["images/btnsoundmute5-sheet1.png", 7368, 0, 0, 172, 139, 1, 0.511628, 0.503597,[],[-0.418605,-0.388489,-0.0116279,-0.503597,0.395349,-0.388489,0.482558,-0.00719413,0.406977,0.395684,-0.0116279,0.496403,-0.453488,0.424461,-0.511628,-0.00719413],0]
			]
			]
		],
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			2907716382130606
		]
		],
		false,
		false,
		8577095769766665,
		[]
	]
,	[
		"t27",
		cr.plugins_.Sprite,
		false,
		[2704670672347368,9202822253816884,9830143538308716,5356762070653879,5887638432860489],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6423953308749046,
			[
				["images/btntutorialcontinue-sheet0.png", 6729, 1, 1, 347, 113, 1, 0.507205, 0.504425,[],[-0.489913,-0.451327,-0.00864559,-0.477876,0.484149,-0.477876,0.475504,0.442478,-0.00864559,0.469026,-0.498559,0.469026],0],
				["images/btntutorialcontinue-sheet0.png", 6729, 1, 115, 347, 113, 1, 0.507205, 0.504425,[],[-0.489913,-0.451327,-0.00864559,-0.477876,0.484149,-0.477876,0.475504,0.442478,-0.00864559,0.469026,-0.498559,0.469026],0]
			]
			]
		],
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			5498107654577957
		]
		],
		false,
		false,
		2850289938673598,
		[]
	]
,	[
		"t28",
		cr.plugins_.Sprite,
		false,
		[2704670672347368,9202822253816884,9830143538308716,5356762070653879,5887638432860489],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6670547018374639,
			[
				["images/btnmoregames-sheet0.png", 7442, 1, 1, 356, 116, 1, 0.508427, 0.5,[],[-0.491573,-0.448276,0.483146,-0.474138,0.474719,0.448276,-0.00842696,0.474138,-0.5,0.474138],0],
				["images/btnmoregames-sheet0.png", 7442, 1, 118, 356, 116, 1, 0.505618, 0.5,[],[-0.488764,-0.448276,0.485955,-0.474138,0.477528,0.448276,-0.00561798,0.474138,-0.497191,0.474138],0]
			]
			]
		],
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			6158175879054887
		]
		],
		false,
		false,
		1707697959341427,
		[]
	]
,	[
		"t29",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			1133060390993089,
			[
				["images/backgroundgame-sheet0.png", 155240, 0, 0, 1012, 453, 1, 0.5, 0.501104,[],[-0.5,-0.501104,0.496047,-0.492274,0.496047,0.490066,-0.496047,0.490066],0]
			]
			]
		],
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			171397126690033
		]
		],
		false,
		false,
		6608831867227316,
		[]
	]
,	[
		"t30",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4918506113903044,
			[
				["images/covertitle-sheet0.png", 23540, 0, 0, 568, 253, 1, 0.503521, 0.501976,[],[-0.431338,-0.339921,-0.00352114,-0.490119,0.306338,-0.0750993,0.443662,0.379447,-0.00352114,0.474309,-0.334507,0.118577,-0.429577,-0.00395232],0]
			]
			]
		],
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			5592192200652458
		]
		],
		false,
		false,
		4204232288662647,
		[]
	]
,	[
		"t31",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			8441290936227838,
			[
				["images/logoblackmoon-sheet0.png", 4918, 0, 0, 131, 80, 1, 0.503817, 0.5,[],[-0.473282,-0.45,-0.00763378,-0.4875,0.458015,-0.4375,0.480916,0,0.450381,0.425,-0.00763378,0.5,-0.465649,0.4375,-0.503817,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		4238192010171725,
		[]
	]
,	[
		"t32",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2473088950427903,
			[
				["images/imghowtoplay-sheet0.png", 15082, 0, 0, 804, 423, 1, 0.501244, 0.501182,[],[-0.00124377,-0.397163,0.205224,0.056738,0.457711,0.420804,-0.00124377,-0.295508,-0.400498,0.307329],0]
			]
			]
		],
		[
		],
		false,
		false,
		166600244731162,
		[]
	]
,	[
		"t33",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6121505436770545,
			[
				["images/logoblackmoon-sheet0.png", 4918, 0, 0, 131, 80, 1, 0.503817, 0.5,[],[-0.473282,-0.45,-0.00763378,-0.4875,0.458015,-0.4375,0.480916,0,0.450381,0.425,-0.00763378,0.5,-0.465649,0.4375,-0.503817,0],0]
			]
			]
		],
		[
		],
		false,
		true,
		5767787083086027,
		[]
	]
,	[
		"t34",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			1513619794383499,
			[
				["images/logoblackmoon_2-sheet0.png", 5271, 0, 0, 124, 97, 1, 0.5, 0.505155,[],[-0.451613,-0.443299,0,-0.494845,0.459677,-0.453608,0.5,-0.0103096,0.443548,0.42268,0,0.484536,-0.443548,0.42268,-0.5,-0.0103096],0]
			]
			]
		],
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			6387811989525542
		]
		],
		false,
		false,
		9597958690248464,
		[]
	]
,	[
		"t35",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			9608563531305811,
			[
				["images/img_levellost-sheet0.png", 27517, 0, 0, 525, 360, 1, 0.500952, 0.502778,[],[-0.470476,-0.458333,0.459048,-0.444444,0.16,-0.00277776,0.161905,0.00555527,-0.00190437,0.494444,-0.180952,0.0305552,-0.175238,-0.00277776],0]
			]
			]
		],
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			1887599886563178
		]
		],
		false,
		false,
		7205466164573089,
		[]
	]
,	[
		"t36",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			8714095557968972,
			[
				["images/lblgamecomplete-sheet0.png", 7317, 0, 0, 703, 144, 1, 0.500711, 0.5,[],[-0.443812,-0.222222,-0.00142226,-0.243056,0.493599,-0.472222,0.489332,0.451389,-0.00142226,0.388889,-0.485064,0.423611,-0.500711,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		9708520612237521,
		[]
	]
,	[
		"t37",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			9401044488135761,
			[
				["images/story_gamecomplete-sheet0.png", 98839, 0, 0, 1008, 600, 1, 0.500992, 0.501667,[],[-0.494048,-0.49,0.499008,-0.501667,0.492064,0.486666,-0.500992,0.498333],0]
			]
			]
		],
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			1553457036174552
		]
		],
		false,
		false,
		6252251394289593,
		[]
	]
,	[
		"t38",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			7541737025477098,
			[
				["images/img_levelcompleted-sheet0.png", 34035, 0, 0, 388, 367, 1, 0.5, 0.501362,[],[-0.425258,-0.422343,0,-0.122615,0.458763,-0.457766,0.5,-0.00272438,0.353093,0.343325,0,0.490464,-0.262887,0.247957,-0.296392,-0.00272438],0]
			]
			]
		],
		[
		],
		false,
		false,
		3777578936192076,
		[]
	]
,	[
		"t39",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6496259817297996,
			[
				["images/story_1-sheet0.png", 119910, 0, 0, 1008, 600, 1, 0.5, 0.5,[],[],1]
			]
			]
		],
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			6871013215535457
		]
		],
		false,
		false,
		7118402819653879,
		[]
	]
,	[
		"t40",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			7004235003037504,
			[
				["images/story_2-sheet0.png", 88506, 0, 0, 1008, 600, 1, 0.5, 0.5,[],[],1]
			]
			]
		],
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			6152685128255569
		]
		],
		false,
		false,
		4960230208475192,
		[]
	]
,	[
		"t41",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			9776266913663726,
			[
				["images/story_3-sheet0.png", 142066, 0, 0, 1008, 600, 1, 0.5, 0.5,[],[],1]
			]
			]
		],
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			6942820167516261
		]
		],
		false,
		false,
		3699952867163238,
		[]
	]
,	[
		"t42",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			7065734206431654,
			[
				["images/coverbg-sheet0.png", 182400, 0, 0, 1008, 600, 1, 0.5, 0.5,[],[],1]
			]
			]
		],
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			1701741754302501
		]
		],
		false,
		false,
		6014015004503641,
		[]
	]
,	[
		"t43",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			97783020533664,
			[
				["images/fightlabel-sheet0.png", 4175, 0, 0, 371, 140, 1, 0.501348, 0.5,[],[-0.48248,-0.45,-0.00269571,-0.5,0.463612,-0.407143,0.482479,0,0.463612,0.407143,-0.45283,0.371429,-0.477089,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		2702779882167858,
		[]
	]
,	[
		"t44",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5607567742786119,
			[
				["images/coverside-sheet0.png", 20049, 0, 0, 150, 371, 1, 0.5, 0.501348,[],[-0.493333,-0.498652,0.486667,-0.495957,0.493333,-0.00269571,0.453333,0.479784,-0.5,0.498652],0]
			]
			]
		],
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			3907399552387361
		]
		],
		false,
		false,
		8052096741246225,
		[]
	]
,	[
		"t45",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			9508630629806263,
			[
				["images/bgbetweenfights-sheet0.png", 72745, 0, 0, 1011, 594, 1, 0.500495, 0.5,[],[-0.500495,-0.5,0.496538,-0.494949,0.495549,0.493266,-0.496538,0.493266],0]
			]
			]
		],
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			2389211001023194
		]
		],
		false,
		false,
		1348624813641572,
		[]
	]
,	[
		"t46",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			842930705738365,
			[
				["images/sprite-sheet0.png", 2049, 0, 0, 63, 79, 1, 0.507937, 0.506329,[],[0.0634925,-0.0506331,-0.0158736,0.392405,0.349206,-0.392405,0.460317,-0.0126581,0.428571,0.443038,-0.0158736,0.481013,-0.444444,0.443038,0.0634925,-0.0126581],0]
			]
			]
		],
		[
		],
		false,
		false,
		8523640158013026,
		[]
	]
,	[
		"t47",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			8235090789827386,
			[
				["images/imgshield-sheet0.png", 3564, 0, 0, 114, 42, 1, 0.5, 0.5,[],[-0.438596,-0.333333,0,-0.5,0.429825,-0.309524,0.491228,0,0.421053,0.285714,0,0.5,-0.412281,0.261905,-0.491228,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		2637590031666931,
		[]
	]
,	[
		"t48",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4309881113610218,
			[
				["images/imgnostamina-sheet0.png", 1449, 0, 0, 111, 83, 1, 0.504505, 0.506024,[],[-0.432432,-0.409639,-0.00900951,-0.493976,0.441441,-0.433735,0.486486,-0.0120481,0.423423,0.39759,-0.00900951,0.493976,-0.432432,0.39759,-0.504505,-0.0120481],0]
			]
			]
		],
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			1611188268992357
		]
		],
		false,
		false,
		7420704635589328,
		[]
	]
,	[
		"t49",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5880635535616262,
			[
				["images/imgameplayvs-sheet0.png", 5179, 0, 0, 99, 72, 1, 0.50505, 0.5,[],[-0.434343,-0.402778,-0.0101015,-0.486111,0.434344,-0.416667,0.484848,0,0.464647,0.458333,-0.0101015,0.486111,-0.444444,0.416667,-0.484848,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		483310085776148,
		[]
	]
,	[
		"t50",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2014974830864451,
			[
				["images/enemyhealth-sheet0.png", 2592, 1, 1, 170, 26, 1, 0.5, 0.5,[],[],0],
				["images/enemyhealth-sheet0.png", 2592, 1, 28, 170, 26, 1, 0.5, 0.5,[],[],0],
				["images/enemyhealth-sheet0.png", 2592, 1, 55, 170, 26, 1, 0.5, 0.5,[],[],0],
				["images/enemyhealth-sheet0.png", 2592, 1, 82, 170, 26, 1, 0.5, 0.5,[],[],0],
				["images/enemyhealth-sheet0.png", 2592, 1, 109, 170, 26, 1, 0.5, 0.5,[],[],0],
				["images/enemyhealth-sheet0.png", 2592, 1, 136, 170, 26, 1, 0.5, 0.5,[],[],0],
				["images/enemyhealth-sheet0.png", 2592, 1, 163, 170, 26, 1, 0.5, 0.5,[],[],0],
				["images/enemyhealth-sheet0.png", 2592, 1, 190, 170, 26, 1, 0.5, 0.5,[],[],0],
				["images/enemyhealth-sheet0.png", 2592, 1, 217, 170, 26, 1, 0.5, 0.5,[],[],0],
				["images/enemyhealth-sheet1.png", 1191, 0, 0, 170, 26, 1, 0.5, 0.5,[],[-0.482353,-0.384615,0,-0.346154,0.482353,-0.384615,0.5,0,0.470588,0.307692,0,0.423077,-0.488235,0.423077,-0.5,0],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			1388793566093051
		]
		],
		false,
		false,
		3963297679268102,
		[]
	]
,	[
		"t51",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			668340777591315,
			[
				["images/enemylabel-sheet0.png", 5017, 1, 86, 123, 34, 1, 0.504065, 0.5,[],[-0.479675,-0.411765,-0.00813004,-0.470588,0.455285,-0.352941,0.495935,0,0.463415,0.382353,-0.00813004,0.5,-0.471545,0.382353,-0.504065,0],0],
				["images/enemylabel-sheet0.png", 5017, 130, 1, 121, 36, 1, 0.504132, 0.5,[],[-0.479339,-0.416667,-0.00826421,-0.5,0.46281,-0.388889,0.495868,0,0.46281,0.388889,-0.00826421,0.5,-0.479339,0.416667,-0.504132,0],0],
				["images/enemylabel-sheet0.png", 5017, 1, 53, 153, 32, 1, 0.503268, 0.5,[],[-0.48366,-0.40625,-0.00653601,-0.5,0.477124,-0.40625,0.496732,0,0.464052,0.34375,-0.00653601,0.5,-0.490196,0.4375],0],
				["images/enemylabel-sheet0.png", 5017, 1, 1, 128, 51, 1, 0.507813, 0.509804,[],[-0.453125,-0.372549,-0.0078125,-0.490196,0.4375,-0.372549,0.492188,-0.019608,0.453125,0.392157,-0.0078125,0.45098,-0.476563,0.411765,-0.507813,-0.019608],0]
			]
			]
		],
		[
		],
		false,
		false,
		9064352879571875,
		[]
	]
,	[
		"t52",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6259188347712107,
			[
				["images/enemystamina-sheet0.png", 4567, 1, 1, 157, 24, 1, 0.503185, 0.5,[],[],0],
				["images/enemystamina-sheet0.png", 4567, 1, 26, 157, 24, 1, 0.503185, 0.5,[],[],0],
				["images/enemystamina-sheet0.png", 4567, 1, 51, 157, 24, 1, 0.503185, 0.5,[],[],0],
				["images/enemystamina-sheet0.png", 4567, 1, 76, 157, 24, 1, 0.503185, 0.5,[],[],0],
				["images/enemystamina-sheet0.png", 4567, 1, 101, 157, 24, 1, 0.503185, 0.5,[],[],0],
				["images/enemystamina-sheet0.png", 4567, 1, 126, 157, 24, 1, 0.503185, 0.5,[],[],0],
				["images/enemystamina-sheet0.png", 4567, 1, 151, 157, 24, 1, 0.503185, 0.5,[],[],0],
				["images/enemystamina-sheet0.png", 4567, 1, 176, 157, 24, 1, 0.503185, 0.5,[],[],0],
				["images/enemystamina-sheet0.png", 4567, 1, 201, 157, 24, 1, 0.503185, 0.5,[],[],0],
				["images/enemystamina-sheet0.png", 4567, 1, 226, 157, 24, 1, 0.503185, 0.5,[],[],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			1211074750124485
		]
		],
		false,
		false,
		8658981301366076,
		[]
	]
,	[
		"t53",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			1118208505445697,
			[
				["images/playerhealth-sheet0.png", 2646, 1, 1, 170, 26, 1, 0.5, 0.5,[],[],0],
				["images/playerhealth-sheet0.png", 2646, 1, 28, 170, 26, 1, 0.5, 0.5,[],[],0],
				["images/playerhealth-sheet0.png", 2646, 1, 55, 170, 26, 1, 0.5, 0.5,[],[],0],
				["images/playerhealth-sheet0.png", 2646, 1, 82, 170, 26, 1, 0.5, 0.5,[],[],0],
				["images/playerhealth-sheet0.png", 2646, 1, 109, 170, 26, 1, 0.5, 0.5,[],[],0],
				["images/playerhealth-sheet0.png", 2646, 1, 136, 170, 26, 1, 0.5, 0.5,[],[],0],
				["images/playerhealth-sheet0.png", 2646, 1, 163, 170, 26, 1, 0.5, 0.5,[],[],0],
				["images/playerhealth-sheet0.png", 2646, 1, 190, 170, 26, 1, 0.5, 0.5,[],[],0],
				["images/playerhealth-sheet0.png", 2646, 1, 217, 170, 26, 1, 0.5, 0.5,[],[],0],
				["images/playerhealth-sheet1.png", 1174, 0, 0, 170, 26, 1, 0.5, 0.5,[],[-0.482353,-0.384615,0,-0.346154,0.482353,-0.384615,0.5,0,0.488235,0.423077,0,0.423077,-0.470588,0.307692,-0.5,0],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			4438949017019038
		]
		],
		false,
		false,
		6363903884455564,
		[]
	]
,	[
		"t54",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5486534972910081,
			[
				["images/playerlabel-sheet0.png", 935, 0, 0, 117, 33, 1, 0.504274, 0.515152,[],[-0.452991,-0.333333,-0.00854754,-0.515152,0.461538,-0.393939,0.495726,-0.0303035,0.470085,0.393939,-0.00854754,0.454545,-0.444444,0.272727,-0.461539,-0.0303035],0]
			]
			]
		],
		[
		],
		false,
		false,
		7762840770909795,
		[]
	]
,	[
		"t55",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			989091311076656,
			[
				["images/playerstamina-sheet0.png", 4716, 1, 1, 157, 24, 1, 0.503185, 0.5,[],[],0],
				["images/playerstamina-sheet0.png", 4716, 1, 26, 157, 24, 1, 0.503185, 0.5,[],[],0],
				["images/playerstamina-sheet0.png", 4716, 1, 51, 157, 24, 1, 0.503185, 0.5,[],[],0],
				["images/playerstamina-sheet0.png", 4716, 1, 76, 157, 24, 1, 0.503185, 0.5,[],[],0],
				["images/playerstamina-sheet0.png", 4716, 1, 101, 157, 24, 1, 0.503185, 0.5,[],[],0],
				["images/playerstamina-sheet0.png", 4716, 1, 126, 157, 24, 1, 0.503185, 0.5,[],[],0],
				["images/playerstamina-sheet0.png", 4716, 1, 151, 157, 24, 1, 0.503185, 0.5,[],[],0],
				["images/playerstamina-sheet0.png", 4716, 1, 176, 157, 24, 1, 0.503185, 0.5,[],[],0],
				["images/playerstamina-sheet0.png", 4716, 1, 201, 157, 24, 1, 0.503185, 0.5,[],[],0],
				["images/playerstamina-sheet0.png", 4716, 1, 226, 157, 24, 1, 0.503185, 0.5,[],[],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			2546455829276388
		]
		],
		false,
		false,
		3469144226637101,
		[]
	]
,	[
		"t56",
		cr.plugins_.Spritefont2,
		false,
		[],
		0,
		0,
		["images/preloaderfont.png", 1158, 0],
		null,
		[
		],
		false,
		true,
		5613928274165753,
		[]
	]
,	[
		"t57",
		cr.plugins_.Spritefont2,
		false,
		[],
		2,
		0,
		["images/preloaderfont.png", 1158, 0],
		null,
		[
		[
			"Pin",
			cr.behaviors.Pin,
			1677190525846405
		]
,		[
			"Anchor",
			cr.behaviors.Anchor,
			5873396238767
		]
		],
		false,
		false,
		4234009643726622,
		[]
	]
,	[
		"t58",
		cr.plugins_.Spritefont2,
		false,
		[],
		1,
		0,
		["images/preloaderfont.png", 1158, 0],
		null,
		[
		[
			"Pin",
			cr.behaviors.Pin,
			9334245954732637
		]
		],
		false,
		false,
		5479644256235066,
		[]
	]
,	[
		"t59",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4192539642653891,
			[
				["images/pausedimage-sheet0.png", 705, 0, 0, 960, 640, 1, 0.5, 0.5,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		3122170448477703,
		[]
	]
,	[
		"t60",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4374907093581126,
			[
				["images/pausedlabel-sheet0.png", 2050, 0, 0, 266, 95, 1, 0.5, 0.505263,[],[-0.484962,-0.463158,0,0.326316,0.462406,-0.4,0.481203,0.442105,0,0.452632,-0.477444,0.431579],0]
			]
			]
		],
		[
		],
		false,
		false,
		2648406830506963,
		[]
	]
,	[
		"t61",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4809179803308847,
			[
				["images/indicatordamage-sheet0.png", 20152, 1, 1, 243, 63, 1, 0.502058, 0.507937,[],[-0.460905,-0.349207,-0.00411561,-0.476191,0.448559,-0.317461,0.497942,-0.0158736,0.45679,0.333333,-0.00411561,0.444444,-0.460905,0.333333,-0.497942,-0.0158736],0],
				["images/indicatordamage-sheet0.png", 20152, 1, 65, 243, 63, 1, 0.502058, 0.507937,[],[-0.460905,-0.349207,-0.00411561,-0.476191,0.448559,-0.317461,0.497942,-0.0158736,0.45679,0.333333,-0.00411561,0.444444,-0.460905,0.333333,-0.497942,-0.0158736],0],
				["images/indicatordamage-sheet0.png", 20152, 1, 129, 243, 63, 1, 0.502058, 0.507937,[],[-0.460905,-0.349207,-0.00411561,-0.492064,0.448559,-0.317461,0.497942,-0.0158736,0.45679,0.333333,-0.00411561,0.444444,-0.460905,0.333333,-0.497942,-0.0158736],0],
				["images/indicatordamage-sheet1.png", 8496, 0, 0, 243, 63, 1, 0.502058, 0.507937,[],[-0.460905,-0.349207,-0.00411561,-0.492064,0.448559,-0.317461,0.497942,-0.0158736,0.45679,0.333333,-0.00411561,0.444444,-0.460905,0.333333,-0.497942,-0.0158736],0]
			]
			]
		],
		[
		],
		false,
		false,
		6879904960550961,
		[]
	]
,	[
		"t62",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3256234042174864,
			[
				["images/indicatordamage-sheet0.png", 20152, 1, 1, 243, 63, 1, 0.502058, 0.507937,[],[-0.460905,-0.349207,-0.00411561,-0.476191,0.448559,-0.317461,0.497942,-0.0158736,0.45679,0.333333,-0.00411561,0.444444,-0.460905,0.333333,-0.497942,-0.0158736],0],
				["images/indicatordamage-sheet0.png", 20152, 1, 65, 243, 63, 1, 0.502058, 0.507937,[],[-0.460905,-0.349207,-0.00411561,-0.476191,0.448559,-0.317461,0.497942,-0.0158736,0.45679,0.333333,-0.00411561,0.444444,-0.460905,0.333333,-0.497942,-0.0158736],0],
				["images/indicatordamage-sheet0.png", 20152, 1, 129, 243, 63, 1, 0.502058, 0.507937,[],[-0.460905,-0.349207,-0.00411561,-0.492064,0.448559,-0.317461,0.497942,-0.0158736,0.45679,0.333333,-0.00411561,0.444444,-0.460905,0.333333,-0.497942,-0.0158736],0],
				["images/indicatordamage-sheet1.png", 8496, 0, 0, 243, 63, 1, 0.502058, 0.507937,[],[-0.460905,-0.349207,-0.00411561,-0.492064,0.448559,-0.317461,0.497942,-0.0158736,0.45679,0.333333,-0.00411561,0.444444,-0.460905,0.333333,-0.497942,-0.0158736],0]
			]
			]
		],
		[
		],
		false,
		false,
		6935926416334447,
		[]
	]
,	[
		"t63",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			8084268845600979,
			[
				["images/indicatordamage-sheet0.png", 20152, 1, 1, 243, 63, 1, 0.502058, 0.507937,[],[-0.460905,-0.349207,-0.00411561,-0.476191,0.448559,-0.317461,0.497942,-0.0158736,0.45679,0.333333,-0.00411561,0.444444,-0.460905,0.333333,-0.497942,-0.0158736],0],
				["images/indicatordamage-sheet0.png", 20152, 1, 65, 243, 63, 1, 0.502058, 0.507937,[],[-0.460905,-0.349207,-0.00411561,-0.476191,0.448559,-0.317461,0.497942,-0.0158736,0.45679,0.333333,-0.00411561,0.444444,-0.460905,0.333333,-0.497942,-0.0158736],0],
				["images/indicatordamage-sheet0.png", 20152, 1, 129, 243, 63, 1, 0.502058, 0.507937,[],[-0.460905,-0.349207,-0.00411561,-0.492064,0.448559,-0.317461,0.497942,-0.0158736,0.45679,0.333333,-0.00411561,0.444444,-0.460905,0.333333,-0.497942,-0.0158736],0],
				["images/indicatordamage-sheet1.png", 8496, 0, 0, 243, 63, 1, 0.502058, 0.507937,[],[-0.460905,-0.349207,-0.00411561,-0.492064,0.448559,-0.317461,0.497942,-0.0158736,0.45679,0.333333,-0.00411561,0.444444,-0.460905,0.333333,-0.497942,-0.0158736],0]
			]
			]
		],
		[
		],
		false,
		false,
		214921757132831,
		[]
	]
,	[
		"t64",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			7705232699718134,
			[
				["images/indicatordamage-sheet0.png", 20152, 1, 1, 243, 63, 1, 0.502058, 0.507937,[],[-0.460905,-0.349207,-0.00411561,-0.476191,0.448559,-0.317461,0.497942,-0.0158736,0.45679,0.333333,-0.00411561,0.444444,-0.460905,0.333333,-0.497942,-0.0158736],0],
				["images/indicatordamage-sheet0.png", 20152, 1, 65, 243, 63, 1, 0.502058, 0.507937,[],[-0.460905,-0.349207,-0.00411561,-0.476191,0.448559,-0.317461,0.497942,-0.0158736,0.45679,0.333333,-0.00411561,0.444444,-0.460905,0.333333,-0.497942,-0.0158736],0],
				["images/indicatordamage-sheet0.png", 20152, 1, 129, 243, 63, 1, 0.502058, 0.507937,[],[-0.460905,-0.349207,-0.00411561,-0.492064,0.448559,-0.317461,0.497942,-0.0158736,0.45679,0.333333,-0.00411561,0.444444,-0.460905,0.333333,-0.497942,-0.0158736],0],
				["images/indicatordamage-sheet1.png", 8496, 0, 0, 243, 63, 1, 0.502058, 0.507937,[],[-0.460905,-0.349207,-0.00411561,-0.492064,0.448559,-0.317461,0.497942,-0.0158736,0.45679,0.333333,-0.00411561,0.444444,-0.460905,0.333333,-0.497942,-0.0158736],0]
			]
			]
		],
		[
		],
		false,
		false,
		1293236930350165,
		[]
	]
,	[
		"t65",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			7788123273602101,
			[
				["images/sprite10-sheet0.png", 3651, 0, 0, 192, 94, 1, 0.5, 0.5,[],[-0.46875,-0.43617,0,-0.308511,0.427083,-0.351064,0.473958,0,0.458333,0.414894,0,0.457447,-0.458333,0.414894,-0.479167,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		7546218991868837,
		[]
	]
,	[
		"t66",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			8156600419927174,
			[
				["images/sprite11-sheet0.png", 2605, 0, 0, 214, 75, 1, 0.5, 0.506667,[],[-0.476636,-0.44,0,-0.32,0.434579,-0.32,0.476636,-0.0133336,0.46729,0.4,0,0.466666,-0.471963,0.413333,-0.448598,-0.0133336],0]
			]
			]
		],
		[
		],
		false,
		false,
		612745890497802,
		[]
	]
,	[
		"t67",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			1864821784660365,
			[
				["images/sprite8-sheet0.png", 1976, 0, 0, 159, 65, 1, 0.503145, 0.507692,[],[-0.45283,-0.384615,-0.00628969,-0.4,0.484276,-0.476923,0.427673,-0.0153843,0.45283,0.384616,-0.00628969,0.446154,-0.471698,0.415385,-0.484277,-0.0153843],0]
			]
			]
		],
		[
		],
		false,
		false,
		5038793808634167,
		[]
	]
,	[
		"t68",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5595215379170999,
			[
				["images/sprite9-sheet0.png", 2491, 0, 0, 235, 64, 1, 0.502128, 0.5,[],[-0.476596,-0.40625,-0.00425565,-0.421875,0.438298,-0.28125,0.463829,0,0.451064,0.328125,-0.00425565,0.328125,-0.489362,0.453125,-0.451064,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		993482728361801,
		[]
	]
,	[
		"t69",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6317508600448212,
			[
				["images/sprite7-sheet0.png", 4019, 0, 0, 465, 66, 1, 0.501075, 0.5,[],[-0.477419,-0.333333,-0.00215027,-0.348485,0.483871,-0.393939,0.494624,0,0.470968,0.30303,-0.00215027,0.409091,-0.47957,0.348485,-0.501075,0],0]
			]
			]
		],
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			7632540619022158
		]
		],
		false,
		false,
		4980520399995931,
		[]
	]
,	[
		"t70",
		cr.plugins_.TiledBg,
		false,
		[],
		0,
		0,
		["images/rotatescreenbg.png", 104, 1],
		null,
		[
		],
		false,
		false,
		7438859030103262,
		[]
	]
,	[
		"t71",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3307013689127087,
			[
				["images/pleaserotatescreensprite-sheet0.png", 4477, 0, 0, 300, 300, 1, 0.5, 0.5,[],[-0.47,-0.47,0,-0.49,0.463333,-0.463333,0.483333,0,0.443333,0.443333,0,0.476667,-0.47,0.47],0]
			]
			]
		],
		[
		],
		false,
		false,
		8391249008951693,
		[]
	]
,	[
		"t72",
		cr.plugins_.Function,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		1236788108482981,
		[]
		,[]
	]
,	[
		"t73",
		cr.plugins_.WebStorage,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		7509138865086223,
		[]
		,[]
	]
,	[
		"t74",
		cr.plugins_.Touch,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		4630770957691812,
		[]
		,[1]
	]
,	[
		"t75",
		cr.plugins_.Audio,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		6757747833358751,
		[]
		,[0,0,1,1,600,600,10000,1,5000,1]
	]
,	[
		"t76",
		cr.plugins_.Browser,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		2899195549151124,
		[]
		,[]
	]
,	[
		"t77",
		cr.plugins_.Keyboard,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		7662387439103809,
		[]
		,[]
	]
,	[
		"t78",
		cr.plugins_.Softgames,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		7792625082761994,
		[]
		,[77]
	]
,	[
		"t79",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			807186389101536,
			[
				["images/middledecoy-sheet0.png", 168, 0, 0, 250, 250, 1, 0.5, 0.5,[],[],3]
			]
			]
		],
		[
		],
		false,
		false,
		6801874694109801,
		[]
	]
,	[
		"t80",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			526325466684967,
			[
				["images/lblpause-sheet0.png", 2245, 0, 0, 291, 104, 1, 0.501718, 0.5,[],[-0.487973,-0.461538,-0.00343624,0.336538,0.460481,-0.394231,0.4811,0.451923,-0.477663,0.432692],0]
			]
			]
		],
		[
		],
		false,
		false,
		8175039373015149,
		[]
	]
,	[
		"t81",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			9388204844286254,
			[
				["images/pausedimage-sheet0.png", 705, 0, 0, 960, 640, 1, 0.5, 0.5,[],[],0]
			]
			]
		],
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			6881573619230557
		]
		],
		false,
		false,
		5409812236231051,
		[]
	]
,	[
		"t82",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4157017685674266,
			[
				["images/sprite3-sheet0.png", 9269, 0, 0, 172, 125, 1, 0.5, 0.504,[],[-0.430233,-0.408,0,-0.488,0.436047,-0.416,0.482558,-0.00800002,0.465116,0.448,0,0.48,-0.44186,0.416,-0.482558,-0.00800002],0]
			]
			]
		],
		[
		],
		false,
		false,
		288957258779118,
		[]
	]
,	[
		"t83",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3990683972970294,
			[
				["images/sprite6-sheet0.png", 11391, 0, 0, 180, 150, 1, 0.5, 0.5,[],[-0.466667,-0.46,0,-0.486667,0.455556,-0.446667,0.483333,0,0.438889,0.426667,0,0.5,-0.438889,0.426667,-0.488889,0],0],
				["images/sprite6-sheet1.png", 8077, 0, 0, 174, 146, 1, 0.5, 0.5,[],[-0.465517,-0.458904,0,-0.486301,0.448276,-0.438356,0.454023,0,0.413793,0.39726,0,0.465753,-0.431035,0.417808,-0.488506,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		7512759518283202,
		[]
	]
,	[
		"t84",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			1364312046005463,
			[
				["images/sprite12-sheet0.png", 10879, 0, 0, 180, 156, 1, 0.5, 0.5,[],[-0.411111,-0.397436,0,-0.5,0.4,-0.384615,0.488889,0,0.361111,0.339744,0,0.5,-0.4,0.384615,-0.494444,0],0],
				["images/sprite12-sheet2.png", 8575, 0, 0, 174, 152, 1, 0.5, 0.5,[],[-0.413793,-0.401316,0,-0.5,0.402299,-0.388158,0.45977,0,0.33908,0.315789,0,0.467105,-0.402299,0.388158,-0.494253,0],0],
				["images/sprite12-sheet1.png", 5604, 0, 0, 180, 156, 1, 0.5, 0.5,[],[-0.411111,-0.397436,0,-0.5,0.4,-0.384615,0.488889,0,0.361111,0.339744,0,0.5,-0.4,0.384615,-0.494444,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		9685591505165122,
		[]
	]
,	[
		"t85",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			8729650024921017,
			[
				["images/sprite2-sheet0.png", 12555, 0, 0, 183, 152, 1, 0.502732, 0.5,[],[-0.464481,-0.453947,-0.00546423,-0.5,0.448088,-0.440789,0.480875,0,0.442623,0.434211,-0.00546423,0.486842,-0.448087,0.434211,-0.491803,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		2106213309548782,
		[]
	]
,	[
		"t86",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5266479570639591,
			[
				["images/sprite13-sheet0.png", 12015, 0, 0, 184, 152, 1, 0.5, 0.5,[],[-0.418478,-0.401316,0,-0.493421,0.413043,-0.394737,0.48913,0,0.467391,0.460526,0,0.5,-0.483696,0.480263,-0.472826,0],0],
				["images/sprite13-sheet2.png", 9241, 0, 0, 178, 147, 1, 0.5, 0.503401,[],[-0.421348,-0.408163,0,-0.496599,0.410112,-0.394557,0.460674,-0.00680235,0.44382,0.428572,0,0.469388,-0.47191,0.462585,-0.47191,-0.00680235],0],
				["images/sprite13-sheet1.png", 6042, 0, 0, 184, 151, 1, 0.5, 0.503311,[],[-0.418478,-0.403974,0,-0.496689,0.413043,-0.397351,0.48913,-0.00662228,0.467391,0.456954,0,0.496689,-0.483696,0.476821,-0.472826,-0.00662228],0]
			]
			]
		],
		[
		],
		false,
		false,
		3411286700404926,
		[]
	]
,	[
		"t87",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			7165331333378586,
			[
				["images/sprite14-sheet0.png", 11942, 0, 0, 180, 175, 1, 0.5, 0.502857,[],[-0.427778,-0.428571,0,-0.502857,0.422222,-0.422857,0.472222,-0.00571415,0.444444,0.44,0,0.485714,-0.427778,0.422857,-0.488889,-0.00571415],0],
				["images/sprite14-sheet1.png", 5960, 0, 0, 180, 175, 1, 0.5, 0.502857,[],[-0.433333,-0.434286,0,-0.502857,0.422222,-0.422857,0.472222,-0.00571415,0.444444,0.44,0,0.485714,-0.427778,0.422857,-0.488889,-0.00571415],0]
			]
			]
		],
		[
		],
		false,
		false,
		4164848901499993,
		[]
	]
,	[
		"t88",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			9828271286627745,
			[
				["images/fight_1-sheet0.png", 856, 0, 0, 56, 47, 1, 0.5, 0.510638,[],[-0.464286,-0.468085,0,-0.297872,0.482143,-0.489362,0.25,-0.0212763,0.464286,0.446809,0,0.234043,-0.464286,0.446809,-0.339286,-0.0212763],0],
				["images/fight_1-sheet1.png", 1028, 0, 0, 56, 47, 1, 0.5, 0.510638,[],[-0.464286,-0.468085,0,-0.297872,0.482143,-0.489362,0.25,-0.0212763,0.464286,0.446809,0,0.234043,-0.464286,0.446809,-0.339286,-0.0212763],0]
			]
			]
		],
		[
		],
		false,
		false,
		2816528318743252,
		[]
	]
,	[
		"t89",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6138738797576342,
			[
				["images/fight_1-sheet0.png", 856, 0, 0, 56, 47, 1, 0.5, 0.510638,[],[-0.464286,-0.468085,0,-0.297872,0.482143,-0.489362,0.25,-0.0212763,0.464286,0.446809,0,0.234043,-0.464286,0.446809,-0.339286,-0.0212763],0],
				["images/fight_1-sheet1.png", 1028, 0, 0, 56, 47, 1, 0.5, 0.510638,[],[-0.464286,-0.468085,0,-0.297872,0.482143,-0.489362,0.25,-0.0212763,0.464286,0.446809,0,0.234043,-0.464286,0.446809,-0.339286,-0.0212763],0]
			]
			]
		],
		[
		],
		false,
		false,
		2849423106665419,
		[]
	]
,	[
		"t90",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2715694086548424,
			[
				["images/fight_1-sheet0.png", 856, 0, 0, 56, 47, 1, 0.5, 0.510638,[],[-0.464286,-0.468085,0,-0.297872,0.482143,-0.489362,0.25,-0.0212763,0.464286,0.446809,0,0.234043,-0.464286,0.446809,-0.339286,-0.0212763],0],
				["images/fight_1-sheet1.png", 1028, 0, 0, 56, 47, 1, 0.5, 0.510638,[],[-0.464286,-0.468085,0,-0.297872,0.482143,-0.489362,0.25,-0.0212763,0.464286,0.446809,0,0.234043,-0.464286,0.446809,-0.339286,-0.0212763],0]
			]
			]
		],
		[
		],
		false,
		false,
		8286318246723484,
		[]
	]
,	[
		"t91",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			525244009265942,
			[
				["images/fight_1-sheet0.png", 856, 0, 0, 56, 47, 1, 0.5, 0.510638,[],[-0.464286,-0.468085,0,-0.297872,0.482143,-0.489362,0.25,-0.0212763,0.464286,0.446809,0,0.234043,-0.464286,0.446809,-0.339286,-0.0212763],0],
				["images/fight_1-sheet1.png", 1028, 0, 0, 56, 47, 1, 0.5, 0.510638,[],[-0.464286,-0.468085,0,-0.297872,0.482143,-0.489362,0.25,-0.0212763,0.464286,0.446809,0,0.234043,-0.464286,0.446809,-0.339286,-0.0212763],0]
			]
			]
		],
		[
		],
		false,
		false,
		3884882345924421,
		[]
	]
,	[
		"t92",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			9393074360132741,
			[
				["images/fight_1-sheet0.png", 856, 0, 0, 56, 47, 1, 0.5, 0.510638,[],[-0.464286,-0.468085,0,-0.297872,0.482143,-0.489362,0.25,-0.0212763,0.464286,0.446809,0,0.234043,-0.464286,0.446809,-0.339286,-0.0212763],0],
				["images/fight_1-sheet1.png", 1028, 0, 0, 56, 47, 1, 0.5, 0.510638,[],[-0.464286,-0.468085,0,-0.297872,0.482143,-0.489362,0.25,-0.0212763,0.464286,0.446809,0,0.234043,-0.464286,0.446809,-0.339286,-0.0212763],0]
			]
			]
		],
		[
		],
		false,
		false,
		1897515739624787,
		[]
	]
,	[
		"t93",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			9667856127077065,
			[
				["images/fight_1-sheet0.png", 856, 0, 0, 56, 47, 1, 0.5, 0.510638,[],[-0.464286,-0.468085,0,-0.297872,0.482143,-0.489362,0.25,-0.0212763,0.464286,0.446809,0,0.234043,-0.464286,0.446809,-0.339286,-0.0212763],0],
				["images/fight_1-sheet1.png", 1028, 0, 0, 56, 47, 1, 0.5, 0.510638,[],[-0.464286,-0.468085,0,-0.297872,0.482143,-0.489362,0.25,-0.0212763,0.464286,0.446809,0,0.234043,-0.464286,0.446809,-0.339286,-0.0212763],0]
			]
			]
		],
		[
		],
		false,
		false,
		7863704009458861,
		[]
	]
,	[
		"t94",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			1137314586441741,
			[
				["images/fight_1-sheet0.png", 856, 0, 0, 56, 47, 1, 0.5, 0.510638,[],[-0.464286,-0.468085,0,-0.297872,0.482143,-0.489362,0.25,-0.0212763,0.464286,0.446809,0,0.234043,-0.464286,0.446809,-0.339286,-0.0212763],0],
				["images/fight_1-sheet1.png", 1028, 0, 0, 56, 47, 1, 0.5, 0.510638,[],[-0.464286,-0.468085,0,-0.297872,0.482143,-0.489362,0.25,-0.0212763,0.464286,0.446809,0,0.234043,-0.464286,0.446809,-0.339286,-0.0212763],0]
			]
			]
		],
		[
		],
		false,
		false,
		5200374674860139,
		[]
	]
,	[
		"t95",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2783504394182821,
			[
				["images/fight_1-sheet0.png", 856, 0, 0, 56, 47, 1, 0.5, 0.510638,[],[-0.464286,-0.468085,0,-0.297872,0.482143,-0.489362,0.25,-0.0212763,0.464286,0.446809,0,0.234043,-0.464286,0.446809,-0.339286,-0.0212763],0],
				["images/fight_1-sheet1.png", 1028, 0, 0, 56, 47, 1, 0.5, 0.510638,[],[-0.464286,-0.468085,0,-0.297872,0.482143,-0.489362,0.25,-0.0212763,0.464286,0.446809,0,0.234043,-0.464286,0.446809,-0.339286,-0.0212763],0]
			]
			]
		],
		[
		],
		false,
		false,
		8862948469725791,
		[]
	]
,	[
		"t96",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			9689625242909353,
			[
				["images/cantbuydamage-sheet0.png", 4776, 0, 0, 198, 152, 1, 0.5, 0.5,[],[-0.373737,-0.335526,0,-0.355263,0.308081,-0.25,0.358586,0,0.358586,0.315789,0,0.473684,-0.434343,0.414474,-0.5,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		8312618661497949,
		[]
	]
,	[
		"t97",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			8096747253172672,
			[
				["images/cantbuyhealth-sheet0.png", 3684, 0, 0, 178, 139, 1, 0.5, 0.503597,[],[-0.398876,-0.374101,0,-0.496403,0.404494,-0.381295,0.47191,-0.00719413,0.404494,0.374101,0,0.467626,-0.41573,0.388489,-0.494382,-0.00719413],0]
			]
			]
		],
		[
		],
		false,
		false,
		4918688069162087,
		[]
	]
,	[
		"t98",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			7882542868382547,
			[
				["images/cantbuyspeed-sheet0.png", 5170, 0, 0, 172, 132, 1, 0.5, 0.5,[],[-0.401163,-0.371212,0,-0.492424,0.412791,-0.386364,0.476744,0,0.406977,0.378788,0,0.469697,-0.412791,0.386364,-0.494186,0],0]
			]
			]
		],
		[
		],
		false,
		false,
		2129206279280588,
		[]
	]
,	[
		"t99",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4024862623952126,
			[
				["images/cantbuystamina-sheet0.png", 4835, 0, 0, 176, 143, 1, 0.5, 0.503497,[],[-0.409091,-0.391609,0,-0.503497,0.397727,-0.377623,0.471591,-0.00699252,0.397727,0.370629,0,0.468531,-0.431818,0.412587,-0.5,-0.00699252],0]
			]
			]
		],
		[
		],
		false,
		false,
		9424865251389694,
		[]
	]
,	[
		"t100",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			906327048195665,
			[
				["images/sprite4-sheet0.png", 1576, 0, 0, 164, 42, 1, 0.5, 0.5,[],[-0.481707,-0.428571,0.439024,-0.261905,0.481707,0.428571,0,0.5,-0.481707,0.428571],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			6095825190913012
		]
		],
		false,
		false,
		6170846219940095,
		[]
	]
,	[
		"t101",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3749415083451575,
			[
				["images/playerblock-sheet0.png", 4714, 0, 0, 126, 52, 1, 0.5, 0.5,[],[-0.468254,-0.423077,0,-0.461538,0.428571,-0.326923,0.5,0,0.460317,0.403846,-0.452381,0.384615,-0.492063,0],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			1965059834001874
		]
		],
		false,
		false,
		2571384740363826,
		[]
	]
,	[
		"t102",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			6818947794784114,
			[
				["images/enemyblock-sheet0.png", 5469, 0, 0, 120, 81, 1, 0.5, 0.506173,[],[-0.45,-0.432099,0,-0.382716,0.316667,-0.234568,0.466667,-0.0123459,0.375,0.308642,0,0.271605,-0.3,0.197531,-0.5,-0.0123459],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			4543060759390245
		]
		],
		false,
		false,
		7788496200582194,
		[]
	]
,	[
		"t103",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3533621316294828,
			[
				["images/playerhit-sheet0.png", 3180, 0, 0, 137, 113, 1, 0.50365, 0.504425,[],[-0.379562,-0.353983,-0.00729966,-0.327434,0.248175,-0.20354,0.270073,-0.00884974,0.270073,0.221239,-0.00729966,0.433628,-0.350365,0.309734,-0.430657,-0.00884974],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			5425331879829302
		]
		],
		false,
		false,
		4416339808943683,
		[]
	]
,	[
		"t104",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			1599224162576541,
			[
				["images/enemyhit-sheet0.png", 3550, 0, 0, 146, 127, 1, 0.5, 0.503937,[],[-0.260274,-0.228346,0,-0.299213,0.253425,-0.220472,0.493151,-0.00787401,0.287671,0.251969,0,0.338583,-0.212329,0.165354,-0.479452,-0.00787401],0]
			]
			]
		],
		[
		[
			"Pin",
			cr.behaviors.Pin,
			3171121091831998
		]
		],
		false,
		false,
		7381379301242356,
		[]
	]
,	[
		"t105",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		3836278170853527,
		[]
	]
,	[
		"t106",
		cr.plugins_.SpilApiPlugin,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		1131215708099466,
		[]
		,[77]
	]
,	[
		"t107",
		cr.plugins_.HTML_Div_Pode,
		false,
		[],
		1,
		0,
		null,
		null,
		[
		[
			"Anchor",
			cr.behaviors.Anchor,
			8336769766162738
		]
		],
		false,
		false,
		764794691292791,
		[]
	]
,	[
		"t108",
		cr.plugins_.Sprite,
		true,
		[2704670672347368,9202822253816884,9830143538308716,5356762070653879,5887638432860489],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		2298337239809099,
		[]
	]
,	[
		"t109",
		cr.plugins_.Sprite,
		true,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		3127975835470516,
		[]
	]
,	[
		"t110",
		cr.plugins_.Sprite,
		true,
		[7613650602025349,7596307177686458,6538994869587576,2956437823729678,2601925573594676,1287007675851202,4434124633299555,9904151470900652,5935432685672792,7564520619801652,6788973999969782,3333554007344936,5319909183900203],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		5150242488497681,
		[]
	]
	],
	[
		[108,21,13,20,12,11,18,19,14,28,16,10,17,8,15,7,23,24,25,26,6,22,9,27]
,		[109,23,24,25,26,27,96,97,98,99,50,51,52,88,89,90,91,92,93,94,95,49,61,62,63,64,79,53,54,55,65,66,84,86,87,85,82,83,69,67,68]
,		[110,5,1,3,4]
	],
	[
	[
		"Instancer",
		1280,
		1024,
		false,
		null,
		7658412089052483,
		[
		[
			"Layer 0",
			0,
			6074600041116972,
			true,
			[255, 255, 255],
			false,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[342, 125, 0, 200, 200, 0, 0, 1, 0, 0, 0, 0, []],
				70,
				34,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
,			[
				[437, 231, 0, 300, 300, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				71,
				35,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-50, 155, 0, 200, 202, 0, 0, 1, 0.725, 0.950495, 0, 0, []],
				1,
				17,
				[
					[0],
					["offense"],
					[0],
					[0],
					[0],
					[0],
					[0],
					[0],
					[0],
					[0],
					[0],
					[0],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[114, 440, 0, 235, 231, 0, 0, 1, 0.719149, 0.95671, 0, 0, []],
				3,
				37,
				[
					[0],
					["offense"],
					[0],
					[0],
					[0],
					[0],
					[0],
					[0],
					[0],
					[0],
					[0],
					[0],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[176, 1, 0, 217, 210, 0, 0, 1, 0.668203, 0.966667, 0, 0, []],
				4,
				43,
				[
					[0],
					["offense"],
					[0],
					[0],
					[0],
					[0],
					[0],
					[0],
					[0],
					[0],
					[0],
					[0],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[539, -53, 0, 142, 294, 0, 0, 1, 0.598592, 0.965986, 0, 0, []],
				5,
				44,
				[
					[0],
					["offense"],
					[0],
					[0],
					[0],
					[0],
					[0],
					[0],
					[0],
					[0],
					[0],
					[0],
					[0]
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
		],
		[
		],
		[]
	]
,	[
		"PreloaderScreen",
		1003,
		590,
		true,
		"PreloaderSheet",
		239069000006803,
		[
		[
			"Layer 0",
			0,
			1970971971653387,
			true,
			[0, 51, 103],
			false,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[337, 340, 0, 290, 55, 0, 0, 1, 0, 0, 0, 0, []],
				56,
				27,
				[
				],
				[
				],
				[
					20,
					27,
					"1234567890%",
					"1",
					1,
					0,
					1,
					1,
					0,
					0,
					0,
					0
				]
			]
,			[
				[483, 291, 0, 131, 80, 0, 0, 1, 0.503817, 0.5, 0, 0, []],
				33,
				28,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
		],
		[
		],
		[]
	]
,	[
		"GameplayScreen",
		1003,
		590,
		false,
		"GameplaySheet",
		9812587079298905,
		[
		[
			"Layer 0",
			0,
			9555545183942688,
			true,
			[255, 255, 255],
			false,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[503, 521, 0, 1012, 259, 0, 0, 1, 0.5, 0.50193, 0, 0, []],
				2,
				22,
				[
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[503, 180, 0, 1021.97, 457.811, 0, 0, 1, 0.5, 0.501104, 0, 0, []],
				29,
				9,
				[
				],
				[
				[
					0,
					0,
					1,
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Layer 1",
			1,
			6251458967265977,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[279, 383, 0, 63, 79, 0, 0, 1, 0.507937, 0.506329, 0, 0, []],
				46,
				38,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[911, 425, 0, 114, 42, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				47,
				39,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[346, 78, 0, 157, 24, 0, 0, 1, 0.503185, 0.5, 0, 0, []],
				55,
				40,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[620, 77, 0, 157, 24, 0, 0, 1, 0.503185, 0.5, 0, 0, []],
				52,
				41,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Layer 2",
			2,
			7265986242155373,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 3",
			3,
			1509233018781837,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[155.503, 465.238, 0, 171.012, 213, 0, 0, 1, 0.388235, 0.948357, 0, 0, []],
				0,
				16,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[344.25, 49.9787, 0, 170, 26, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				53,
				18,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[619.669, 49.1607, 0, 170, 26, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				50,
				19,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Layer 4",
			4,
			8927359304871731,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 5",
			5,
			2962103847455284,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 6",
			6,
			1086131131797997,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 7",
			7,
			2000965916471854,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 8",
			8,
			8374563286342229,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"UI",
			9,
			2400276121689785,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[952.274, 55.9092, 0, 94, 100, 0, 0, 1, 0.510638, 0.5, 0, 0, []],
				6,
				12,
				[
					[0],
					[""],
					[0],
					[0],
					[0]
				],
				[
				[
					1,
					0,
					0,
					0,
					1
				]
				],
				[
					1,
					"Default",
					0,
					1
				]
			]
,			[
				[953.09, 54.9119, 0, 94, 100, 0, 0, 1, 0.510638, 0.5, 0, 0, []],
				7,
				11,
				[
					[0],
					[""],
					[0],
					[0],
					[0]
				],
				[
				[
					1,
					0,
					0,
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[843, 58, 0, 94, 100, 0, 0, 1, 0.510638, 0.5, 0, 0, []],
				16,
				77,
				[
					[0],
					["onPause"],
					[0],
					[0],
					[0]
				],
				[
				[
					1,
					0,
					0,
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[87, 514, 0, 146, 100, 0, 0, 1, 0.513699, 0.5, 0, 0, []],
				18,
				10,
				[
					[0],
					["onGoLeft"],
					[0],
					[0],
					[0]
				],
				[
				[
					0,
					0,
					0,
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[239, 513, 0, 145, 99, 0, 0, 1, 0.510345, 0.50505, 0, 0, []],
				19,
				13,
				[
					[0],
					["onGoRight"],
					[0],
					[0],
					[0]
				],
				[
				[
					0,
					0,
					0,
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[918, 520, 0, 145, 100, 0, 0, 1, 0.510345, 0.5, 0, 0, []],
				20,
				14,
				[
					[0],
					["onDefense"],
					[0],
					[0],
					[0]
				],
				[
				[
					1,
					0,
					0,
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[764, 521, 0, 145, 100, 0, 0, 1, 0.510345, 0.5, 0, 0, []],
				21,
				15,
				[
					[0],
					["onAttack"],
					[0],
					[0],
					[0]
				],
				[
				[
					1,
					0,
					0,
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[494, 227, 0, 371, 140, 0, 0, 1, 0.501348, 0.5, 0, 0, []],
				43,
				29,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[482, 42, 0, 99, 72, 0, 0, 1, 0.50505, 0.5, 0, 0, []],
				49,
				30,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[341.092, 20.9092, 0, 117, 33, 0, 0, 1, 0.504274, 0.515152, 0, 0, []],
				54,
				32,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[615.523, 19.72, 0, 123, 34, 0, 0, 1, 0.504065, 0.5, 0, 0, []],
				51,
				36,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[764, 520, 0, 111, 83, 0, 0, 1, 0.504505, 0.506024, 0, 0, []],
				48,
				42,
				[
				],
				[
				[
					1,
					0,
					0,
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[165, 237, 0, 164, 42, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				100,
				98,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[155, 358, 0, 126, 52, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				101,
				99,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-95, 335, 0, 120, 81, 0, 0, 1, 0.5, 0.506173, 0, 0, []],
				102,
				100,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[158, 362, 0, 137, 113, 0, 0, 1, 0.50365, 0.504425, 0, 0, []],
				103,
				101,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[-107, 455, 0, 146, 127, 0, 0, 1, 0.5, 0.503937, 0, 0, []],
				104,
				102,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"LevelFailed",
			10,
			9659610820115042,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[494, 130, 0, 422.563, 239.628, 0, 0, 1, 0.500952, 0.502778, 0, 0, []],
				35,
				87,
				[
				],
				[
				[
					0,
					0,
					1,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[207, 517, 0, 383, 125, 0, 0, 1, 0.511749, 0.504, 0, 0, []],
				13,
				55,
				[
					[0],
					["onBackToMain"],
					[0],
					[0],
					[0]
				],
				[
				[
					0,
					0,
					0,
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[806, 515, 0, 363, 118, 0, 0, 1, 0.506887, 0.5, 0, 0, []],
				15,
				60,
				[
					[0],
					["onRestartGameplay"],
					[0],
					[0],
					[0]
				],
				[
				[
					1,
					0,
					0,
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"LevelCompleted",
			11,
			5259597439017547,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[492, 171, 0, 336.692, 318.469, 0, 0, 1, 0.5, 0.501362, 0, 0, []],
				38,
				53,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[809, 513, 0, 347, 113, 0, 0, 1, 0.507205, 0.504425, 0, 0, []],
				14,
				73,
				[
					[0],
					["onContinue"],
					[0],
					[0],
					[0]
				],
				[
				[
					1,
					0,
					0,
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Tutorial",
			12,
			3975593364477363,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[543, 279, 0, 671.475, 353.276, 0, 0, 1, 0.501244, 0.501182, 0, 0, []],
				32,
				21,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[534, 234, 0, 333.079, 103.039, 0, 0, 1, 0.507205, 0.504425, 0, 0, []],
				9,
				82,
				[
					[0],
					["onCloseTutorial"],
					[0],
					[0],
					[0]
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Pause",
			13,
			7443761749389986,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[500.5, 301, 0, 1027, 640, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				81,
				78,
				[
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[505, 216, 0, 291, 104, 0, 0, 1, 0.501718, 0.5, 0, 0, []],
				80,
				79,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[203, 520, 0, 383, 125, 0, 0, 1, 0.506527, 0.504, 0, 0, []],
				10,
				80,
				[
					[0],
					["onBackToMain"],
					[0],
					[0],
					[0]
				],
				[
				[
					0,
					0,
					0,
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[819, 523, 0, 347, 113, 0, 0, 1, 0.507205, 0.504425, 0, 0, []],
				17,
				81,
				[
					[0],
					["onUnpause"],
					[0],
					[0],
					[0]
				],
				[
				[
					1,
					0,
					0,
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[14, 14, 0, 11, 47, 0, 0, 1, 0, 0, 0, 0, []],
				107,
				104,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					1
				]
				],
				[
					1,
					"",
					"",
					"my_div"
				]
			]
,			[
				[505, 355, 0, 356, 116, 0, 0, 1, 0.508427, 0.5, 0, 0, []],
				28,
				109,
				[
					[0],
					["moreGames"],
					[0],
					[0],
					[0]
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
		],
		[
		],
		[]
	]
,	[
		"CoverScreen",
		1003,
		590,
		true,
		"CoverSheet",
		6897618675642037,
		[
		[
			"Layer 0",
			0,
			7706322113956402,
			true,
			[255, 255, 255],
			false,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[502, 295, 0, 1008, 600, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				42,
				5,
				[
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Layer 1",
			1,
			5914485601469401,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 2",
			2,
			613265390214671,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[796, 508, 0, 390, 127, 0, 0, 1, 0.507692, 0.503937, 0, 0, []],
				8,
				8,
				[
					[0],
					["gotoGameplay"],
					[0],
					[0],
					[0]
				],
				[
				[
					1,
					0,
					0,
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Layer 3",
			3,
			8516591793309167,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[12, 16, 0, 23, 47, 0, 0, 1, 0, 0, 0, 0, []],
				107,
				103,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					1
				]
				],
				[
					1,
					"",
					"",
					"my_div"
				]
			]
,			[
				[212, 508, 0, 356, 116, 0, 0, 1, 0.508427, 0.5, 0, 0, []],
				28,
				108,
				[
					[0],
					["moreGames"],
					[0],
					[0],
					[0]
				],
				[
				[
					0,
					0,
					0,
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Layer 4",
			4,
			5478167902103877,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[950, 59, 0, 94, 100, 0, 0, 1, 0.510638, 0.5, 0, 0, []],
				6,
				31,
				[
					[0],
					[""],
					[0],
					[0],
					[0]
				],
				[
				[
					1,
					0,
					0,
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[949, 59, 0, 94, 100, 0, 0, 1, 0.510638, 0.5, 0, 0, []],
				7,
				7,
				[
					[0],
					[""],
					[0],
					[0],
					[0]
				],
				[
				[
					1,
					0,
					0,
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[717, 154, 0, 568, 253, 0, 0, 1, 0.503521, 0.501976, 0, 0, []],
				30,
				6,
				[
				],
				[
				[
					1,
					0,
					0,
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Layer 5",
			5,
			3224974471244114,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 6",
			6,
			7137302865289483,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 7",
			7,
			3303684864323738,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 8",
			8,
			6073433856073636,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 9",
			9,
			9242657230092606,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 10",
			10,
			3292453628160463,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 11",
			11,
			8347387504930226,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
		],
		[
		],
		[]
	]
,	[
		"StorySheet",
		1003,
		590,
		true,
		"StorySheet",
		5960145502547985,
		[
		[
			"Layer 0",
			0,
			8247103117156284,
			true,
			[255, 255, 255],
			false,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[500, 295, 0, 1008, 600, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				39,
				23,
				[
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Layer 1",
			1,
			4329735544055241,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[500, 295, 0, 1008, 600, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				40,
				24,
				[
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Layer 2",
			2,
			4037889368319468,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[500, 295, 0, 1008, 600, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				41,
				25,
				[
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Layer 3",
			3,
			1882629521609279,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 4",
			4,
			3118347746683908,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[946, 60, 0, 94, 100, 0, 0, 1, 0.510638, 0.5, 0, 0, []],
				6,
				271,
				[
					[0],
					[""],
					[0],
					[0],
					[0]
				],
				[
				[
					1,
					0,
					0,
					0,
					1
				]
				],
				[
					1,
					"Default",
					0,
					1
				]
			]
,			[
				[946, 58, 0, 94, 100, 0, 0, 1, 0.510638, 0.5, 0, 0, []],
				7,
				270,
				[
					[0],
					[""],
					[0],
					[0],
					[0]
				],
				[
				[
					1,
					0,
					0,
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[817, 521, 0, 347, 113, 0, 0, 1, 0.507205, 0.504425, 0, 0, []],
				9,
				92,
				[
					[0],
					["onStoryContinue"],
					[0],
					[0],
					[0]
				],
				[
				[
					1,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[204, 518, 0, 279, 113, 0, 0, 1, 0.505376, 0.504425, 0, 0, []],
				22,
				26,
				[
					[0],
					["onSkipStory"],
					[0],
					[0],
					[0]
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Layer 5",
			5,
			8315291667211825,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 6",
			6,
			3021835256976487,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 7",
			7,
			9474012638515804,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 8",
			8,
			3952439015941174,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 9",
			9,
			9357525028688822,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 10",
			10,
			2821446852949637,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 11",
			11,
			5079055460560224,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[17, 17, 0, 23, 47, 0, 0, 1, 0, 0, 0, 0, []],
				107,
				105,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					1
				]
				],
				[
					1,
					"",
					"",
					"my_div"
				]
			]
			],
			[			]
		]
		],
		[
		],
		[]
	]
,	[
		"GameCompleted",
		1003,
		590,
		false,
		"GameCompleted",
		9326933310661357,
		[
		[
			"Layer 0",
			0,
			3929606354234013,
			true,
			[0, 105, 158],
			false,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[505.189, 294.901, 0, 1014.37, 603.789, 0, 0, 1, 0.500992, 0.501667, 0, 0, []],
				37,
				57,
				[
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[805, 510, 0, 383, 125, 0, 0, 1, 0.506527, 0.504, 0, 0, []],
				10,
				516,
				[
					[0],
					[""],
					[0],
					[0],
					[0]
				],
				[
				[
					1,
					0,
					0,
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[948, 59, 0, 94, 100, 0, 0, 1, 0.510638, 0.5, 0, 0, []],
				7,
				517,
				[
					[0],
					[""],
					[0],
					[0],
					[0]
				],
				[
				[
					1,
					0,
					0,
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[948, 57, 0, 94, 100, 0, 0, 1, 0.510638, 0.5, 0, 0, []],
				6,
				518,
				[
					[0],
					[""],
					[0],
					[0],
					[0]
				],
				[
				[
					1,
					0,
					0,
					0,
					1
				]
				],
				[
					1,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Layer 1",
			1,
			6096698038224282,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 2",
			2,
			1945066083300738,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 3",
			3,
			4003154653727669,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 4",
			4,
			6369238607544071,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 5",
			5,
			260231373043357,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 6",
			6,
			9248495193207355,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 7",
			7,
			6613650871203564,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 8",
			8,
			6372005933525746,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 9",
			9,
			7357687186833974,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 10",
			10,
			6558069456798909,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 11",
			11,
			3176914713201354,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[203, 511, 0, 356, 116, 0, 0, 1, 0.508427, 0.5, 0, 0, []],
				28,
				110,
				[
					[0],
					["moreGames"],
					[0],
					[0],
					[0]
				],
				[
				[
					0,
					0,
					0,
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
		],
		[
		],
		[]
	]
,	[
		"PreBattleScreen",
		1003,
		590,
		false,
		"PreBattleSheet",
		9778278264600748,
		[
		[
			"Layer 0",
			0,
			6203501418844793,
			true,
			[255, 255, 255],
			false,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[503.387, 297.401, 0, 1015.77, 596.802, 0, 0, 1, 0.500495, 0.5, 0, 0, []],
				45,
				45,
				[
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[858.714, 534.724, 0, 272.868, 88.8589, 0, 0, 1, 0.507205, 0.504425, 0, 0, []],
				17,
				47,
				[
					[0],
					["onContinue"],
					[0],
					[0],
					[0]
				],
				[
				[
					1,
					0,
					0,
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[945, 61, 0, 94, 100, 0, 0, 1, 0.510638, 0.5, 0, 0, []],
				6,
				49,
				[
					[0],
					[""],
					[0],
					[0],
					[0]
				],
				[
				[
					1,
					0,
					0,
					0,
					1
				]
				],
				[
					1,
					"Default",
					0,
					1
				]
			]
,			[
				[945, 63, 0, 94, 100, 0, 0, 1, 0.510638, 0.5, 0, 0, []],
				7,
				50,
				[
					[0],
					[""],
					[0],
					[0],
					[0]
				],
				[
				[
					1,
					0,
					0,
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[486.951, 189.515, 0, 124.262, 90.307, 0, 0, 1, 0.5, 0.504, 0, 0, []],
				82,
				52,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[204.317, 399.432, 0, 173.179, 144.316, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				83,
				59,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[398.172, 393.495, 0, 173.8, 150.627, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				84,
				51,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[488.714, 72.6998, 0, 164.456, 136.597, 0, 0, 1, 0.502732, 0.5, 0, 0, []],
				85,
				56,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[597.657, 389.344, 0, 172.571, 142.558, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				86,
				58,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[793.356, 403.269, 0, 169.069, 164.373, 0, 0, 1, 0.5, 0.502857, 0, 0, []],
				87,
				83,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[158.003, 299.701, 0, 56, 47, 0, 0, 1, 0.5, 0.510638, 0, 0, []],
				88,
				48,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[239.46, 299.702, 0, 56, 47, 0, 0, 1, 0.5, 0.510638, 0, 0, []],
				89,
				85,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[350.823, 299.702, 0, 56, 47, 0, 0, 1, 0.5, 0.510638, 0, 0, []],
				90,
				86,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[436.367, 299.701, 0, 56, 47, 0, 0, 1, 0.5, 0.510638, 0, 0, []],
				91,
				88,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[553.551, 297.793, 0, 56, 47, 0, 0, 1, 0.5, 0.510638, 0, 0, []],
				92,
				89,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[638.005, 298.611, 0, 56, 47, 0, 0, 1, 0.5, 0.510638, 0, 0, []],
				93,
				90,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[748.096, 299.701, 0, 56, 47, 0, 0, 1, 0.5, 0.510638, 0, 0, []],
				94,
				91,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[833.369, 299.701, 0, 56, 47, 0, 0, 1, 0.5, 0.510638, 0, 0, []],
				95,
				93,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[9.27795, 9.51927, 0, 12.0916, 47, 0, 0, 1, 0, 0, 0, 0, []],
				107,
				106,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					1
				]
				],
				[
					1,
					"",
					"",
					"my_div"
				]
			]
,			[
				[148.72, 534.918, 0, 272.648, 88.8402, 0, 0, 1, 0.508427, 0.5, 0, 0, []],
				28,
				112,
				[
					[0],
					["moreGames"],
					[0],
					[0],
					[0]
				],
				[
				[
					0,
					0,
					0,
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Layer 1",
			1,
			6528632376413992,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 2",
			2,
			5817489581985156,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 3",
			3,
			5865018703785844,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 4",
			4,
			954713094051518,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 5",
			5,
			3736467126430913,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 6",
			6,
			4492589266505463,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 7",
			7,
			8624702102001479,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 8",
			8,
			672904062715353,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 9",
			9,
			7339441439155855,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 10",
			10,
			2520846931786413,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 11",
			11,
			7120216184542411,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 12",
			12,
			2952924302231042,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 13",
			13,
			2619723676226128,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
		],
		[
		],
		[]
	]
,	[
		"UpgradeScreen",
		1003,
		590,
		false,
		"UpgradeSheet",
		8029797696591668,
		[
		[
			"Layer 0",
			0,
			7925565615358124,
			true,
			[255, 255, 255],
			false,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[503.387, 297.401, 0, 1015.77, 596.802, 0, 0, 1, 0.500495, 0.5, 0, 0, []],
				45,
				46,
				[
				],
				[
				[
					0,
					0,
					1,
					1,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[947, 60, 0, 94, 100, 0, 0, 1, 0.510638, 0.5, 0, 0, []],
				6,
				61,
				[
					[0],
					[""],
					[0],
					[0],
					[0]
				],
				[
				[
					1,
					0,
					0,
					0,
					1
				]
				],
				[
					1,
					"Default",
					0,
					1
				]
			]
,			[
				[947, 62, 0, 94, 100, 0, 0, 1, 0.510638, 0.5, 0, 0, []],
				7,
				62,
				[
					[0],
					[""],
					[0],
					[0],
					[0]
				],
				[
				[
					1,
					0,
					0,
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[515, 54, 0, 465, 66, 0, 0, 1, 0.501075, 0.5, 0, 0, []],
				69,
				63,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[619, 210, 0, 194, 148, 0, 0, 1, 0.510309, 0.5, 0, 0, []],
				23,
				64,
				[
					[0],
					["onUpgradeDamage"],
					[0],
					[0],
					[0]
				],
				[
				[
					1,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[420, 378, 0, 174, 136, 0, 0, 1, 0.511494, 0.5, 0, 0, []],
				24,
				65,
				[
					[0],
					["onUpgradeHitpoints"],
					[0],
					[0],
					[0]
				],
				[
				[
					1,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[417, 217, 0, 168, 128, 0, 0, 1, 0.511905, 0.5, 0, 0, []],
				25,
				66,
				[
					[0],
					["onUpgradeSpeed"],
					[0],
					[0],
					[0]
				],
				[
				[
					1,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[616, 379, 0, 172, 139, 0, 0, 1, 0.511628, 0.503597, 0, 0, []],
				26,
				67,
				[
					[0],
					["onUpgradeStamina"],
					[0],
					[0],
					[0]
				],
				[
				[
					1,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[192, 188, 0, 159, 65, 0, 0, 1, 0.503145, 0.507692, 0, 0, []],
				67,
				68,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[195, 344, 0, 235, 64, 0, 0, 1, 0.502128, 0.5, 0, 0, []],
				68,
				69,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[836, 348, 0, 192, 94, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				65,
				70,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[831, 183, 0, 214, 75, 0, 0, 1, 0.5, 0.506667, 0, 0, []],
				66,
				71,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[193, 257, 0, 243, 63, 0, 0, 1, 0.502058, 0.507937, 0, 0, []],
				63,
				72,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[832, 255, 0, 243, 63, 0, 0, 1, 0.502058, 0.507937, 0, 0, []],
				61,
				74,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[839, 429, 0, 243, 63, 0, 0, 1, 0.502058, 0.507937, 0, 0, []],
				64,
				75,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[192, 412, 0, 243, 63, 0, 0, 1, 0.502058, 0.507937, 0, 0, []],
				62,
				76,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[827, 524, 0, 324.051, 105.527, 0, 0, 1, 0.507205, 0.504425, 0, 0, []],
				27,
				84,
				[
					[0],
					["onContinue"],
					[0],
					[0],
					[0]
				],
				[
				[
					1,
					0,
					0,
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[619, 211, 0, 198, 152, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				96,
				94,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[420, 379, 0, 178, 139, 0, 0, 1, 0.5, 0.503597, 0, 0, []],
				97,
				95,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[417, 218, 0, 172, 132, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				98,
				96,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
,			[
				[616, 380, 0, 176, 143, 0, 0, 1, 0.5, 0.503497, 0, 0, []],
				99,
				97,
				[
				],
				[
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Layer 1",
			1,
			1139695345594148,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 2",
			2,
			586268858887432,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 3",
			3,
			4404328812916704,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 4",
			4,
			5739735030664214,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 5",
			5,
			9629526094571007,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 6",
			6,
			3205670634022907,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 7",
			7,
			9202612963260277,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 8",
			8,
			1815680667903863,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 9",
			9,
			8533639548666231,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 10",
			10,
			8552578779935743,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 11",
			11,
			6750903201150774,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 12",
			12,
			2215765017554926,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 13",
			13,
			6521829891321161,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[8, 9, 0, 5, 47, 0, 0, 1, 0, 0, 0, 0, []],
				107,
				107,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					1
				]
				],
				[
					1,
					"",
					"",
					"my_div"
				]
			]
,			[
				[183.969, 521.253, 0, 342.171, 111.494, 0, 0, 1, 0.508427, 0.5, 0, 0, []],
				28,
				111,
				[
					[0],
					["moreGames"],
					[0],
					[0],
					[0]
				],
				[
				[
					0,
					0,
					0,
					0,
					1
				]
				],
				[
					0,
					"Default",
					0,
					1
				]
			]
			],
			[			]
		]
		],
		[
		],
		[]
	]
	],
	[
	[
		"ButtonsSolver",
		[
		[
			0,
			[true, "TouchResolve"],
			false,
			null,
			6180405564004445,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				6180405564004445,
				false
				,[
				[
					1,
					[
						2,
						"TouchResolve"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				1655902485801975,
				[
				[
					74,
					cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
					null,
					1,
					false,
					false,
					false,
					9214870072876192,
					false
				]
				],
				[
				[
					108,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					8725511832875207,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					6260444103838512,
					[
					[
						-1,
						cr.system_object.prototype.cnds.ForEach,
						null,
						0,
						true,
						false,
						false,
						6293794663025711,
						false
						,[
						[
							4,
							108
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						4039262866765059,
						[
						[
							74,
							cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
							null,
							0,
							false,
							false,
							false,
							1839467347439442,
							false
							,[
							[
								4,
								108
							]
							]
						]
,						[
							108,
							cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
							null,
							0,
							false,
							false,
							false,
							6344094887367283,
							false
							,[
							[
								10,
								0
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							222019010836304,
							[
							[
								108,
								cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
								null,
								0,
								false,
								false,
								false,
								5560988860857292,
								false
								,[
								[
									10,
									3
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
,							[
								108,
								cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
								null,
								0,
								false,
								false,
								false,
								7947407754079071,
								false
								,[
								[
									10,
									2
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
							],
							[
							[
								108,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								7898151742548828,
								false
								,[
								[
									10,
									3
								]
,								[
									7,
									[
										0,
										0
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							4559206675078843,
							[
							[
								-1,
								cr.system_object.prototype.cnds.Else,
								null,
								0,
								false,
								false,
								false,
								4613900210452496,
								false
							]
,							[
								108,
								cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
								null,
								0,
								false,
								false,
								false,
								5099604293721512,
								false
								,[
								[
									10,
									0
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
							],
							[
							[
								108,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								431423261264543,
								false
								,[
								[
									10,
									0
								]
,								[
									7,
									[
										0,
										0
									]
								]
								]
							]
,							[
								108,
								cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
								null,
								4831162947952099,
								false
								,[
								[
									10,
									2
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
							]
							,[
							[
								0,
								null,
								false,
								null,
								5556229528558143,
								[
								[
									108,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									7808115697977905,
									false
									,[
									[
										10,
										1
									]
,									[
										8,
										1
									]
,									[
										7,
										[
											2,
											""
										]
									]
									]
								]
								],
								[
								[
									72,
									cr.plugins_.Function.prototype.acts.CallFunction,
									null,
									8014570598893449,
									false
									,[
									[
										1,
										[
											21,
											108,
											true,
											null
											,1
										]
									]
,									[
										13,
									]
									]
								]
								]
							]
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6502276516545211,
				[
				[
					74,
					cr.plugins_.Touch.prototype.cnds.OnTouchObject,
					null,
					1,
					false,
					false,
					false,
					3723378195879847,
					false
					,[
					[
						4,
						108
					]
					]
				]
,				[
					108,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					586150965629965,
					false
					,[
					[
						10,
						4
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					9472264337674246,
					[
					[
						108,
						cr.plugins_.Sprite.prototype.cnds.IsVisible,
						null,
						0,
						false,
						false,
						false,
						6106070961966253,
						false
					]
					],
					[
					[
						108,
						cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
						null,
						2851289666682766,
						false
						,[
						[
							0,
							[
								0,
								1
							]
						]
						]
					]
,					[
						108,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						5648097205153596,
						false
						,[
						[
							10,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						108,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						7963681777787812,
						false
						,[
						[
							10,
							2
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				1,
				"registerOnce",
				0,
				0,
true,false,9255277002971048,false
			]
,			[
				0,
				null,
				false,
				null,
				8109889183735346,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					7660283291062184,
					false
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					8828173713034298,
					[
					[
						-1,
						cr.system_object.prototype.cnds.ForEach,
						null,
						0,
						true,
						false,
						false,
						7951533791536648,
						false
						,[
						[
							4,
							108
						]
						]
					]
					],
					[
					[
						108,
						cr.plugins_.Sprite.prototype.acts.StopAnim,
						null,
						9040109929455016,
						false
					]
,					[
						108,
						cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
						null,
						5020923643774615,
						false
						,[
						[
							0,
							[
								0,
								0
							]
						]
						]
					]
,					[
						108,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						579540137499674,
						false
						,[
						[
							10,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
		]
	]
,	[
		"MathHelpers",
		[
		[
			0,
			[true, "MathUtils"],
			false,
			null,
			7209880212232929,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				7209880212232929,
				false
				,[
				[
					1,
					[
						2,
						"MathUtils"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				8907715541594496,
				[
				[
					72,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					85894853150371,
					false
					,[
					[
						1,
						[
							2,
							"approach"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					1,
					"value",
					0,
					0,
false,false,8930062962601832,false
				]
,				[
					1,
					"target",
					0,
					0,
false,false,5486113389673122,false
				]
,				[
					1,
					"ammount",
					0,
					0,
false,false,5299000010687617,false
				]
,				[
					0,
					null,
					false,
					null,
					3346679741633869,
					[
					[
						-1,
						cr.system_object.prototype.cnds.EveryTick,
						null,
						0,
						false,
						false,
						false,
						3609371992666715,
						false
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						3787491305266391,
						false
						,[
						[
							11,
							"value"
						]
,						[
							7,
							[
								20,
								72,
								cr.plugins_.Function.prototype.exps.Param,
								false,
								null
								,[
[
									0,
									0
								]
								]
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						9766833384319939,
						false
						,[
						[
							11,
							"target"
						]
,						[
							7,
							[
								20,
								72,
								cr.plugins_.Function.prototype.exps.Param,
								false,
								null
								,[
[
									0,
									1
								]
								]
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						1172819290134835,
						false
						,[
						[
							11,
							"ammount"
						]
,						[
							7,
							[
								20,
								72,
								cr.plugins_.Function.prototype.exps.Param,
								false,
								null
								,[
[
									0,
									2
								]
								]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					7123623310951694,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						2771215833054373,
						false
						,[
						[
							7,
							[
								23,
								"value"
							]
						]
,						[
							8,
							2
						]
,						[
							7,
							[
								5,
								[
									23,
									"target"
								]
								,[
									23,
									"ammount"
								]
							]
						]
						]
					]
					],
					[
					[
						72,
						cr.plugins_.Function.prototype.acts.SetReturnValue,
						null,
						2542865539614324,
						false
						,[
						[
							7,
							[
								4,
								[
									23,
									"value"
								]
								,[
									23,
									"ammount"
								]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					7808315780934075,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Else,
						null,
						0,
						false,
						false,
						false,
						4424432997820781,
						false
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						7712781731046532,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Compare,
							null,
							0,
							false,
							false,
							false,
							3734037128851128,
							false
							,[
							[
								7,
								[
									23,
									"value"
								]
							]
,							[
								8,
								4
							]
,							[
								7,
								[
									4,
									[
										23,
										"target"
									]
									,[
										23,
										"ammount"
									]
								]
							]
							]
						]
						],
						[
						[
							72,
							cr.plugins_.Function.prototype.acts.SetReturnValue,
							null,
							5042894934999928,
							false
							,[
							[
								7,
								[
									5,
									[
										23,
										"value"
									]
									,[
										23,
										"ammount"
									]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						8677564625400979,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Else,
							null,
							0,
							false,
							false,
							false,
							170832251155785,
							false
						]
						],
						[
						[
							72,
							cr.plugins_.Function.prototype.acts.SetReturnValue,
							null,
							2325901017230148,
							false
							,[
							[
								7,
								[
									23,
									"target"
								]
							]
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
		]
	]
,	[
		"MusicController",
		[
		[
			1,
			"MegaFix",
			0,
			0,
false,false,668045619349036,false
		]
,		[
			1,
			"PlayOnce",
			0,
			0,
false,false,9296781952043722,false
		]
,		[
			1,
			"TotalTime",
			0,
			0,
false,false,1528784386210326,false
		]
,		[
			1,
			"MusicOneTime",
			0,
			1,
false,false,6987885336086001,false
		]
,		[
			1,
			"IsMusicPlaying",
			0,
			1,
false,false,2733713794791392,false
		]
,		[
			0,
			[true, "MusicPreloadBoot"],
			false,
			null,
			2954920284978891,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				2954920284978891,
				false
				,[
				[
					1,
					[
						2,
						"MusicPreloadBoot"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				5172288518022758,
				[
				[
					-1,
					cr.system_object.prototype.cnds.EveryTick,
					null,
					0,
					false,
					false,
					false,
					9836048044738824,
					false
				]
				],
				[
				[
					75,
					cr.plugins_.Audio.prototype.acts.Preload,
					null,
					7863670896314803,
					false
					,[
					[
						2,
						["music",true]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetGroupActive,
					null,
					4108681819318061,
					false
					,[
					[
						1,
						[
							2,
							"MusicPreloadBoot"
						]
					]
,					[
						3,
						0
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "MusicEvents"],
			false,
			null,
			896623373767876,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				896623373767876,
				false
				,[
				[
					1,
					[
						2,
						"MusicEvents"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				1778603564791414,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					5799472845442197,
					false
				]
				],
				[
				[
					6,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					7243795271871144,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					7,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					4531063951489864,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					7205120435573824,
					false
					,[
					[
						0,
						[
							1,
							0.05
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					116548574437764,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						8680473291514967,
						false
						,[
						[
							7,
							[
								23,
								"IsMusicPlaying"
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						7,
						cr.plugins_.Sprite.prototype.acts.SetVisible,
						null,
						9546014402722673,
						false
						,[
						[
							3,
							1
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					7770717299984531,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Else,
						null,
						0,
						false,
						false,
						false,
						3275332348096946,
						false
					]
					],
					[
					[
						6,
						cr.plugins_.Sprite.prototype.acts.SetVisible,
						null,
						4986725667245735,
						false
						,[
						[
							3,
							1
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3063116807593378,
				[
				[
					7,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					6173873114804673,
					false
					,[
					[
						10,
						2
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.TriggerOnce,
					null,
					0,
					false,
					false,
					false,
					2365564498264109,
					false
				]
				],
				[
				[
					7,
					cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
					null,
					5230797918938805,
					false
					,[
					[
						10,
						2
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					7,
					cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
					null,
					184396102198879,
					false
					,[
					[
						10,
						3
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					6,
					cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
					null,
					5564599215103771,
					false
					,[
					[
						10,
						3
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					7,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					861296385442157,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					6,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					2338060176103276,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					75,
					cr.plugins_.Audio.prototype.acts.StopAll,
					null,
					6591572786624615,
					false
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					2495781364481805,
					false
					,[
					[
						11,
						"IsMusicPlaying"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9612020505075185,
				[
				[
					6,
					cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
					null,
					0,
					false,
					false,
					false,
					165341229017099,
					false
					,[
					[
						10,
						2
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.TriggerOnce,
					null,
					0,
					false,
					false,
					false,
					1320832780669232,
					false
				]
				],
				[
				[
					6,
					cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
					null,
					9994581397711005,
					false
					,[
					[
						10,
						2
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					7,
					cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
					null,
					9683208644389435,
					false
					,[
					[
						10,
						3
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					6,
					cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
					null,
					8595640818549255,
					false
					,[
					[
						10,
						3
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					7,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					4136988489398294,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					6,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					2244214775772635,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					9037787726443853,
					false
					,[
					[
						11,
						"IsMusicPlaying"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					6327067879267764,
					[
					[
						75,
						cr.plugins_.Audio.prototype.cnds.PreloadsComplete,
						null,
						0,
						false,
						false,
						false,
						2909787864997333,
						false
					]
,					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						4763786687393955,
						false
						,[
						[
							7,
							[
								23,
								"MusicOneTime"
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						1338791111905348,
						false
						,[
						[
							7,
							[
								23,
								"MegaFix"
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						75,
						cr.plugins_.Audio.prototype.cnds.IsTagPlaying,
						null,
						0,
						false,
						true,
						false,
						9110729904601459,
						false
						,[
						[
							1,
							[
								2,
								"theme"
							]
						]
						]
					]
					],
					[
					[
						75,
						cr.plugins_.Audio.prototype.acts.Play,
						null,
						7310269070667345,
						false
						,[
						[
							2,
							["music",true]
						]
,						[
							3,
							1
						]
,						[
							0,
							[
								0,
								0
							]
						]
,						[
							1,
							[
								2,
								"theme"
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			4335571008515759,
			[
			[
				74,
				cr.plugins_.Touch.prototype.cnds.OnTouchEnd,
				null,
				1,
				false,
				false,
				false,
				3991403838362394,
				false
			]
,			[
				-1,
				cr.system_object.prototype.cnds.Compare,
				null,
				0,
				false,
				false,
				false,
				1016108549355978,
				false
				,[
				[
					7,
					[
						23,
						"MusicOneTime"
					]
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				6946355326684451,
				[
				[
					75,
					cr.plugins_.Audio.prototype.cnds.PreloadsComplete,
					null,
					0,
					false,
					false,
					false,
					4931949268831336,
					false
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					7330345405401685,
					false
					,[
					[
						11,
						"MusicOneTime"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetGroupActive,
					null,
					2374683175091266,
					false
					,[
					[
						1,
						[
							2,
							"MusicFix"
						]
					]
,					[
						3,
						1
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[false, "MusicFix"],
			false,
			null,
			8347787160699382,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				8347787160699382,
				false
				,[
				[
					1,
					[
						2,
						"MusicFix"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				505086058841821,
				[
				[
					-1,
					cr.system_object.prototype.cnds.EveryTick,
					null,
					0,
					false,
					false,
					false,
					9522603472140402,
					false
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.AddVar,
					null,
					1340027594804974,
					false
					,[
					[
						11,
						"TotalTime"
					]
,					[
						7,
						[
							19,
							cr.system_object.prototype.exps.dt
						]
					]
					]
				]
,				[
					75,
					cr.plugins_.Audio.prototype.acts.SetSilent,
					null,
					443877423227531,
					false
					,[
					[
						3,
						0
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					9360539834957328,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						3076742391915648,
						false
						,[
						[
							7,
							[
								23,
								"PlayOnce"
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						75,
						cr.plugins_.Audio.prototype.acts.Play,
						null,
						7491378434383696,
						false
						,[
						[
							2,
							["music",true]
						]
,						[
							3,
							1
						]
,						[
							0,
							[
								0,
								0
							]
						]
,						[
							1,
							[
								2,
								"theme"
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						2549662988208807,
						false
						,[
						[
							11,
							"PlayOnce"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						75,
						cr.plugins_.Audio.prototype.acts.SetSilent,
						null,
						3289533478026838,
						false
						,[
						[
							3,
							0
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					7160660931407565,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						7304666533808941,
						false
						,[
						[
							7,
							[
								23,
								"TotalTime"
							]
						]
,						[
							8,
							4
						]
,						[
							7,
							[
								0,
								9
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						8925351679146258,
						false
						,[
						[
							7,
							[
								23,
								"TotalTime"
							]
						]
,						[
							8,
							2
						]
,						[
							7,
							[
								0,
								11
							]
						]
						]
					]
					],
					[
					[
						75,
						cr.plugins_.Audio.prototype.acts.StopAll,
						null,
						5464697112366948,
						false
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					1657464530204786,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						8555908509639509,
						false
						,[
						[
							7,
							[
								23,
								"TotalTime"
							]
						]
,						[
							8,
							4
						]
,						[
							7,
							[
								0,
								11
							]
						]
						]
					]
					],
					[
					[
						75,
						cr.plugins_.Audio.prototype.acts.SetSilent,
						null,
						2187397697567767,
						false
						,[
						[
							3,
							1
						]
						]
					]
					]
					,[
					[
						0,
						null,
						false,
						null,
						3684815393284801,
						[
						[
							7,
							cr.plugins_.Sprite.prototype.cnds.IsVisible,
							null,
							0,
							false,
							false,
							false,
							6726477091809894,
							false
						]
						],
						[
						[
							75,
							cr.plugins_.Audio.prototype.acts.Play,
							null,
							9768922059200443,
							false
							,[
							[
								2,
								["music",true]
							]
,							[
								3,
								1
							]
,							[
								0,
								[
									0,
									0
								]
							]
,							[
								1,
								[
									2,
									"theme"
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						4308272965217956,
						[
						[
							-1,
							cr.system_object.prototype.cnds.EveryTick,
							null,
							0,
							false,
							false,
							false,
							5185010557861994,
							false
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.SetGroupActive,
							null,
							7685743757177154,
							false
							,[
							[
								1,
								[
									2,
									"MusicFix"
								]
							]
,							[
								3,
								0
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							2112257595481301,
							false
							,[
							[
								11,
								"MegaFix"
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
		]
	]
,	[
		"RotateToPortrait",
		[
		[
			1,
			"IsPortrait",
			0,
			-1,
false,false,2552418735257705,false
		]
,		[
			0,
			[true, "RotateGroup"],
			false,
			null,
			9864967689010213,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				9864967689010213,
				false
				,[
				[
					1,
					[
						2,
						"RotateGroup"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				1,
				"PrevTimescale",
				0,
				1,
true,false,3157044487961144,false
			]
,			[
				0,
				null,
				false,
				null,
				3571087749617283,
				[
				[
					-1,
					cr.system_object.prototype.cnds.EveryTick,
					null,
					0,
					false,
					false,
					false,
					7754972862239385,
					false
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					2142530356393616,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						6167602213328251,
						false
						,[
						[
							7,
							[
								20,
								76,
								cr.plugins_.Browser.prototype.exps.ExecJS,
								false,
								null
								,[
[
									2,
									"window.innerWidth"
								]
								]
							]
						]
,						[
							8,
							2
						]
,						[
							7,
							[
								20,
								76,
								cr.plugins_.Browser.prototype.exps.ExecJS,
								false,
								null
								,[
[
									2,
									"window.innerHeight"
								]
								]
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						3496437617350348,
						false
						,[
						[
							11,
							"IsPortrait"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					1953020383052301,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Else,
						null,
						0,
						false,
						false,
						false,
						1105172545236931,
						false
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						6927310566279983,
						false
						,[
						[
							11,
							"IsPortrait"
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				1844880785695823,
				[
				[
					-1,
					cr.system_object.prototype.cnds.EveryTick,
					null,
					0,
					false,
					false,
					false,
					431666757068623,
					false
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					7478640611145312,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						5363199773455633,
						false
						,[
						[
							7,
							[
								23,
								"IsPortrait"
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.TriggerOnce,
						null,
						0,
						false,
						false,
						false,
						8311666082382223,
						false
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetTimescale,
						null,
						9726196838283899,
						false
						,[
						[
							0,
							[
								23,
								"PrevTimescale"
							]
						]
						]
					]
,					[
						71,
						cr.plugins_.Sprite.prototype.acts.Destroy,
						null,
						5591328263104201,
						false
					]
,					[
						70,
						cr.plugins_.TiledBg.prototype.acts.Destroy,
						null,
						5633695828907551,
						false
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					834112126694037,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						8258818812939226,
						false
						,[
						[
							7,
							[
								23,
								"IsPortrait"
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.TriggerOnce,
						null,
						0,
						false,
						false,
						false,
						1711196329152139,
						false
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						810718917493252,
						false
						,[
						[
							11,
							"PrevTimescale"
						]
,						[
							7,
							[
								19,
								cr.system_object.prototype.exps.timescale
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetTimescale,
						null,
						9559700614644121,
						false
						,[
						[
							0,
							[
								0,
								0
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.CreateObject,
						null,
						6981028839523105,
						false
						,[
						[
							4,
							70
						]
,						[
							5,
							[
								0,
								4
							]
						]
,						[
							0,
							[
								0,
								-1000
							]
						]
,						[
							0,
							[
								0,
								0
							]
						]
						]
					]
,					[
						70,
						cr.plugins_.TiledBg.prototype.acts.SetWidth,
						null,
						7341931674129133,
						false
						,[
						[
							0,
							[
								0,
								3000
							]
						]
						]
					]
,					[
						70,
						cr.plugins_.TiledBg.prototype.acts.SetHeight,
						null,
						4310871043634265,
						false
						,[
						[
							0,
							[
								0,
								2000
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.CreateObject,
						null,
						8637579987022075,
						false
						,[
						[
							4,
							71
						]
,						[
							5,
							[
								0,
								4
							]
						]
,						[
							0,
							[
								1,
								320
							]
						]
,						[
							0,
							[
								1,
								480
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
		]
	]
,	[
		"HighscoreUtil",
		[
		[
			1,
			"Highscore",
			0,
			-1,
false,false,9804613854486695,false
		]
,		[
			0,
			[true, "Highscore"],
			false,
			null,
			5100457631559647,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				5100457631559647,
				false
				,[
				[
					1,
					[
						2,
						"Highscore"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				5924710411248993,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					6942560351870761,
					false
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					5230537538426125,
					[
					[
						73,
						cr.plugins_.WebStorage.prototype.cnds.LocalStorageExists,
						null,
						0,
						false,
						false,
						false,
						5625325112647459,
						false
						,[
						[
							1,
							[
								2,
								"RKARMAX_HIGHSCORE"
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						2159532696359371,
						false
						,[
						[
							11,
							"Highscore"
						]
,						[
							7,
							[
								19,
								cr.system_object.prototype.exps["int"]
								,[
[
									20,
									73,
									cr.plugins_.WebStorage.prototype.exps.LocalValue,
									true,
									null
									,[
[
										2,
										"RKARMAX_HIGHSCORE"
									]
									]
								]
								]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					762178400968018,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Else,
						null,
						0,
						false,
						false,
						false,
						9215816455094054,
						false
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						474843279396695,
						false
						,[
						[
							11,
							"Highscore"
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						73,
						cr.plugins_.WebStorage.prototype.acts.StoreLocal,
						null,
						5216748922823365,
						false
						,[
						[
							1,
							[
								2,
								"RKARMAX_HIGHSCORE"
							]
						]
,						[
							7,
							[
								23,
								"Highscore"
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8672180626637733,
				[
				[
					72,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					9250636800938585,
					false
					,[
					[
						1,
						[
							2,
							"saveHighscore"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					538373383532494,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						3290009816180572,
						false
						,[
						[
							7,
							[
								23,
								"Highscore"
							]
						]
,						[
							8,
							4
						]
,						[
							7,
							[
								19,
								cr.system_object.prototype.exps["int"]
								,[
[
									20,
									73,
									cr.plugins_.WebStorage.prototype.exps.LocalValue,
									true,
									null
									,[
[
										2,
										"RKARMAX_HIGHSCORE"
									]
									]
								]
								]
							]
						]
						]
					]
					],
					[
					[
						73,
						cr.plugins_.WebStorage.prototype.acts.StoreLocal,
						null,
						8306155286992815,
						false
						,[
						[
							1,
							[
								2,
								"RKARMAX_HIGHSCORE"
							]
						]
,						[
							7,
							[
								23,
								"Highscore"
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
		]
	]
,	[
		"RotateToLandscape",
		[
		[
			1,
			"IsLandscape",
			0,
			-1,
false,false,9412088499323606,false
		]
,		[
			0,
			[true, "RotateGroup"],
			false,
			null,
			6797878804334452,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				6797878804334452,
				false
				,[
				[
					1,
					[
						2,
						"RotateGroup"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				1,
				"PrevTimescale",
				0,
				1,
true,false,3157044487961144,false
			]
,			[
				0,
				null,
				false,
				null,
				3571087749617283,
				[
				[
					-1,
					cr.system_object.prototype.cnds.EveryTick,
					null,
					0,
					false,
					false,
					false,
					7754972862239385,
					false
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					2142530356393616,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						6167602213328251,
						false
						,[
						[
							7,
							[
								20,
								76,
								cr.plugins_.Browser.prototype.exps.ExecJS,
								false,
								null
								,[
[
									2,
									"window.innerHeight"
								]
								]
							]
						]
,						[
							8,
							2
						]
,						[
							7,
							[
								20,
								76,
								cr.plugins_.Browser.prototype.exps.ExecJS,
								false,
								null
								,[
[
									2,
									"window.innerWidth"
								]
								]
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						3496437617350348,
						false
						,[
						[
							11,
							"IsLandscape"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					1953020383052301,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Else,
						null,
						0,
						false,
						false,
						false,
						1105172545236931,
						false
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						6927310566279983,
						false
						,[
						[
							11,
							"IsLandscape"
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				1844880785695823,
				[
				[
					-1,
					cr.system_object.prototype.cnds.EveryTick,
					null,
					0,
					false,
					false,
					false,
					431666757068623,
					false
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					7478640611145312,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						5363199773455633,
						false
						,[
						[
							7,
							[
								23,
								"IsLandscape"
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.TriggerOnce,
						null,
						0,
						false,
						false,
						false,
						8311666082382223,
						false
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetTimescale,
						null,
						9726196838283899,
						false
						,[
						[
							0,
							[
								23,
								"PrevTimescale"
							]
						]
						]
					]
,					[
						71,
						cr.plugins_.Sprite.prototype.acts.Destroy,
						null,
						5591328263104201,
						false
					]
,					[
						70,
						cr.plugins_.TiledBg.prototype.acts.Destroy,
						null,
						5633695828907551,
						false
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					834112126694037,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						8258818812939226,
						false
						,[
						[
							7,
							[
								23,
								"IsLandscape"
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.TriggerOnce,
						null,
						0,
						false,
						false,
						false,
						1711196329152139,
						false
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						810718917493252,
						false
						,[
						[
							11,
							"PrevTimescale"
						]
,						[
							7,
							[
								19,
								cr.system_object.prototype.exps.timescale
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetTimescale,
						null,
						9559700614644121,
						false
						,[
						[
							0,
							[
								0,
								0
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.CreateObject,
						null,
						6981028839523105,
						false
						,[
						[
							4,
							70
						]
,						[
							5,
							[
								0,
								13
							]
						]
,						[
							0,
							[
								0,
								0
							]
						]
,						[
							0,
							[
								0,
								-300
							]
						]
						]
					]
,					[
						70,
						cr.plugins_.TiledBg.prototype.acts.SetWidth,
						null,
						1188647692684513,
						false
						,[
						[
							0,
							[
								0,
								2000
							]
						]
						]
					]
,					[
						70,
						cr.plugins_.TiledBg.prototype.acts.SetHeight,
						null,
						582168701152639,
						false
						,[
						[
							0,
							[
								0,
								2000
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.CreateObject,
						null,
						8637579987022075,
						false
						,[
						[
							4,
							71
						]
,						[
							5,
							[
								0,
								13
							]
						]
,						[
							0,
							[
								1,
								480
							]
						]
,						[
							0,
							[
								1,
								320
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
		]
	]
,	[
		"DistributeItemsFromMiddle",
		[
		[
			1,
			"OriginalWidth",
			0,
			960,
false,false,8874392469809515,false
		]
,		[
			1,
			"OriginalHeight",
			0,
			640,
false,false,2071428749944129,false
		]
,		[
			0,
			null,
			false,
			null,
			5695231310372027,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLayoutStart,
				null,
				1,
				false,
				false,
				false,
				2655244762208033,
				false
			]
			],
			[
			]
			,[
			[
				1,
				"origX",
				0,
				0,
false,false,5836068040931988,false
			]
,			[
				0,
				null,
				false,
				null,
				9760829840207111,
				[
				[
					-1,
					cr.system_object.prototype.cnds.ForEach,
					null,
					0,
					true,
					false,
					false,
					7619905706533122,
					false
					,[
					[
						4,
						109
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					6933706283378393,
					false
					,[
					[
						11,
						"origX"
					]
,					[
						7,
						[
							5,
							[
								20,
								109,
								cr.plugins_.Sprite.prototype.exps.X,
								false,
								null
							]
							,[
								7,
								[
									23,
									"OriginalWidth"
								]
								,[
									0,
									2
								]
							]
						]
					]
					]
				]
,				[
					109,
					cr.plugins_.Sprite.prototype.acts.SetX,
					null,
					4231003228058108,
					false
					,[
					[
						0,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.scrollx
							]
							,[
								23,
								"origX"
							]
						]
					]
					]
				]
				]
			]
			]
		]
		]
	]
,	[
		"CenterItems",
		[
		]
	]
,	[
		"UnlockedLevel",
		[
		[
			1,
			"CurLevel",
			0,
			1,
false,false,915344533935021,false
		]
,		[
			1,
			"MaxUnlockedLevel",
			0,
			1,
false,false,9431069037819177,false
		]
,		[
			0,
			[true, "Highscore"],
			false,
			null,
			6119452989301611,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				6119452989301611,
				false
				,[
				[
					1,
					[
						2,
						"Highscore"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				5924710411248993,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					6942560351870761,
					false
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					5230537538426125,
					[
					[
						73,
						cr.plugins_.WebStorage.prototype.cnds.LocalStorageExists,
						null,
						0,
						false,
						false,
						false,
						5625325112647459,
						false
						,[
						[
							1,
							[
								2,
								"BLACKBEARDMAX"
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						2159532696359371,
						false
						,[
						[
							11,
							"MaxUnlockedLevel"
						]
,						[
							7,
							[
								19,
								cr.system_object.prototype.exps["int"]
								,[
[
									20,
									73,
									cr.plugins_.WebStorage.prototype.exps.LocalValue,
									true,
									null
									,[
[
										2,
										"BLACKBEARDMAX"
									]
									]
								]
								]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					762178400968018,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Else,
						null,
						0,
						false,
						false,
						false,
						9215816455094054,
						false
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						474843279396695,
						false
						,[
						[
							11,
							"MaxUnlockedLevel"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						73,
						cr.plugins_.WebStorage.prototype.acts.StoreLocal,
						null,
						5216748922823365,
						false
						,[
						[
							1,
							[
								2,
								"BLACKBEARDMAX"
							]
						]
,						[
							7,
							[
								23,
								"MaxUnlockedLevel"
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8672180626637733,
				[
				[
					72,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					9250636800938585,
					false
					,[
					[
						1,
						[
							2,
							"saveMax"
						]
					]
					]
				]
				],
				[
				[
					73,
					cr.plugins_.WebStorage.prototype.acts.StoreLocal,
					null,
					8306155286992815,
					false
					,[
					[
						1,
						[
							2,
							"BLACKBEARDMAX"
						]
					]
,					[
						7,
						[
							23,
							"MaxUnlockedLevel"
						]
					]
					]
				]
				]
			]
			]
		]
		]
	]
,	[
		"IPhoneFixer",
		[
		[
			0,
			null,
			false,
			null,
			7893007866673818,
			[
			[
				76,
				cr.plugins_.Browser.prototype.cnds.OnResize,
				null,
				1,
				false,
				false,
				false,
				1953671477494348,
				false
			]
			],
			[
			]
			,[
			[
				0,
				null,
				true,
				null,
				8796446748728014,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					5670404060507543,
					false
					,[
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.find
							,[
[
								19,
								cr.system_object.prototype.exps.lowercase
								,[
[
									20,
									76,
									cr.plugins_.Browser.prototype.exps.UserAgent,
									true,
									null
								]
								]
							]
,[
								2,
								"iphone"
							]
							]
						]
					]
,					[
						8,
						4
					]
,					[
						7,
						[
							0,
							-1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					6778993921301157,
					false
					,[
					[
						7,
						[
							19,
							cr.system_object.prototype.exps.find
							,[
[
								19,
								cr.system_object.prototype.exps.lowercase
								,[
[
									20,
									76,
									cr.plugins_.Browser.prototype.exps.UserAgent,
									true,
									null
								]
								]
							]
,[
								2,
								"ipod"
							]
							]
						]
					]
,					[
						8,
						4
					]
,					[
						7,
						[
							0,
							-1
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					2704299662346612,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						5376630886072051,
						false
						,[
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.windowwidth
							]
						]
,						[
							8,
							4
						]
,						[
							7,
							[
								19,
								cr.system_object.prototype.exps.windowheight
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						9470873140693026,
						false
						,[
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.windowheight
							]
						]
,						[
							8,
							4
						]
,						[
							7,
							[
								0,
								290
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetCanvasSize,
						null,
						557761510949765,
						false
						,[
						[
							0,
							[
								19,
								cr.system_object.prototype.exps.windowwidth
							]
						]
,						[
							0,
							[
								0,
								260
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
		]
	]
,	[
		"SpilAPI",
		[
		[
			1,
			"apiCheckOnce",
			0,
			0,
false,false,4663050436757067,false
		]
,		[
			0,
			null,
			false,
			null,
			8904808952837242,
			[
			[
				106,
				cr.plugins_.SpilApiPlugin.prototype.cnds.MyCondition,
				null,
				0,
				false,
				false,
				false,
				7630080849765691,
				false
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.Compare,
				null,
				0,
				false,
				false,
				false,
				6621895085095825,
				false
				,[
				[
					7,
					[
						23,
						"apiCheckOnce"
					]
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				1627288737376346,
				false
				,[
				[
					11,
					"apiCheckOnce"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
,			[
				107,
				cr.plugins_.HTML_Div_Pode.prototype.acts.SetInnerHTML,
				null,
				8096081280547721,
				false
				,[
				[
					1,
					[
						10,
						[
							10,
							[
								10,
								[
									10,
									[
										2,
										"<a ontouchend='javascript:GameAPI.Branding.getLogo().action()' href='"
									]
									,[
										20,
										106,
										cr.plugins_.SpilApiPlugin.prototype.exps.LinkURL,
										true,
										null
									]
								]
								,[
									2,
									"' target='_blank'><img src='"
								]
							]
							,[
								20,
								106,
								cr.plugins_.SpilApiPlugin.prototype.exps.ImageURL,
								true,
								null
							]
						]
						,[
							2,
							"'\n /></a>"
						]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			9484395282987528,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLayoutStart,
				null,
				1,
				false,
				false,
				false,
				4064714518567419,
				false
			]
,			[
				106,
				cr.plugins_.SpilApiPlugin.prototype.cnds.MyCondition,
				null,
				0,
				false,
				false,
				false,
				100747233049296,
				false
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
			],
			[
			[
				107,
				cr.plugins_.HTML_Div_Pode.prototype.acts.SetInnerHTML,
				null,
				7375629190993296,
				false
				,[
				[
					1,
					[
						10,
						[
							10,
							[
								10,
								[
									10,
									[
										2,
										"<a ontouchend='javascript:GameAPI.Branding.getLogo().action()'  href='"
									]
									,[
										20,
										106,
										cr.plugins_.SpilApiPlugin.prototype.exps.LinkURL,
										true,
										null
									]
								]
								,[
									2,
									"' target='_blank'><img src='"
								]
							]
							,[
								20,
								106,
								cr.plugins_.SpilApiPlugin.prototype.exps.ImageURL,
								true,
								null
							]
						]
						,[
							2,
							"'\n /></a>"
						]
					]
				]
				]
			]
			]
		]
		]
	]
,	[
		"CoverSheet",
		[
		[
			2,
			"SpilAPI",
			false
		]
,		[
			2,
			"IPhoneFixer",
			false
		]
,		[
			2,
			"RotateToLandscape",
			false
		]
,		[
			2,
			"MusicController",
			false
		]
,		[
			2,
			"ButtonsSolver",
			false
		]
,		[
			1,
			"SeenStory",
			0,
			0,
false,false,1165051408054591,false
		]
,		[
			0,
			[true, "CoverCallbacks"],
			false,
			null,
			7585630796974783,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				7585630796974783,
				false
				,[
				[
					1,
					[
						2,
						"CoverCallbacks"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				6535864073093522,
				[
				[
					72,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					2948540568715879,
					false
					,[
					[
						1,
						[
							2,
							"gotoGameplay"
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					7401296825264573,
					false
					,[
					[
						11,
						"vFightNumber"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					7825948455971433,
					false
					,[
					[
						11,
						"UpgradeDamage"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					9565407738643842,
					false
					,[
					[
						11,
						"UpgradeHealth"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					171748209815422,
					false
					,[
					[
						11,
						"UpgradeSpeed"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					8775301889076602,
					false
					,[
					[
						11,
						"UpgradeStamina"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.GoToLayout,
					null,
					3795331193121429,
					false
					,[
					[
						6,
						"StorySheet"
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			9518871080378083,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLayoutStart,
				null,
				1,
				false,
				false,
				false,
				2324422003506377,
				false
			]
			],
			[
			[
				105,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				5385624613460698,
				false
				,[
				[
					7,
					[
						10,
						[
							2,
							"Renderer: "
						]
						,[
							19,
							cr.system_object.prototype.exps.renderer
						]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			8557793519461996,
			[
			[
				72,
				cr.plugins_.Function.prototype.cnds.OnFunction,
				null,
				2,
				false,
				false,
				false,
				9489875351553278,
				false
				,[
				[
					1,
					[
						2,
						"moreGames"
					]
				]
				]
			]
			],
			[
			[
				76,
				cr.plugins_.Browser.prototype.acts.GoToURLWindow,
				null,
				7660262952563971,
				false
				,[
				[
					1,
					[
						20,
						106,
						cr.plugins_.SpilApiPlugin.prototype.exps.LinkURL,
						true,
						null
					]
				]
,				[
					1,
					[
						2,
						"_blank"
					]
				]
				]
			]
			]
		]
		]
	]
,	[
		"GameplaySheet",
		[
		[
			2,
			"SpilAPI",
			false
		]
,		[
			1,
			"vCraigenSpeed",
			0,
			150,
false,false,187269825130076,false
		]
,		[
			1,
			"vEnemyStaminaRegenCur",
			0,
			0,
false,false,7263370824823863,false
		]
,		[
			1,
			"vEnemyStaminaRegenTime",
			0,
			0,
false,false,7929127942541078,false
		]
,		[
			1,
			"vEnemyStamina",
			0,
			0,
false,false,5483635684652565,false
		]
,		[
			1,
			"vEnemyStaminaMax",
			0,
			0,
false,false,7056582953801149,false
		]
,		[
			1,
			"vCraigenStamina",
			0,
			0,
false,false,1118684062501023,false
		]
,		[
			1,
			"vCraigenStaminaMax",
			0,
			5,
false,false,2864365680713343,false
		]
,		[
			1,
			"vCraigenStaminaRegenTime",
			0,
			4,
false,false,3338441481212357,false
		]
,		[
			1,
			"vCraigenStaminaRegenCur",
			0,
			0,
false,false,7095394402125918,false
		]
,		[
			1,
			"vCraigenCanDealDamage",
			0,
			0,
false,false,3579669106768649,false
		]
,		[
			1,
			"vEnemyCanDealDamage",
			0,
			0,
false,false,9121119215152019,false
		]
,		[
			1,
			"vFightNumber",
			0,
			0,
false,false,1706674548759125,false
		]
,		[
			1,
			"vTempInt",
			0,
			0,
false,false,6163825798782672,false
		]
,		[
			1,
			"vFightersMinimumDistance",
			0,
			100,
false,false,4802323183532904,false
		]
,		[
			1,
			"vCraigenAttackDistance",
			0,
			250,
false,false,5955651345517505,false
		]
,		[
			1,
			"vCraigenDamage",
			0,
			1,
false,false,5439719323136432,false
		]
,		[
			1,
			"vCraigen_MovingForward",
			0,
			0,
false,false,6906557501935282,false
		]
,		[
			1,
			"vEnemy_AttackDistance",
			0,
			200,
false,false,8316927903192598,false
		]
,		[
			1,
			"vEnemy_CanAttack",
			0,
			0,
false,false,6643934093713285,false
		]
,		[
			1,
			"vEnemy_CanBlock",
			0,
			0,
false,false,2182453872168643,false
		]
,		[
			1,
			"vEnemy_CantAct",
			0,
			0,
false,false,2586734724489373,false
		]
,		[
			1,
			"vEnemy_IsNearEndOfMap",
			0,
			0,
false,false,3531112011145521,false
		]
,		[
			1,
			"vEnemy_IsMoving",
			0,
			0,
false,false,9023382889614596,false
		]
,		[
			1,
			"vEnemy_Health",
			0,
			10,
false,false,9238568080861598,false
		]
,		[
			1,
			"vEnemyMaxHealth",
			0,
			0,
false,false,3420889711265103,false
		]
,		[
			1,
			"vIsEnemyInAttackRange",
			0,
			0,
false,false,3303442540362259,false
		]
,		[
			1,
			"vIsCraigenInAttackRange",
			0,
			0,
false,false,1339468077745705,false
		]
,		[
			1,
			"vCraigenHealth",
			0,
			5,
false,false,3155771723675498,false
		]
,		[
			1,
			"vCraigenMaxHealth",
			0,
			5,
false,false,9199626986237088,false
		]
,		[
			1,
			"vTemp",
			0,
			0,
false,false,6887966023156144,false
		]
,		[
			2,
			"IPhoneFixer",
			false
		]
,		[
			2,
			"DistributeItemsFromMiddle",
			false
		]
,		[
			2,
			"RotateToLandscape",
			false
		]
,		[
			2,
			"MathHelpers",
			false
		]
,		[
			2,
			"MusicController",
			false
		]
,		[
			2,
			"ButtonsSolver",
			false
		]
,		[
			0,
			[true, "GameplayBoot"],
			false,
			null,
			3987423428658929,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				3987423428658929,
				false
				,[
				[
					1,
					[
						2,
						"GameplayBoot"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				2272150657837669,
				[
				[
					-1,
					cr.system_object.prototype.cnds.OnLayoutStart,
					null,
					1,
					false,
					false,
					false,
					7713695402505596,
					false
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					9599620440146104,
					false
					,[
					[
						11,
						"vCraigenMaxHealth"
					]
,					[
						7,
						[
							4,
							[
								0,
								5
							]
							,[
								6,
								[
									23,
									"UpgradeHealth"
								]
								,[
									0,
									5
								]
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					8717302145808567,
					false
					,[
					[
						11,
						"vCraigenHealth"
					]
,					[
						7,
						[
							23,
							"vCraigenMaxHealth"
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					7289891778452278,
					false
					,[
					[
						11,
						"vCraigenStaminaRegenTime"
					]
,					[
						7,
						[
							5,
							[
								1,
								3.5
							]
							,[
								6,
								[
									23,
									"UpgradeStamina"
								]
								,[
									1,
									0.75
								]
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					6676682702877975,
					false
					,[
					[
						11,
						"vCraigenDamage"
					]
,					[
						7,
						[
							4,
							[
								0,
								1
							]
							,[
								6,
								[
									23,
									"UpgradeDamage"
								]
								,[
									1,
									0.75
								]
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					2523974984126424,
					false
					,[
					[
						11,
						"vCraigenSpeed"
					]
,					[
						7,
						[
							4,
							[
								0,
								150
							]
							,[
								6,
								[
									23,
									"UpgradeSpeed"
								]
								,[
									0,
									75
								]
							]
						]
					]
					]
				]
,				[
					51,
					cr.plugins_.Sprite.prototype.acts.StopAnim,
					null,
					6495621598550321,
					false
				]
,				[
					100,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					4463986315901669,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					100,
					cr.behaviors.Pin.prototype.acts.Pin,
					"Pin",
					143639341313532,
					false
					,[
					[
						4,
						0
					]
,					[
						3,
						0
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetGroupActive,
					null,
					1362734758596215,
					false
					,[
					[
						1,
						[
							2,
							"Player"
						]
					]
,					[
						3,
						0
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetGroupActive,
					null,
					6796413314181044,
					false
					,[
					[
						1,
						[
							2,
							"EnemyAI"
						]
					]
,					[
						3,
						0
					]
					]
				]
,				[
					101,
					cr.behaviors.Pin.prototype.acts.Pin,
					"Pin",
					6845232753326269,
					false
					,[
					[
						4,
						0
					]
,					[
						3,
						0
					]
					]
				]
,				[
					103,
					cr.behaviors.Pin.prototype.acts.Pin,
					"Pin",
					3483161843725403,
					false
					,[
					[
						4,
						0
					]
,					[
						3,
						0
					]
					]
				]
,				[
					101,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					9145082843458944,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					103,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					3093200332258183,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					28,
					cr.plugins_.Sprite.prototype.acts.SetX,
					null,
					9389342828668333,
					false
					,[
					[
						0,
						[
							19,
							cr.system_object.prototype.exps.scrollx
						]
					]
					]
				]
,				[
					28,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					1768502246946608,
					false
					,[
					[
						3,
						0
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					5674028890286721,
					[
					[
						-1,
						cr.system_object.prototype.cnds.EveryTick,
						null,
						0,
						false,
						false,
						false,
						2299076713429292,
						false
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetTimescale,
						null,
						7818916433438174,
						false
						,[
						[
							0,
							[
								0,
								1
							]
						]
						]
					]
,					[
						12,
						cr.plugins_.Sprite.prototype.acts.SetVisible,
						null,
						4883873471694588,
						false
						,[
						[
							3,
							0
						]
						]
					]
,					[
						11,
						cr.plugins_.Sprite.prototype.acts.SetVisible,
						null,
						1684187135816726,
						false
						,[
						[
							3,
							0
						]
						]
					]
,					[
						10,
						cr.plugins_.Sprite.prototype.acts.SetVisible,
						null,
						732741732891267,
						false
						,[
						[
							3,
							0
						]
						]
					]
,					[
						9,
						cr.plugins_.Sprite.prototype.acts.SetVisible,
						null,
						3347361625942927,
						false
						,[
						[
							3,
							0
						]
						]
					]
,					[
						35,
						cr.plugins_.Sprite.prototype.acts.SetVisible,
						null,
						8651991563540847,
						false
						,[
						[
							3,
							0
						]
						]
					]
,					[
						14,
						cr.plugins_.Sprite.prototype.acts.SetVisible,
						null,
						2884412466608236,
						false
						,[
						[
							3,
							0
						]
						]
					]
,					[
						38,
						cr.plugins_.Sprite.prototype.acts.SetVisible,
						null,
						3984989270326846,
						false
						,[
						[
							3,
							0
						]
						]
					]
,					[
						38,
						cr.plugins_.Sprite.prototype.acts.SetX,
						null,
						479889523219494,
						false
						,[
						[
							0,
							[
								19,
								cr.system_object.prototype.exps.scrollx
							]
						]
						]
					]
,					[
						35,
						cr.plugins_.Sprite.prototype.acts.SetX,
						null,
						1167548782272323,
						false
						,[
						[
							0,
							[
								19,
								cr.system_object.prototype.exps.scrollx
							]
						]
						]
					]
,					[
						15,
						cr.plugins_.Sprite.prototype.acts.SetX,
						null,
						697714977258512,
						false
						,[
						[
							0,
							[
								19,
								cr.system_object.prototype.exps.scrollx
							]
						]
						]
					]
,					[
						14,
						cr.plugins_.Sprite.prototype.acts.SetX,
						null,
						9232705454986519,
						false
						,[
						[
							0,
							[
								19,
								cr.system_object.prototype.exps.scrollx
							]
						]
						]
					]
,					[
						11,
						cr.plugins_.Sprite.prototype.acts.SetX,
						null,
						4788646656102375,
						false
						,[
						[
							0,
							[
								19,
								cr.system_object.prototype.exps.scrollx
							]
						]
						]
					]
,					[
						13,
						cr.plugins_.Sprite.prototype.acts.SetVisible,
						null,
						4682971074370643,
						false
						,[
						[
							3,
							0
						]
						]
					]
,					[
						15,
						cr.plugins_.Sprite.prototype.acts.SetVisible,
						null,
						1889029992088438,
						false
						,[
						[
							3,
							0
						]
						]
					]
,					[
						14,
						cr.plugins_.Sprite.prototype.acts.SetVisible,
						null,
						8927302166156315,
						false
						,[
						[
							3,
							0
						]
						]
					]
,					[
						10,
						cr.plugins_.Sprite.prototype.acts.SetVisible,
						null,
						8539806785991386,
						false
						,[
						[
							3,
							0
						]
						]
					]
,					[
						81,
						cr.plugins_.Sprite.prototype.acts.SetVisible,
						null,
						1973532923505253,
						false
						,[
						[
							3,
							0
						]
						]
					]
,					[
						80,
						cr.plugins_.Sprite.prototype.acts.SetVisible,
						null,
						1475426762566348,
						false
						,[
						[
							3,
							0
						]
						]
					]
,					[
						17,
						cr.plugins_.Sprite.prototype.acts.SetVisible,
						null,
						5926198778950616,
						false
						,[
						[
							3,
							0
						]
						]
					]
,					[
						53,
						cr.plugins_.Sprite.prototype.acts.StopAnim,
						null,
						539340980857278,
						false
					]
,					[
						50,
						cr.plugins_.Sprite.prototype.acts.StopAnim,
						null,
						3005076639237956,
						false
					]
,					[
						43,
						cr.plugins_.Sprite.prototype.acts.SetX,
						null,
						4946658446818225,
						false
						,[
						[
							0,
							[
								19,
								cr.system_object.prototype.exps.scrollx
							]
						]
						]
					]
,					[
						52,
						cr.plugins_.Sprite.prototype.acts.StopAnim,
						null,
						7607922781688092,
						false
					]
,					[
						55,
						cr.plugins_.Sprite.prototype.acts.StopAnim,
						null,
						8515672333252559,
						false
					]
,					[
						52,
						cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
						null,
						4019819784757996,
						false
						,[
						[
							0,
							[
								20,
								52,
								cr.plugins_.Sprite.prototype.exps.AnimationFrameCount,
								false,
								null
							]
						]
						]
					]
,					[
						55,
						cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
						null,
						2777577908975857,
						false
						,[
						[
							0,
							[
								20,
								55,
								cr.plugins_.Sprite.prototype.exps.AnimationFrameCount,
								false,
								null
							]
						]
						]
					]
,					[
						53,
						cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
						null,
						3434693278847205,
						false
						,[
						[
							0,
							[
								20,
								53,
								cr.plugins_.Sprite.prototype.exps.AnimationFrameCount,
								false,
								null
							]
						]
						]
					]
,					[
						50,
						cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
						null,
						5462996748944818,
						false
						,[
						[
							0,
							[
								20,
								50,
								cr.plugins_.Sprite.prototype.exps.AnimationFrameCount,
								false,
								null
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						2174633948142828,
						false
						,[
						[
							11,
							"vCraigenHealth"
						]
,						[
							7,
							[
								23,
								"vCraigenMaxHealth"
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						5349620339846557,
						false
						,[
						[
							11,
							"vCraigenStamina"
						]
,						[
							7,
							[
								23,
								"vCraigenStaminaMax"
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						3368800129811751,
						false
						,[
						[
							11,
							"vCraigenStaminaRegenCur"
						]
,						[
							7,
							[
								23,
								"vCraigenStaminaRegenTime"
							]
						]
						]
					]
,					[
						48,
						cr.plugins_.Sprite.prototype.acts.SetVisible,
						null,
						3698069206574545,
						false
						,[
						[
							3,
							0
						]
						]
					]
					]
					,[
					[
						0,
						null,
						false,
						null,
						175539009576127,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Compare,
							null,
							0,
							false,
							false,
							false,
							9009567221580202,
							false
							,[
							[
								7,
								[
									23,
									"vFightNumber"
								]
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							458285075661599,
							false
							,[
							[
								11,
								"vEnemyStaminaMax"
							]
,							[
								7,
								[
									0,
									6
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							1974934033467904,
							false
							,[
							[
								11,
								"vEnemyStamina"
							]
,							[
								7,
								[
									23,
									"vEnemyStaminaMax"
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							4520031643041983,
							false
							,[
							[
								11,
								"vEnemyStaminaRegenTime"
							]
,							[
								7,
								[
									0,
									5
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							7653906415541327,
							false
							,[
							[
								11,
								"vEnemyStaminaRegenCur"
							]
,							[
								7,
								[
									23,
									"vEnemyStaminaRegenTime"
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							827534024280537,
							false
							,[
							[
								11,
								"vEnemyMaxHealth"
							]
,							[
								7,
								[
									0,
									5
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							8708886292604976,
							false
							,[
							[
								11,
								"vEnemy_Health"
							]
,							[
								7,
								[
									23,
									"vEnemyMaxHealth"
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							5708190194347307,
							false
							,[
							[
								11,
								"vEnemy_AttackDistance"
							]
,							[
								7,
								[
									0,
									200
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							5997551007523273,
							false
							,[
							[
								11,
								"vEnemy_CanAttack"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							9333719415520626,
							false
							,[
							[
								11,
								"vEnemy_CanBlock"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							7516700830305969,
							false
							,[
							[
								11,
								"vEnemy_CantAct"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							2949133286221918,
							false
							,[
							[
								11,
								"vEnemy_IsNearEndOfMap"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							4910048727407092,
							false
							,[
							[
								11,
								"vEnemy_IsMoving"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							1650153985790194,
							false
							,[
							[
								11,
								"vIsCraigenInAttackRange"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							2367614360816898,
							false
							,[
							[
								11,
								"vIsEnemyInAttackRange"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.CreateObject,
							null,
							7329757669183358,
							false
							,[
							[
								4,
								1
							]
,							[
								5,
								[
									0,
									3
								]
							]
,							[
								0,
								[
									5,
									[
										6,
										[
											19,
											cr.system_object.prototype.exps.scrollx
										]
										,[
											0,
											2
										]
									]
									,[
										0,
										250
									]
								]
							]
,							[
								0,
								[
									4,
									[
										20,
										0,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
									,[
										0,
										2
									]
								]
							]
							]
						]
,						[
							1,
							cr.plugins_.Sprite.prototype.acts.MoveToBottom,
							null,
							5374285289469265,
							false
						]
,						[
							1,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							4800011656385009,
							false
							,[
							[
								10,
								0
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
,						[
							1,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							9264644705473645,
							false
							,[
							[
								10,
								1
							]
,							[
								7,
								[
									2,
									"offense"
								]
							]
							]
						]
,						[
							1,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							6185515643056138,
							false
							,[
							[
								10,
								2
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							1,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							9431524076089041,
							false
							,[
							[
								10,
								3
							]
,							[
								7,
								[
									0,
									40
								]
							]
							]
						]
,						[
							1,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							7554143310072963,
							false
							,[
							[
								10,
								4
							]
,							[
								7,
								[
									0,
									60
								]
							]
							]
						]
,						[
							1,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							7220058209032116,
							false
							,[
							[
								10,
								5
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
,						[
							1,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							9606526984648971,
							false
							,[
							[
								10,
								6
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							1,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							8470498165557685,
							false
							,[
							[
								10,
								7
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
,						[
							1,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							603604818966797,
							false
							,[
							[
								10,
								8
							]
,							[
								7,
								[
									0,
									200
								]
							]
							]
						]
,						[
							1,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							7391647078621506,
							false
							,[
							[
								10,
								9
							]
,							[
								7,
								[
									1,
									2.5
								]
							]
							]
						]
,						[
							1,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							6502566461776592,
							false
							,[
							[
								10,
								10
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							1,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							3175769212546325,
							false
							,[
							[
								10,
								11
							]
,							[
								7,
								[
									0,
									80
								]
							]
							]
						]
,						[
							1,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							3133611711402083,
							false
							,[
							[
								10,
								12
							]
,							[
								7,
								[
									0,
									20
								]
							]
							]
						]
,						[
							51,
							cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
							null,
							1471138528015569,
							false
							,[
							[
								0,
								[
									0,
									0
								]
							]
							]
						]
,						[
							102,
							cr.plugins_.Sprite.prototype.acts.SetX,
							null,
							8513978844816797,
							false
							,[
							[
								0,
								[
									20,
									1,
									cr.plugins_.Sprite.prototype.exps.X,
									false,
									null
								]
							]
							]
						]
,						[
							102,
							cr.plugins_.Sprite.prototype.acts.SetY,
							null,
							4165924512752518,
							false
							,[
							[
								0,
								[
									5,
									[
										20,
										1,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
									,[
										0,
										100
									]
								]
							]
							]
						]
,						[
							102,
							cr.behaviors.Pin.prototype.acts.Pin,
							"Pin",
							6386233169440299,
							false
							,[
							[
								4,
								1
							]
,							[
								3,
								0
							]
							]
						]
,						[
							104,
							cr.plugins_.Sprite.prototype.acts.SetX,
							null,
							6711938937615244,
							false
							,[
							[
								0,
								[
									20,
									1,
									cr.plugins_.Sprite.prototype.exps.X,
									false,
									null
								]
							]
							]
						]
,						[
							104,
							cr.plugins_.Sprite.prototype.acts.SetY,
							null,
							7911396799637567,
							false
							,[
							[
								0,
								[
									5,
									[
										20,
										1,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
									,[
										0,
										100
									]
								]
							]
							]
						]
,						[
							104,
							cr.behaviors.Pin.prototype.acts.Pin,
							"Pin",
							3061869723547234,
							false
							,[
							[
								4,
								1
							]
,							[
								3,
								0
							]
							]
						]
,						[
							102,
							cr.plugins_.Sprite.prototype.acts.SetVisible,
							null,
							4743554189656288,
							false
							,[
							[
								3,
								0
							]
							]
						]
,						[
							104,
							cr.plugins_.Sprite.prototype.acts.SetVisible,
							null,
							9663559533822237,
							false
							,[
							[
								3,
								0
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						3259317828745439,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Compare,
							null,
							0,
							false,
							false,
							false,
							9565734264533618,
							false
							,[
							[
								7,
								[
									23,
									"vFightNumber"
								]
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							8771722504935808,
							false
							,[
							[
								11,
								"vEnemyStaminaMax"
							]
,							[
								7,
								[
									0,
									9
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							8800337919238944,
							false
							,[
							[
								11,
								"vEnemyStamina"
							]
,							[
								7,
								[
									23,
									"vEnemyStaminaMax"
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							4639321983804513,
							false
							,[
							[
								11,
								"vEnemyStaminaRegenTime"
							]
,							[
								7,
								[
									0,
									5
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							777275445691517,
							false
							,[
							[
								11,
								"vEnemyStaminaRegenCur"
							]
,							[
								7,
								[
									23,
									"vEnemyStaminaRegenTime"
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							186320696549621,
							false
							,[
							[
								11,
								"vEnemyMaxHealth"
							]
,							[
								7,
								[
									0,
									10
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							8929599776776058,
							false
							,[
							[
								11,
								"vEnemy_Health"
							]
,							[
								7,
								[
									23,
									"vEnemyMaxHealth"
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							7374098491689104,
							false
							,[
							[
								11,
								"vEnemy_AttackDistance"
							]
,							[
								7,
								[
									0,
									200
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							8903712706773575,
							false
							,[
							[
								11,
								"vEnemy_CanAttack"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							3961482258004514,
							false
							,[
							[
								11,
								"vEnemy_CanBlock"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							6668788092145556,
							false
							,[
							[
								11,
								"vEnemy_CantAct"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							9655397718082218,
							false
							,[
							[
								11,
								"vEnemy_IsNearEndOfMap"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							3581088790595653,
							false
							,[
							[
								11,
								"vEnemy_IsMoving"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							8610441850244749,
							false
							,[
							[
								11,
								"vIsCraigenInAttackRange"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							8146425968775308,
							false
							,[
							[
								11,
								"vIsEnemyInAttackRange"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.CreateObject,
							null,
							4307573876639603,
							false
							,[
							[
								4,
								1
							]
,							[
								5,
								[
									0,
									3
								]
							]
,							[
								0,
								[
									5,
									[
										6,
										[
											19,
											cr.system_object.prototype.exps.scrollx
										]
										,[
											0,
											2
										]
									]
									,[
										0,
										250
									]
								]
							]
,							[
								0,
								[
									4,
									[
										20,
										0,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
									,[
										0,
										2
									]
								]
							]
							]
						]
,						[
							1,
							cr.plugins_.Sprite.prototype.acts.MoveToBottom,
							null,
							6038737003067145,
							false
						]
,						[
							1,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							5915842327354272,
							false
							,[
							[
								10,
								0
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
,						[
							1,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							1568532663946823,
							false
							,[
							[
								10,
								1
							]
,							[
								7,
								[
									2,
									"offense"
								]
							]
							]
						]
,						[
							1,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							503984604452637,
							false
							,[
							[
								10,
								2
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							1,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							1465197820407516,
							false
							,[
							[
								10,
								3
							]
,							[
								7,
								[
									0,
									40
								]
							]
							]
						]
,						[
							1,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							4674210748623964,
							false
							,[
							[
								10,
								4
							]
,							[
								7,
								[
									0,
									60
								]
							]
							]
						]
,						[
							1,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							1398083677240032,
							false
							,[
							[
								10,
								5
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
,						[
							1,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							2937199404556363,
							false
							,[
							[
								10,
								6
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							1,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							8566960343681661,
							false
							,[
							[
								10,
								7
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
,						[
							1,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							6320681190875262,
							false
							,[
							[
								10,
								8
							]
,							[
								7,
								[
									0,
									200
								]
							]
							]
						]
,						[
							1,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							6519425927496629,
							false
							,[
							[
								10,
								9
							]
,							[
								7,
								[
									1,
									1.5
								]
							]
							]
						]
,						[
							1,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							7390297056349558,
							false
							,[
							[
								10,
								10
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							1,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							3770527360265419,
							false
							,[
							[
								10,
								11
							]
,							[
								7,
								[
									0,
									80
								]
							]
							]
						]
,						[
							1,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							2818164506480268,
							false
							,[
							[
								10,
								12
							]
,							[
								7,
								[
									0,
									20
								]
							]
							]
						]
,						[
							51,
							cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
							null,
							6768194870122812,
							false
							,[
							[
								0,
								[
									0,
									0
								]
							]
							]
						]
,						[
							102,
							cr.plugins_.Sprite.prototype.acts.SetX,
							null,
							8123835798167082,
							false
							,[
							[
								0,
								[
									20,
									1,
									cr.plugins_.Sprite.prototype.exps.X,
									false,
									null
								]
							]
							]
						]
,						[
							102,
							cr.plugins_.Sprite.prototype.acts.SetY,
							null,
							9098423683048749,
							false
							,[
							[
								0,
								[
									5,
									[
										20,
										1,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
									,[
										0,
										100
									]
								]
							]
							]
						]
,						[
							102,
							cr.behaviors.Pin.prototype.acts.Pin,
							"Pin",
							1846002896073216,
							false
							,[
							[
								4,
								1
							]
,							[
								3,
								0
							]
							]
						]
,						[
							104,
							cr.plugins_.Sprite.prototype.acts.SetX,
							null,
							8710412917149874,
							false
							,[
							[
								0,
								[
									20,
									1,
									cr.plugins_.Sprite.prototype.exps.X,
									false,
									null
								]
							]
							]
						]
,						[
							104,
							cr.plugins_.Sprite.prototype.acts.SetY,
							null,
							8588635283851765,
							false
							,[
							[
								0,
								[
									5,
									[
										20,
										1,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
									,[
										0,
										100
									]
								]
							]
							]
						]
,						[
							104,
							cr.behaviors.Pin.prototype.acts.Pin,
							"Pin",
							8996356184167943,
							false
							,[
							[
								4,
								1
							]
,							[
								3,
								0
							]
							]
						]
,						[
							102,
							cr.plugins_.Sprite.prototype.acts.SetVisible,
							null,
							3930133156744358,
							false
							,[
							[
								3,
								0
							]
							]
						]
,						[
							104,
							cr.plugins_.Sprite.prototype.acts.SetVisible,
							null,
							5856137037063897,
							false
							,[
							[
								3,
								0
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						6648547843124338,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Compare,
							null,
							0,
							false,
							false,
							false,
							6674686844479355,
							false
							,[
							[
								7,
								[
									23,
									"vFightNumber"
								]
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									2
								]
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							4935284288529021,
							false
							,[
							[
								11,
								"vEnemyStaminaMax"
							]
,							[
								7,
								[
									0,
									14
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							5636679907200248,
							false
							,[
							[
								11,
								"vEnemyStamina"
							]
,							[
								7,
								[
									23,
									"vEnemyStaminaMax"
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							506323412254681,
							false
							,[
							[
								11,
								"vEnemyStaminaRegenTime"
							]
,							[
								7,
								[
									0,
									6
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							9482003617887592,
							false
							,[
							[
								11,
								"vEnemyStaminaRegenCur"
							]
,							[
								7,
								[
									23,
									"vEnemyStaminaRegenTime"
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							499488862936674,
							false
							,[
							[
								11,
								"vEnemyMaxHealth"
							]
,							[
								7,
								[
									0,
									18
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							1931430153079135,
							false
							,[
							[
								11,
								"vEnemy_Health"
							]
,							[
								7,
								[
									23,
									"vEnemyMaxHealth"
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							5896078880717611,
							false
							,[
							[
								11,
								"vEnemy_AttackDistance"
							]
,							[
								7,
								[
									0,
									200
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							6226441338302732,
							false
							,[
							[
								11,
								"vEnemy_CanAttack"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							4949225878019469,
							false
							,[
							[
								11,
								"vEnemy_CanBlock"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							69130566778076,
							false
							,[
							[
								11,
								"vEnemy_CantAct"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							2061954784706019,
							false
							,[
							[
								11,
								"vEnemy_IsNearEndOfMap"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							265262749227509,
							false
							,[
							[
								11,
								"vEnemy_IsMoving"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							5313538663629947,
							false
							,[
							[
								11,
								"vIsCraigenInAttackRange"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							3895315513092238,
							false
							,[
							[
								11,
								"vIsEnemyInAttackRange"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.CreateObject,
							null,
							7963195383008882,
							false
							,[
							[
								4,
								3
							]
,							[
								5,
								[
									0,
									3
								]
							]
,							[
								0,
								[
									5,
									[
										6,
										[
											19,
											cr.system_object.prototype.exps.scrollx
										]
										,[
											0,
											2
										]
									]
									,[
										0,
										250
									]
								]
							]
,							[
								0,
								[
									4,
									[
										20,
										0,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
									,[
										0,
										2
									]
								]
							]
							]
						]
,						[
							3,
							cr.plugins_.Sprite.prototype.acts.MoveToBottom,
							null,
							389354988161843,
							false
						]
,						[
							3,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							3999374230955723,
							false
							,[
							[
								10,
								0
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
,						[
							3,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							1256942392586985,
							false
							,[
							[
								10,
								1
							]
,							[
								7,
								[
									2,
									"offense"
								]
							]
							]
						]
,						[
							3,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							3468508049202234,
							false
							,[
							[
								10,
								2
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							3,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							3423710753615156,
							false
							,[
							[
								10,
								3
							]
,							[
								7,
								[
									0,
									30
								]
							]
							]
						]
,						[
							3,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							5171857878079346,
							false
							,[
							[
								10,
								4
							]
,							[
								7,
								[
									0,
									70
								]
							]
							]
						]
,						[
							3,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							5006386169103572,
							false
							,[
							[
								10,
								5
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
,						[
							3,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							4187182867092614,
							false
							,[
							[
								10,
								6
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							3,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							8089709103559314,
							false
							,[
							[
								10,
								7
							]
,							[
								7,
								[
									0,
									3
								]
							]
							]
						]
,						[
							3,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							5233075063904438,
							false
							,[
							[
								10,
								8
							]
,							[
								7,
								[
									0,
									125
								]
							]
							]
						]
,						[
							3,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							7816152953979864,
							false
							,[
							[
								10,
								9
							]
,							[
								7,
								[
									1,
									2.5
								]
							]
							]
						]
,						[
							3,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							8788636010239538,
							false
							,[
							[
								10,
								10
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							3,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							1474315956656319,
							false
							,[
							[
								10,
								11
							]
,							[
								7,
								[
									0,
									90
								]
							]
							]
						]
,						[
							3,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							7593874853720887,
							false
							,[
							[
								10,
								12
							]
,							[
								7,
								[
									0,
									10
								]
							]
							]
						]
,						[
							51,
							cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
							null,
							1347018472864763,
							false
							,[
							[
								0,
								[
									0,
									1
								]
							]
							]
						]
,						[
							102,
							cr.plugins_.Sprite.prototype.acts.SetX,
							null,
							4629962180199622,
							false
							,[
							[
								0,
								[
									20,
									3,
									cr.plugins_.Sprite.prototype.exps.X,
									false,
									null
								]
							]
							]
						]
,						[
							102,
							cr.plugins_.Sprite.prototype.acts.SetY,
							null,
							4836697988285268,
							false
							,[
							[
								0,
								[
									5,
									[
										20,
										3,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
									,[
										0,
										100
									]
								]
							]
							]
						]
,						[
							102,
							cr.behaviors.Pin.prototype.acts.Pin,
							"Pin",
							864730805474281,
							false
							,[
							[
								4,
								3
							]
,							[
								3,
								0
							]
							]
						]
,						[
							104,
							cr.plugins_.Sprite.prototype.acts.SetX,
							null,
							9350690928350847,
							false
							,[
							[
								0,
								[
									20,
									3,
									cr.plugins_.Sprite.prototype.exps.X,
									false,
									null
								]
							]
							]
						]
,						[
							104,
							cr.plugins_.Sprite.prototype.acts.SetY,
							null,
							8218915769686063,
							false
							,[
							[
								0,
								[
									5,
									[
										20,
										3,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
									,[
										0,
										100
									]
								]
							]
							]
						]
,						[
							104,
							cr.behaviors.Pin.prototype.acts.Pin,
							"Pin",
							9417142845180783,
							false
							,[
							[
								4,
								3
							]
,							[
								3,
								0
							]
							]
						]
,						[
							102,
							cr.plugins_.Sprite.prototype.acts.SetVisible,
							null,
							3166466325844014,
							false
							,[
							[
								3,
								0
							]
							]
						]
,						[
							104,
							cr.plugins_.Sprite.prototype.acts.SetVisible,
							null,
							3911464354327156,
							false
							,[
							[
								3,
								0
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						2026071998256567,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Compare,
							null,
							0,
							false,
							false,
							false,
							5461067623261076,
							false
							,[
							[
								7,
								[
									23,
									"vFightNumber"
								]
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									3
								]
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							5882517201170721,
							false
							,[
							[
								11,
								"vEnemyStaminaMax"
							]
,							[
								7,
								[
									0,
									14
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							8986618857031306,
							false
							,[
							[
								11,
								"vEnemyStamina"
							]
,							[
								7,
								[
									23,
									"vEnemyStaminaMax"
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							7392923626892534,
							false
							,[
							[
								11,
								"vEnemyStaminaRegenTime"
							]
,							[
								7,
								[
									0,
									6
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							7098621717179973,
							false
							,[
							[
								11,
								"vEnemyStaminaRegenCur"
							]
,							[
								7,
								[
									23,
									"vEnemyStaminaRegenTime"
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							4068308418510137,
							false
							,[
							[
								11,
								"vEnemyMaxHealth"
							]
,							[
								7,
								[
									0,
									25
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							9222356836257914,
							false
							,[
							[
								11,
								"vEnemy_Health"
							]
,							[
								7,
								[
									23,
									"vEnemyMaxHealth"
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							3531956485698813,
							false
							,[
							[
								11,
								"vEnemy_AttackDistance"
							]
,							[
								7,
								[
									0,
									200
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							8021938840589013,
							false
							,[
							[
								11,
								"vEnemy_CanAttack"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							1422398646693307,
							false
							,[
							[
								11,
								"vEnemy_CanBlock"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							9982530111551192,
							false
							,[
							[
								11,
								"vEnemy_CantAct"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							7282646462668506,
							false
							,[
							[
								11,
								"vEnemy_IsNearEndOfMap"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							86163716697962,
							false
							,[
							[
								11,
								"vEnemy_IsMoving"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							7738568051812329,
							false
							,[
							[
								11,
								"vIsCraigenInAttackRange"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							4149061492139476,
							false
							,[
							[
								11,
								"vIsEnemyInAttackRange"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.CreateObject,
							null,
							6021920185318648,
							false
							,[
							[
								4,
								3
							]
,							[
								5,
								[
									0,
									3
								]
							]
,							[
								0,
								[
									5,
									[
										6,
										[
											19,
											cr.system_object.prototype.exps.scrollx
										]
										,[
											0,
											2
										]
									]
									,[
										0,
										250
									]
								]
							]
,							[
								0,
								[
									4,
									[
										20,
										0,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
									,[
										0,
										2
									]
								]
							]
							]
						]
,						[
							3,
							cr.plugins_.Sprite.prototype.acts.MoveToBottom,
							null,
							5045285817052994,
							false
						]
,						[
							3,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							8018224905000974,
							false
							,[
							[
								10,
								0
							]
,							[
								7,
								[
									1,
									1.5
								]
							]
							]
						]
,						[
							3,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							9605314982379399,
							false
							,[
							[
								10,
								1
							]
,							[
								7,
								[
									2,
									"offense"
								]
							]
							]
						]
,						[
							3,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							8811072999150828,
							false
							,[
							[
								10,
								2
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							3,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							1268727609957333,
							false
							,[
							[
								10,
								3
							]
,							[
								7,
								[
									0,
									40
								]
							]
							]
						]
,						[
							3,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							8278174546835418,
							false
							,[
							[
								10,
								4
							]
,							[
								7,
								[
									0,
									60
								]
							]
							]
						]
,						[
							3,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							9154741692022214,
							false
							,[
							[
								10,
								5
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
,						[
							3,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							1317656688085532,
							false
							,[
							[
								10,
								6
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							3,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							6689279283339488,
							false
							,[
							[
								10,
								7
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
,						[
							3,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							6181471425188957,
							false
							,[
							[
								10,
								8
							]
,							[
								7,
								[
									0,
									125
								]
							]
							]
						]
,						[
							3,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							5321530965000571,
							false
							,[
							[
								10,
								9
							]
,							[
								7,
								[
									1,
									2.35
								]
							]
							]
						]
,						[
							3,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							5358882896413959,
							false
							,[
							[
								10,
								10
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							3,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							2259403855198844,
							false
							,[
							[
								10,
								11
							]
,							[
								7,
								[
									0,
									70
								]
							]
							]
						]
,						[
							3,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							4187731135371894,
							false
							,[
							[
								10,
								12
							]
,							[
								7,
								[
									0,
									30
								]
							]
							]
						]
,						[
							51,
							cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
							null,
							2489647477123389,
							false
							,[
							[
								0,
								[
									0,
									1
								]
							]
							]
						]
,						[
							102,
							cr.plugins_.Sprite.prototype.acts.SetX,
							null,
							477290461833782,
							false
							,[
							[
								0,
								[
									20,
									3,
									cr.plugins_.Sprite.prototype.exps.X,
									false,
									null
								]
							]
							]
						]
,						[
							102,
							cr.plugins_.Sprite.prototype.acts.SetY,
							null,
							4451918989083512,
							false
							,[
							[
								0,
								[
									5,
									[
										20,
										3,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
									,[
										0,
										100
									]
								]
							]
							]
						]
,						[
							102,
							cr.behaviors.Pin.prototype.acts.Pin,
							"Pin",
							1468439316538184,
							false
							,[
							[
								4,
								3
							]
,							[
								3,
								0
							]
							]
						]
,						[
							104,
							cr.plugins_.Sprite.prototype.acts.SetX,
							null,
							2074788301520587,
							false
							,[
							[
								0,
								[
									20,
									3,
									cr.plugins_.Sprite.prototype.exps.X,
									false,
									null
								]
							]
							]
						]
,						[
							104,
							cr.plugins_.Sprite.prototype.acts.SetY,
							null,
							5208927323437547,
							false
							,[
							[
								0,
								[
									5,
									[
										20,
										3,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
									,[
										0,
										100
									]
								]
							]
							]
						]
,						[
							104,
							cr.behaviors.Pin.prototype.acts.Pin,
							"Pin",
							2306046427102027,
							false
							,[
							[
								4,
								3
							]
,							[
								3,
								0
							]
							]
						]
,						[
							102,
							cr.plugins_.Sprite.prototype.acts.SetVisible,
							null,
							2115193536233636,
							false
							,[
							[
								3,
								0
							]
							]
						]
,						[
							104,
							cr.plugins_.Sprite.prototype.acts.SetVisible,
							null,
							2909150732619567,
							false
							,[
							[
								3,
								0
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						7825761802964712,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Compare,
							null,
							0,
							false,
							false,
							false,
							7438801992412854,
							false
							,[
							[
								7,
								[
									23,
									"vFightNumber"
								]
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									4
								]
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							4441215059385259,
							false
							,[
							[
								11,
								"vEnemyStaminaMax"
							]
,							[
								7,
								[
									0,
									25
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							2994549655921684,
							false
							,[
							[
								11,
								"vEnemyStamina"
							]
,							[
								7,
								[
									23,
									"vEnemyStaminaMax"
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							2224844765157079,
							false
							,[
							[
								11,
								"vEnemyStaminaRegenTime"
							]
,							[
								7,
								[
									0,
									4
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							6343499102565757,
							false
							,[
							[
								11,
								"vEnemyStaminaRegenCur"
							]
,							[
								7,
								[
									23,
									"vEnemyStaminaRegenTime"
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							5176359533330392,
							false
							,[
							[
								11,
								"vEnemyMaxHealth"
							]
,							[
								7,
								[
									0,
									16
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							3286308195428623,
							false
							,[
							[
								11,
								"vEnemy_Health"
							]
,							[
								7,
								[
									23,
									"vEnemyMaxHealth"
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							7913007759216539,
							false
							,[
							[
								11,
								"vEnemy_AttackDistance"
							]
,							[
								7,
								[
									0,
									200
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							541137074036407,
							false
							,[
							[
								11,
								"vEnemy_CanAttack"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							4764930410254105,
							false
							,[
							[
								11,
								"vEnemy_CanBlock"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							2138485219540354,
							false
							,[
							[
								11,
								"vEnemy_CantAct"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							277427895406423,
							false
							,[
							[
								11,
								"vEnemy_IsNearEndOfMap"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							389621243195417,
							false
							,[
							[
								11,
								"vEnemy_IsMoving"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							8182718130738646,
							false
							,[
							[
								11,
								"vIsCraigenInAttackRange"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							4688222055517762,
							false
							,[
							[
								11,
								"vIsEnemyInAttackRange"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.CreateObject,
							null,
							7839569945759897,
							false
							,[
							[
								4,
								4
							]
,							[
								5,
								[
									0,
									3
								]
							]
,							[
								0,
								[
									5,
									[
										6,
										[
											19,
											cr.system_object.prototype.exps.scrollx
										]
										,[
											0,
											2
										]
									]
									,[
										0,
										250
									]
								]
							]
,							[
								0,
								[
									4,
									[
										20,
										0,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
									,[
										0,
										2
									]
								]
							]
							]
						]
,						[
							4,
							cr.plugins_.Sprite.prototype.acts.MoveToBottom,
							null,
							3230341020252236,
							false
						]
,						[
							4,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							2385646712024463,
							false
							,[
							[
								10,
								0
							]
,							[
								7,
								[
									1,
									2.5
								]
							]
							]
						]
,						[
							4,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							875950810981055,
							false
							,[
							[
								10,
								1
							]
,							[
								7,
								[
									2,
									"offense"
								]
							]
							]
						]
,						[
							4,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							5606255445826979,
							false
							,[
							[
								10,
								2
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							4,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							6303632111686384,
							false
							,[
							[
								10,
								3
							]
,							[
								7,
								[
									0,
									60
								]
							]
							]
						]
,						[
							4,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							2988814069631587,
							false
							,[
							[
								10,
								4
							]
,							[
								7,
								[
									0,
									40
								]
							]
							]
						]
,						[
							4,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							5929199853204258,
							false
							,[
							[
								10,
								5
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
,						[
							4,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							3858134945675494,
							false
							,[
							[
								10,
								6
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							4,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							5681143273776316,
							false
							,[
							[
								10,
								7
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
,						[
							4,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							4658430448108501,
							false
							,[
							[
								10,
								8
							]
,							[
								7,
								[
									0,
									300
								]
							]
							]
						]
,						[
							4,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							8504069550984996,
							false
							,[
							[
								10,
								9
							]
,							[
								7,
								[
									1,
									2.1
								]
							]
							]
						]
,						[
							4,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							2697659527934325,
							false
							,[
							[
								10,
								10
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							4,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							731028457448128,
							false
							,[
							[
								10,
								11
							]
,							[
								7,
								[
									0,
									70
								]
							]
							]
						]
,						[
							4,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							1617527588241551,
							false
							,[
							[
								10,
								12
							]
,							[
								7,
								[
									0,
									30
								]
							]
							]
						]
,						[
							51,
							cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
							null,
							5895257972303395,
							false
							,[
							[
								0,
								[
									0,
									2
								]
							]
							]
						]
,						[
							102,
							cr.plugins_.Sprite.prototype.acts.SetX,
							null,
							8513108407124597,
							false
							,[
							[
								0,
								[
									20,
									4,
									cr.plugins_.Sprite.prototype.exps.X,
									false,
									null
								]
							]
							]
						]
,						[
							102,
							cr.plugins_.Sprite.prototype.acts.SetY,
							null,
							4064949069756646,
							false
							,[
							[
								0,
								[
									5,
									[
										20,
										4,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
									,[
										0,
										100
									]
								]
							]
							]
						]
,						[
							102,
							cr.behaviors.Pin.prototype.acts.Pin,
							"Pin",
							6294216367237199,
							false
							,[
							[
								4,
								4
							]
,							[
								3,
								0
							]
							]
						]
,						[
							104,
							cr.plugins_.Sprite.prototype.acts.SetX,
							null,
							4476657692063119,
							false
							,[
							[
								0,
								[
									20,
									4,
									cr.plugins_.Sprite.prototype.exps.X,
									false,
									null
								]
							]
							]
						]
,						[
							104,
							cr.plugins_.Sprite.prototype.acts.SetY,
							null,
							9703367892186503,
							false
							,[
							[
								0,
								[
									5,
									[
										20,
										4,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
									,[
										0,
										100
									]
								]
							]
							]
						]
,						[
							104,
							cr.behaviors.Pin.prototype.acts.Pin,
							"Pin",
							1884765578667381,
							false
							,[
							[
								4,
								4
							]
,							[
								3,
								0
							]
							]
						]
,						[
							102,
							cr.plugins_.Sprite.prototype.acts.SetVisible,
							null,
							5943516317632298,
							false
							,[
							[
								3,
								0
							]
							]
						]
,						[
							104,
							cr.plugins_.Sprite.prototype.acts.SetVisible,
							null,
							5976137777348186,
							false
							,[
							[
								3,
								0
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						9592194510839527,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Compare,
							null,
							0,
							false,
							false,
							false,
							7434028783286966,
							false
							,[
							[
								7,
								[
									23,
									"vFightNumber"
								]
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									5
								]
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							4855299600380701,
							false
							,[
							[
								11,
								"vEnemyStaminaMax"
							]
,							[
								7,
								[
									0,
									9
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							3949335109778318,
							false
							,[
							[
								11,
								"vEnemyStamina"
							]
,							[
								7,
								[
									23,
									"vEnemyStaminaMax"
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							7147243806659731,
							false
							,[
							[
								11,
								"vEnemyStaminaRegenTime"
							]
,							[
								7,
								[
									1,
									3.5
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							8159211396536768,
							false
							,[
							[
								11,
								"vEnemyStaminaRegenCur"
							]
,							[
								7,
								[
									23,
									"vEnemyStaminaRegenTime"
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							5474478377198118,
							false
							,[
							[
								11,
								"vEnemyMaxHealth"
							]
,							[
								7,
								[
									0,
									20
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							8838533485795764,
							false
							,[
							[
								11,
								"vEnemy_Health"
							]
,							[
								7,
								[
									23,
									"vEnemyMaxHealth"
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							8524249371259811,
							false
							,[
							[
								11,
								"vEnemy_AttackDistance"
							]
,							[
								7,
								[
									0,
									200
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							7898903640226576,
							false
							,[
							[
								11,
								"vEnemy_CanAttack"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							6184523818043817,
							false
							,[
							[
								11,
								"vEnemy_CanBlock"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							7975051990033722,
							false
							,[
							[
								11,
								"vEnemy_CantAct"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							1943477445386022,
							false
							,[
							[
								11,
								"vEnemy_IsNearEndOfMap"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							428512233971534,
							false
							,[
							[
								11,
								"vEnemy_IsMoving"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							3679039659275886,
							false
							,[
							[
								11,
								"vIsCraigenInAttackRange"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							4438314377664024,
							false
							,[
							[
								11,
								"vIsEnemyInAttackRange"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.CreateObject,
							null,
							6155421713603251,
							false
							,[
							[
								4,
								4
							]
,							[
								5,
								[
									0,
									3
								]
							]
,							[
								0,
								[
									5,
									[
										6,
										[
											19,
											cr.system_object.prototype.exps.scrollx
										]
										,[
											0,
											2
										]
									]
									,[
										0,
										250
									]
								]
							]
,							[
								0,
								[
									4,
									[
										20,
										0,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
									,[
										0,
										2
									]
								]
							]
							]
						]
,						[
							4,
							cr.plugins_.Sprite.prototype.acts.MoveToBottom,
							null,
							7268630106147,
							false
						]
,						[
							4,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							1219167446706418,
							false
							,[
							[
								10,
								0
							]
,							[
								7,
								[
									1,
									4.5
								]
							]
							]
						]
,						[
							4,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							7700115905754603,
							false
							,[
							[
								10,
								1
							]
,							[
								7,
								[
									2,
									"offense"
								]
							]
							]
						]
,						[
							4,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							4712366838010965,
							false
							,[
							[
								10,
								2
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							4,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							167036743080436,
							false
							,[
							[
								10,
								3
							]
,							[
								7,
								[
									0,
									50
								]
							]
							]
						]
,						[
							4,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							6698133258739038,
							false
							,[
							[
								10,
								4
							]
,							[
								7,
								[
									0,
									50
								]
							]
							]
						]
,						[
							4,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							7755001352534787,
							false
							,[
							[
								10,
								5
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
,						[
							4,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							9501885083256132,
							false
							,[
							[
								10,
								6
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							4,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							9310680188128143,
							false
							,[
							[
								10,
								7
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
,						[
							4,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							4918624254577506,
							false
							,[
							[
								10,
								8
							]
,							[
								7,
								[
									0,
									300
								]
							]
							]
						]
,						[
							4,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							2771694073952823,
							false
							,[
							[
								10,
								9
							]
,							[
								7,
								[
									0,
									2
								]
							]
							]
						]
,						[
							4,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							4021717662581549,
							false
							,[
							[
								10,
								10
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							4,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							565440372939261,
							false
							,[
							[
								10,
								11
							]
,							[
								7,
								[
									0,
									70
								]
							]
							]
						]
,						[
							4,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							4623171488559705,
							false
							,[
							[
								10,
								12
							]
,							[
								7,
								[
									0,
									30
								]
							]
							]
						]
,						[
							51,
							cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
							null,
							6022850923729185,
							false
							,[
							[
								0,
								[
									0,
									2
								]
							]
							]
						]
,						[
							102,
							cr.plugins_.Sprite.prototype.acts.SetX,
							null,
							2358082537814176,
							false
							,[
							[
								0,
								[
									20,
									4,
									cr.plugins_.Sprite.prototype.exps.X,
									false,
									null
								]
							]
							]
						]
,						[
							102,
							cr.plugins_.Sprite.prototype.acts.SetY,
							null,
							1080807247304986,
							false
							,[
							[
								0,
								[
									5,
									[
										20,
										4,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
									,[
										0,
										100
									]
								]
							]
							]
						]
,						[
							102,
							cr.behaviors.Pin.prototype.acts.Pin,
							"Pin",
							2242134799729654,
							false
							,[
							[
								4,
								4
							]
,							[
								3,
								0
							]
							]
						]
,						[
							104,
							cr.plugins_.Sprite.prototype.acts.SetX,
							null,
							6169124840217076,
							false
							,[
							[
								0,
								[
									20,
									4,
									cr.plugins_.Sprite.prototype.exps.X,
									false,
									null
								]
							]
							]
						]
,						[
							104,
							cr.plugins_.Sprite.prototype.acts.SetY,
							null,
							101731245688258,
							false
							,[
							[
								0,
								[
									5,
									[
										20,
										4,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
									,[
										0,
										100
									]
								]
							]
							]
						]
,						[
							104,
							cr.behaviors.Pin.prototype.acts.Pin,
							"Pin",
							5869635854240305,
							false
							,[
							[
								4,
								4
							]
,							[
								3,
								0
							]
							]
						]
,						[
							102,
							cr.plugins_.Sprite.prototype.acts.SetVisible,
							null,
							6200786180986602,
							false
							,[
							[
								3,
								0
							]
							]
						]
,						[
							104,
							cr.plugins_.Sprite.prototype.acts.SetVisible,
							null,
							1291344435620748,
							false
							,[
							[
								3,
								0
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						3581772653242562,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Compare,
							null,
							0,
							false,
							false,
							false,
							1984962799714143,
							false
							,[
							[
								7,
								[
									23,
									"vFightNumber"
								]
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									6
								]
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							8575329658740748,
							false
							,[
							[
								11,
								"vEnemyStaminaMax"
							]
,							[
								7,
								[
									0,
									12
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							8107889092086828,
							false
							,[
							[
								11,
								"vEnemyStamina"
							]
,							[
								7,
								[
									23,
									"vEnemyStaminaMax"
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							5843217449121561,
							false
							,[
							[
								11,
								"vEnemyStaminaRegenTime"
							]
,							[
								7,
								[
									0,
									2
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							9755947107698588,
							false
							,[
							[
								11,
								"vEnemyStaminaRegenCur"
							]
,							[
								7,
								[
									23,
									"vEnemyStaminaRegenTime"
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							66807116459402,
							false
							,[
							[
								11,
								"vEnemyMaxHealth"
							]
,							[
								7,
								[
									0,
									25
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							1250386262235724,
							false
							,[
							[
								11,
								"vEnemy_Health"
							]
,							[
								7,
								[
									23,
									"vEnemyMaxHealth"
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							8712958442341857,
							false
							,[
							[
								11,
								"vEnemy_AttackDistance"
							]
,							[
								7,
								[
									0,
									200
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							3086081322765584,
							false
							,[
							[
								11,
								"vEnemy_CanAttack"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							7289660264990975,
							false
							,[
							[
								11,
								"vEnemy_CanBlock"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							3632004291544063,
							false
							,[
							[
								11,
								"vEnemy_CantAct"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							8993335055269256,
							false
							,[
							[
								11,
								"vEnemy_IsNearEndOfMap"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							2916684602030419,
							false
							,[
							[
								11,
								"vEnemy_IsMoving"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							132818594593181,
							false
							,[
							[
								11,
								"vIsCraigenInAttackRange"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							6676551277241025,
							false
							,[
							[
								11,
								"vIsEnemyInAttackRange"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.CreateObject,
							null,
							9623246301771786,
							false
							,[
							[
								4,
								5
							]
,							[
								5,
								[
									0,
									3
								]
							]
,							[
								0,
								[
									5,
									[
										6,
										[
											19,
											cr.system_object.prototype.exps.scrollx
										]
										,[
											0,
											2
										]
									]
									,[
										0,
										250
									]
								]
							]
,							[
								0,
								[
									4,
									[
										20,
										0,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
									,[
										0,
										2
									]
								]
							]
							]
						]
,						[
							5,
							cr.plugins_.Sprite.prototype.acts.MoveToBottom,
							null,
							1340445708345778,
							false
						]
,						[
							5,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							5188477233995795,
							false
							,[
							[
								10,
								0
							]
,							[
								7,
								[
									0,
									7
								]
							]
							]
						]
,						[
							5,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							4178695145262795,
							false
							,[
							[
								10,
								1
							]
,							[
								7,
								[
									2,
									"offense"
								]
							]
							]
						]
,						[
							5,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							370515340169758,
							false
							,[
							[
								10,
								2
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							5,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							8000431890303673,
							false
							,[
							[
								10,
								3
							]
,							[
								7,
								[
									0,
									50
								]
							]
							]
						]
,						[
							5,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							3535343745247335,
							false
							,[
							[
								10,
								4
							]
,							[
								7,
								[
									0,
									50
								]
							]
							]
						]
,						[
							5,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							1168057166918362,
							false
							,[
							[
								10,
								5
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
,						[
							5,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							764083353230013,
							false
							,[
							[
								10,
								6
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							5,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							4648302920697165,
							false
							,[
							[
								10,
								7
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
,						[
							5,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							2729186513503741,
							false
							,[
							[
								10,
								8
							]
,							[
								7,
								[
									0,
									250
								]
							]
							]
						]
,						[
							5,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							3218608309163664,
							false
							,[
							[
								10,
								9
							]
,							[
								7,
								[
									1,
									1.8
								]
							]
							]
						]
,						[
							5,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							1628029638176484,
							false
							,[
							[
								10,
								10
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							5,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							2993800951926773,
							false
							,[
							[
								10,
								11
							]
,							[
								7,
								[
									0,
									70
								]
							]
							]
						]
,						[
							5,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							1598788002605024,
							false
							,[
							[
								10,
								12
							]
,							[
								7,
								[
									0,
									30
								]
							]
							]
						]
,						[
							51,
							cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
							null,
							9661534841853889,
							false
							,[
							[
								0,
								[
									0,
									3
								]
							]
							]
						]
,						[
							102,
							cr.plugins_.Sprite.prototype.acts.SetX,
							null,
							4751310615656753,
							false
							,[
							[
								0,
								[
									20,
									5,
									cr.plugins_.Sprite.prototype.exps.X,
									false,
									null
								]
							]
							]
						]
,						[
							102,
							cr.plugins_.Sprite.prototype.acts.SetY,
							null,
							1929023968261026,
							false
							,[
							[
								0,
								[
									5,
									[
										20,
										5,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
									,[
										0,
										100
									]
								]
							]
							]
						]
,						[
							102,
							cr.behaviors.Pin.prototype.acts.Pin,
							"Pin",
							356887282693879,
							false
							,[
							[
								4,
								5
							]
,							[
								3,
								0
							]
							]
						]
,						[
							104,
							cr.plugins_.Sprite.prototype.acts.SetX,
							null,
							4022247597095293,
							false
							,[
							[
								0,
								[
									20,
									5,
									cr.plugins_.Sprite.prototype.exps.X,
									false,
									null
								]
							]
							]
						]
,						[
							104,
							cr.plugins_.Sprite.prototype.acts.SetY,
							null,
							6175325228550649,
							false
							,[
							[
								0,
								[
									5,
									[
										20,
										5,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
									,[
										0,
										100
									]
								]
							]
							]
						]
,						[
							104,
							cr.behaviors.Pin.prototype.acts.Pin,
							"Pin",
							3264658950946821,
							false
							,[
							[
								4,
								5
							]
,							[
								3,
								0
							]
							]
						]
,						[
							102,
							cr.plugins_.Sprite.prototype.acts.SetVisible,
							null,
							6408411130405467,
							false
							,[
							[
								3,
								0
							]
							]
						]
,						[
							104,
							cr.plugins_.Sprite.prototype.acts.SetVisible,
							null,
							3165407205062029,
							false
							,[
							[
								3,
								0
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						1645921422292063,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Compare,
							null,
							0,
							false,
							false,
							false,
							2604283804227882,
							false
							,[
							[
								7,
								[
									23,
									"vFightNumber"
								]
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									7
								]
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							3005429500152954,
							false
							,[
							[
								11,
								"vEnemyStaminaMax"
							]
,							[
								7,
								[
									0,
									12
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							8388054091566874,
							false
							,[
							[
								11,
								"vEnemyStamina"
							]
,							[
								7,
								[
									23,
									"vEnemyStaminaMax"
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							6576224186814506,
							false
							,[
							[
								11,
								"vEnemyStaminaRegenTime"
							]
,							[
								7,
								[
									1,
									1.5
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							9574516340259903,
							false
							,[
							[
								11,
								"vEnemyStaminaRegenCur"
							]
,							[
								7,
								[
									23,
									"vEnemyStaminaRegenTime"
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							8052523384669002,
							false
							,[
							[
								11,
								"vEnemyMaxHealth"
							]
,							[
								7,
								[
									0,
									25
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							6901059210191292,
							false
							,[
							[
								11,
								"vEnemy_Health"
							]
,							[
								7,
								[
									23,
									"vEnemyMaxHealth"
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							5359235022778631,
							false
							,[
							[
								11,
								"vEnemy_AttackDistance"
							]
,							[
								7,
								[
									0,
									200
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							9911172704842758,
							false
							,[
							[
								11,
								"vEnemy_CanAttack"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							3643504619293488,
							false
							,[
							[
								11,
								"vEnemy_CanBlock"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							5608417786111908,
							false
							,[
							[
								11,
								"vEnemy_CantAct"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							1857126861630376,
							false
							,[
							[
								11,
								"vEnemy_IsNearEndOfMap"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							7916879554475856,
							false
							,[
							[
								11,
								"vEnemy_IsMoving"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							9804859155689975,
							false
							,[
							[
								11,
								"vIsCraigenInAttackRange"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							3049644208086114,
							false
							,[
							[
								11,
								"vIsEnemyInAttackRange"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.CreateObject,
							null,
							8906644474531655,
							false
							,[
							[
								4,
								5
							]
,							[
								5,
								[
									0,
									3
								]
							]
,							[
								0,
								[
									5,
									[
										6,
										[
											19,
											cr.system_object.prototype.exps.scrollx
										]
										,[
											0,
											2
										]
									]
									,[
										0,
										250
									]
								]
							]
,							[
								0,
								[
									4,
									[
										20,
										0,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
									,[
										0,
										2
									]
								]
							]
							]
						]
,						[
							5,
							cr.plugins_.Sprite.prototype.acts.MoveToBottom,
							null,
							3172538216169439,
							false
						]
,						[
							5,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							5510666459874143,
							false
							,[
							[
								10,
								0
							]
,							[
								7,
								[
									0,
									10
								]
							]
							]
						]
,						[
							5,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							3242491957275578,
							false
							,[
							[
								10,
								1
							]
,							[
								7,
								[
									2,
									"offense"
								]
							]
							]
						]
,						[
							5,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							4332509622858146,
							false
							,[
							[
								10,
								2
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							5,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							6506608724125046,
							false
							,[
							[
								10,
								3
							]
,							[
								7,
								[
									0,
									50
								]
							]
							]
						]
,						[
							5,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							3885409013101725,
							false
							,[
							[
								10,
								4
							]
,							[
								7,
								[
									0,
									50
								]
							]
							]
						]
,						[
							5,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							6378883332986609,
							false
							,[
							[
								10,
								5
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
,						[
							5,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							6340868541048243,
							false
							,[
							[
								10,
								6
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							5,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							9322176585782671,
							false
							,[
							[
								10,
								7
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
,						[
							5,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							8811231779988615,
							false
							,[
							[
								10,
								8
							]
,							[
								7,
								[
									0,
									250
								]
							]
							]
						]
,						[
							5,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							6832083153525055,
							false
							,[
							[
								10,
								9
							]
,							[
								7,
								[
									1,
									1.5
								]
							]
							]
						]
,						[
							5,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							765965360474523,
							false
							,[
							[
								10,
								10
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
,						[
							5,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							2510719060703851,
							false
							,[
							[
								10,
								11
							]
,							[
								7,
								[
									0,
									70
								]
							]
							]
						]
,						[
							5,
							cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
							null,
							5791379490688487,
							false
							,[
							[
								10,
								12
							]
,							[
								7,
								[
									0,
									30
								]
							]
							]
						]
,						[
							51,
							cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
							null,
							1071471920877014,
							false
							,[
							[
								0,
								[
									0,
									3
								]
							]
							]
						]
,						[
							102,
							cr.plugins_.Sprite.prototype.acts.SetX,
							null,
							5145550663340156,
							false
							,[
							[
								0,
								[
									20,
									5,
									cr.plugins_.Sprite.prototype.exps.X,
									false,
									null
								]
							]
							]
						]
,						[
							102,
							cr.plugins_.Sprite.prototype.acts.SetY,
							null,
							8715876548847766,
							false
							,[
							[
								0,
								[
									5,
									[
										20,
										5,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
									,[
										0,
										100
									]
								]
							]
							]
						]
,						[
							102,
							cr.behaviors.Pin.prototype.acts.Pin,
							"Pin",
							6442420962893738,
							false
							,[
							[
								4,
								5
							]
,							[
								3,
								0
							]
							]
						]
,						[
							104,
							cr.plugins_.Sprite.prototype.acts.SetX,
							null,
							5963037546866009,
							false
							,[
							[
								0,
								[
									20,
									5,
									cr.plugins_.Sprite.prototype.exps.X,
									false,
									null
								]
							]
							]
						]
,						[
							104,
							cr.plugins_.Sprite.prototype.acts.SetY,
							null,
							3280150126542646,
							false
							,[
							[
								0,
								[
									5,
									[
										20,
										5,
										cr.plugins_.Sprite.prototype.exps.Y,
										false,
										null
									]
									,[
										0,
										100
									]
								]
							]
							]
						]
,						[
							104,
							cr.behaviors.Pin.prototype.acts.Pin,
							"Pin",
							5284835518531932,
							false
							,[
							[
								4,
								5
							]
,							[
								3,
								0
							]
							]
						]
,						[
							102,
							cr.plugins_.Sprite.prototype.acts.SetVisible,
							null,
							6754771371100724,
							false
							,[
							[
								3,
								0
							]
							]
						]
,						[
							104,
							cr.plugins_.Sprite.prototype.acts.SetVisible,
							null,
							7988244060615087,
							false
							,[
							[
								3,
								0
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						2831086321664277,
						[
						[
							-1,
							cr.system_object.prototype.cnds.EveryTick,
							null,
							0,
							false,
							false,
							false,
							2028845516757725,
							false
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							6771262241639348,
							[
							[
								-1,
								cr.system_object.prototype.cnds.Compare,
								null,
								0,
								false,
								false,
								false,
								2635460610511018,
								false
								,[
								[
									7,
									[
										23,
										"vFightNumber"
									]
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										0
									]
								]
								]
							]
							],
							[
							[
								43,
								cr.plugins_.Sprite.prototype.acts.SetVisible,
								null,
								7234681380592628,
								false
								,[
								[
									3,
									0
								]
								]
							]
,							[
								-1,
								cr.system_object.prototype.acts.Wait,
								null,
								5831352741703013,
								false
								,[
								[
									0,
									[
										1,
										0.2
									]
								]
								]
							]
,							[
								9,
								cr.plugins_.Sprite.prototype.acts.SetVisible,
								null,
								5548577747785484,
								false
								,[
								[
									3,
									1
								]
								]
							]
,							[
								9,
								cr.plugins_.Sprite.prototype.acts.SetX,
								null,
								5349575099966937,
								false
								,[
								[
									0,
									[
										19,
										cr.system_object.prototype.exps.scrollx
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							2650833743322492,
							[
							[
								-1,
								cr.system_object.prototype.cnds.Else,
								null,
								0,
								false,
								false,
								false,
								8514702384040684,
								false
							]
							],
							[
							[
								32,
								cr.plugins_.Sprite.prototype.acts.SetVisible,
								null,
								749243037425262,
								false
								,[
								[
									3,
									0
								]
								]
							]
,							[
								9,
								cr.plugins_.Sprite.prototype.acts.SetVisible,
								null,
								7559299782525631,
								false
								,[
								[
									3,
									0
								]
								]
							]
,							[
								-1,
								cr.system_object.prototype.acts.Wait,
								null,
								6356398014996178,
								false
								,[
								[
									0,
									[
										1,
										1
									]
								]
								]
							]
,							[
								43,
								cr.plugins_.Sprite.prototype.acts.SetVisible,
								null,
								7542885501296454,
								false
								,[
								[
									3,
									0
								]
								]
							]
,							[
								-1,
								cr.system_object.prototype.acts.SetGroupActive,
								null,
								4585037395671634,
								false
								,[
								[
									1,
									[
										2,
										"Player"
									]
								]
,								[
									3,
									1
								]
								]
							]
,							[
								-1,
								cr.system_object.prototype.acts.SetGroupActive,
								null,
								6867384757479853,
								false
								,[
								[
									1,
									[
										2,
										"EnemyAI"
									]
								]
,								[
									3,
									1
								]
								]
							]
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "GameplayCallbacks"],
			false,
			null,
			1919246136133848,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				1919246136133848,
				false
				,[
				[
					1,
					[
						2,
						"GameplayCallbacks"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				3484666392319804,
				[
				[
					72,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					5463401874894169,
					false
					,[
					[
						1,
						[
							2,
							"onCloseTutorial"
						]
					]
					]
				]
				],
				[
				[
					32,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					8187586647514686,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					9,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					585140744897504,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					43,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					1135878797185817,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					724108578900272,
					false
					,[
					[
						0,
						[
							1,
							1
						]
					]
					]
				]
,				[
					43,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					3988851559342486,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetGroupActive,
					null,
					6684706399775471,
					false
					,[
					[
						1,
						[
							2,
							"Player"
						]
					]
,					[
						3,
						1
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetGroupActive,
					null,
					1118022918562673,
					false
					,[
					[
						1,
						[
							2,
							"EnemyAI"
						]
					]
,					[
						3,
						1
					]
					]
				]
,				[
					28,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					85090789682132,
					false
					,[
					[
						3,
						0
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				1019431476445179,
				[
				[
					72,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					6096571885533479,
					false
					,[
					[
						1,
						[
							2,
							"showGameOver"
						]
					]
					]
				]
				],
				[
				[
					35,
					cr.plugins_.Sprite.prototype.acts.SetX,
					null,
					8137544832328939,
					false
					,[
					[
						0,
						[
							19,
							cr.system_object.prototype.exps.scrollx
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					261355779609331,
					false
					,[
					[
						0,
						[
							1,
							1.25
						]
					]
					]
				]
,				[
					35,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					1701293082018695,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					15,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					5945371225021386,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					12,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					6438431848003892,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					13,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					3054808985104638,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					21,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					6276189978273789,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					20,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					8039934088630192,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					18,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					9800738195599365,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					19,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					819973089497941,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					28,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					256625992596439,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					72,
					cr.plugins_.Function.prototype.acts.CallFunction,
					null,
					4047129201892061,
					false
					,[
					[
						1,
						[
							2,
							"ShowSpilADS"
						]
					]
,					[
						13,
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8271015272015012,
				[
				[
					72,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					3206925719695381,
					false
					,[
					[
						1,
						[
							2,
							"showLevelCompleted"
						]
					]
					]
				]
				],
				[
				[
					12,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					9301259972476642,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					14,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					2034664395752458,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					38,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					5642184012654259,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					13,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					5358847287830832,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					21,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					7835652465125045,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					20,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					8882022400921952,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					18,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					2658284895401048,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					19,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					7547775360158215,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					28,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					5054566225850065,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					72,
					cr.plugins_.Function.prototype.acts.CallFunction,
					null,
					7387281039549685,
					false
					,[
					[
						1,
						[
							2,
							"ShowSpilADS"
						]
					]
,					[
						13,
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					9189369830163724,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						9121018458453976,
						false
						,[
						[
							7,
							[
								23,
								"CurLevel"
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								23,
								"MaxUnlockedLevel"
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.AddVar,
						null,
						5052256292484775,
						false
						,[
						[
							11,
							"MaxUnlockedLevel"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
,					[
						72,
						cr.plugins_.Function.prototype.acts.CallFunction,
						null,
						422746462450091,
						false
						,[
						[
							1,
							[
								2,
								"saveMax"
							]
						]
,						[
							13,
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7768752171039679,
				[
				[
					72,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					1321030377312277,
					false
					,[
					[
						1,
						[
							2,
							"onRestartGameplay"
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetGroupActive,
					null,
					9009719327253524,
					false
					,[
					[
						1,
						[
							2,
							"GameplayUpdate"
						]
					]
,					[
						3,
						0
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					4864209411405492,
					false
					,[
					[
						0,
						[
							1,
							0.1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.RestartLayout,
					null,
					2232324327160955,
					false
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3431799908276169,
				[
				[
					72,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					868386965663686,
					false
					,[
					[
						1,
						[
							2,
							"onContinue"
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetGroupActive,
					null,
					8272405183123363,
					false
					,[
					[
						1,
						[
							2,
							"GameplayUpdate"
						]
					]
,					[
						3,
						0
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					2062750613778696,
					false
					,[
					[
						0,
						[
							1,
							0.1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.AddVar,
					null,
					9533910343729402,
					false
					,[
					[
						11,
						"vFightNumber"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					2261672232081495,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						4565950421953408,
						false
						,[
						[
							7,
							[
								23,
								"vFightNumber"
							]
						]
,						[
							8,
							2
						]
,						[
							7,
							[
								0,
								8
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.GoToLayout,
						null,
						7797460538562268,
						false
						,[
						[
							6,
							"UpgradeScreen"
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					500486477844589,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Else,
						null,
						0,
						false,
						false,
						false,
						136721406528548,
						false
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.GoToLayout,
						null,
						8927599765076566,
						false
						,[
						[
							6,
							"GameCompleted"
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				839051862815355,
				[
				[
					72,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					2760683572631677,
					false
					,[
					[
						1,
						[
							2,
							"onBackToMain"
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetGroupActive,
					null,
					1192967027777164,
					false
					,[
					[
						1,
						[
							2,
							"GameplayUpdate"
						]
					]
,					[
						3,
						0
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.GoToLayout,
					null,
					5759166916333402,
					false
					,[
					[
						6,
						"CoverScreen"
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7258488750874358,
				[
				[
					72,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					1556409464030609,
					false
					,[
					[
						1,
						[
							2,
							"onPause"
						]
					]
					]
				]
				],
				[
				[
					81,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					4113451538035389,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					80,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					2237265461929292,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					16,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					1563328386908095,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetTimescale,
					null,
					3033689975426779,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetGroupActive,
					null,
					6831753731341892,
					false
					,[
					[
						1,
						[
							2,
							"GameplayUpdate"
						]
					]
,					[
						3,
						0
					]
					]
				]
,				[
					10,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					9371546501938206,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					6446222973238659,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					28,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					1693081251217635,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3609008612569001,
				[
				[
					72,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					1804108302270122,
					false
					,[
					[
						1,
						[
							2,
							"onUnpause"
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetTimescale,
					null,
					1510880090206456,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetGroupActive,
					null,
					55646888404292,
					false
					,[
					[
						1,
						[
							2,
							"GameplayUpdate"
						]
					]
,					[
						3,
						1
					]
					]
				]
,				[
					10,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					4951254073268636,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					81,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					9118127524427461,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					80,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					3120828247014875,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					16,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					720425472590538,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					17,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					4512948414331991,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					28,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					3089886254625742,
					false
					,[
					[
						3,
						0
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				4276676571803998,
				[
				[
					72,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					7335394940718422,
					false
					,[
					[
						1,
						[
							2,
							"onStop"
						]
					]
					]
				]
				],
				[
				]
			]
			]
		]
,		[
			0,
			[false, "Player"],
			false,
			null,
			1768331420537177,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				1768331420537177,
				false
				,[
				[
					1,
					[
						2,
						"Player"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				true,
				null,
				4731573243097124,
				[
				[
					0,
					cr.plugins_.Sprite.prototype.cnds.IsAnimPlaying,
					null,
					0,
					false,
					false,
					false,
					7637069335740913,
					false
					,[
					[
						1,
						[
							2,
							"Attack_1"
						]
					]
					]
				]
,				[
					0,
					cr.plugins_.Sprite.prototype.cnds.IsAnimPlaying,
					null,
					0,
					false,
					false,
					false,
					4591792629260834,
					false
					,[
					[
						1,
						[
							2,
							"Attack_2"
						]
					]
					]
				]
,				[
					0,
					cr.plugins_.Sprite.prototype.cnds.IsAnimPlaying,
					null,
					0,
					false,
					false,
					false,
					8392027039317713,
					false
					,[
					[
						1,
						[
							2,
							"Attack_3"
						]
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					3164298047077661,
					[
					[
						0,
						cr.plugins_.Sprite.prototype.cnds.CompareFrame,
						null,
						0,
						false,
						false,
						false,
						1756334509515996,
						false
						,[
						[
							8,
							5
						]
,						[
							0,
							[
								0,
								8
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						8497215973618188,
						false
						,[
						[
							7,
							[
								23,
								"vCraigenCanDealDamage"
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						1344332660369986,
						false
						,[
						[
							11,
							"vCraigenCanDealDamage"
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					]
					,[
					[
						0,
						null,
						false,
						null,
						770186993492025,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Compare,
							null,
							0,
							false,
							false,
							false,
							1899063753858985,
							false
							,[
							[
								7,
								[
									4,
									[
										20,
										0,
										cr.plugins_.Sprite.prototype.exps.X,
										false,
										null
									]
									,[
										23,
										"vCraigenAttackDistance"
									]
								]
							]
,							[
								8,
								4
							]
,							[
								7,
								[
									20,
									110,
									cr.plugins_.Sprite.prototype.exps.X,
									false,
									null
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							1352707609067328,
							[
							[
								110,
								cr.plugins_.Sprite.prototype.cnds.IsAnimPlaying,
								null,
								0,
								false,
								true,
								false,
								4970990484426374,
								false
								,[
								[
									1,
									[
										2,
										"Block"
									]
								]
								]
							]
							],
							[
							[
								72,
								cr.plugins_.Function.prototype.acts.CallFunction,
								null,
								8301357326660703,
								false
								,[
								[
									1,
									[
										2,
										"dealDamageToEnemy"
									]
								]
,								[
									13,
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							3505822115482917,
							[
							[
								-1,
								cr.system_object.prototype.cnds.Else,
								null,
								0,
								false,
								false,
								false,
								2924719114128155,
								false
							]
,							[
								110,
								cr.plugins_.Sprite.prototype.cnds.CompareFrame,
								null,
								0,
								false,
								false,
								false,
								7863860947018842,
								false
								,[
								[
									8,
									2
								]
,								[
									0,
									[
										0,
										1
									]
								]
								]
							]
,							[
								110,
								cr.plugins_.Sprite.prototype.cnds.CompareFrame,
								null,
								0,
								false,
								false,
								false,
								9164357085743774,
								false
								,[
								[
									8,
									4
								]
,								[
									0,
									[
										5,
										[
											20,
											110,
											cr.plugins_.Sprite.prototype.exps.AnimationFrameCount,
											false,
											null
										]
										,[
											0,
											2
										]
									]
								]
								]
							]
							],
							[
							[
								72,
								cr.plugins_.Function.prototype.acts.CallFunction,
								null,
								3125546966949018,
								false
								,[
								[
									1,
									[
										2,
										"dealDamageToEnemy"
									]
								]
,								[
									13,
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							7241368564326675,
							[
							[
								-1,
								cr.system_object.prototype.cnds.Else,
								null,
								0,
								false,
								false,
								false,
								9070047527753684,
								false
							]
							],
							[
							[
								102,
								cr.plugins_.Sprite.prototype.acts.SetVisible,
								null,
								4797079908021407,
								false
								,[
								[
									3,
									1
								]
								]
							]
,							[
								-1,
								cr.system_object.prototype.acts.Wait,
								null,
								6283746901428717,
								false
								,[
								[
									0,
									[
										1,
										0.5
									]
								]
								]
							]
,							[
								102,
								cr.plugins_.Sprite.prototype.acts.SetVisible,
								null,
								7637754576652815,
								false
								,[
								[
									3,
									0
								]
								]
							]
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5799520476760532,
				[
				[
					0,
					cr.plugins_.Sprite.prototype.cnds.OnAnimFinished,
					null,
					1,
					false,
					false,
					false,
					1145527416371051,
					false
					,[
					[
						1,
						[
							2,
							"Die"
						]
					]
					]
				]
				],
				[
				[
					72,
					cr.plugins_.Function.prototype.acts.CallFunction,
					null,
					902591158623767,
					false
					,[
					[
						1,
						[
							2,
							"showGameOver"
						]
					]
,					[
						13,
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6183728515277131,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					144123452966428,
					false
					,[
					[
						7,
						[
							23,
							"vCraigenHealth"
						]
					]
,					[
						8,
						3
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					0,
					cr.plugins_.Sprite.prototype.cnds.IsAnimPlaying,
					null,
					0,
					false,
					true,
					false,
					3239058776564773,
					false
					,[
					[
						1,
						[
							2,
							"Die"
						]
					]
					]
				]
				],
				[
				[
					0,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					3042117066088902,
					false
					,[
					[
						1,
						[
							2,
							"Die"
						]
					]
,					[
						3,
						1
					]
					]
				]
,				[
					53,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					6600909578395207,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					55,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					4745173669249405,
					false
					,[
					[
						3,
						0
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9130596864024696,
				[
				[
					72,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					3972301553222887,
					false
					,[
					[
						1,
						[
							2,
							"updateCraigenHealth"
						]
					]
					]
				]
				],
				[
				[
					53,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					8733293497994215,
					false
					,[
					[
						0,
						[
							19,
							cr.system_object.prototype.exps.floor
							,[
[
								6,
								[
									7,
									[
										23,
										"vCraigenHealth"
									]
									,[
										23,
										"vCraigenMaxHealth"
									]
								]
								,[
									0,
									10
								]
							]
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6007650406898411,
				[
				[
					72,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					1664551534112366,
					false
					,[
					[
						1,
						[
							2,
							"updateCraigenStamina"
						]
					]
					]
				]
				],
				[
				[
					55,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					6441464809748664,
					false
					,[
					[
						0,
						[
							19,
							cr.system_object.prototype.exps.floor
							,[
[
								6,
								[
									7,
									[
										23,
										"vCraigenStamina"
									]
									,[
										23,
										"vCraigenStaminaMax"
									]
								]
								,[
									0,
									10
								]
							]
							]
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					4393402121439245,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						5244736583241344,
						false
						,[
						[
							7,
							[
								23,
								"vCraigenStamina"
							]
						]
,						[
							8,
							4
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						48,
						cr.plugins_.Sprite.prototype.acts.SetVisible,
						null,
						9562366271803301,
						false
						,[
						[
							3,
							0
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					2735445175205738,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Else,
						null,
						0,
						false,
						false,
						false,
						8612654276416895,
						false
					]
					],
					[
					[
						48,
						cr.plugins_.Sprite.prototype.acts.SetVisible,
						null,
						9260912618578767,
						false
						,[
						[
							3,
							1
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2241206949413471,
				[
				[
					72,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					9430653202174589,
					false
					,[
					[
						1,
						[
							2,
							"onDealDamageToCraigen"
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SubVar,
					null,
					3935219962377647,
					false
					,[
					[
						11,
						"vCraigenHealth"
					]
,					[
						7,
						[
							21,
							110,
							false,
							null
							,0
						]
					]
					]
				]
,				[
					72,
					cr.plugins_.Function.prototype.acts.CallFunction,
					null,
					7240388140684791,
					false
					,[
					[
						1,
						[
							2,
							"updateCraigenHealth"
						]
					]
,					[
						13,
					]
					]
				]
,				[
					103,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					6683700979634243,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					4380358472056739,
					false
					,[
					[
						0,
						[
							1,
							0.5
						]
					]
					]
				]
,				[
					103,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					4237808939070998,
					false
					,[
					[
						3,
						0
					]
					]
				]
				]
			]
,			[
				0,
				null,
				true,
				null,
				4659948135806774,
				[
				[
					74,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					615432613715917,
					false
					,[
					[
						4,
						21
					]
					]
				]
,				[
					77,
					cr.plugins_.Keyboard.prototype.cnds.IsKeyDown,
					null,
					0,
					false,
					false,
					false,
					5223225080939742,
					false
					,[
					[
						9,
						90
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					3740244731432357,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						4622728637142092,
						false
						,[
						[
							7,
							[
								23,
								"vCraigenHealth"
							]
						]
,						[
							8,
							4
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						5997222925666621,
						false
						,[
						[
							7,
							[
								23,
								"vCraigenStamina"
							]
						]
,						[
							8,
							4
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						1,
						"attackType",
						0,
						0,
false,false,7058051203039042,false
					]
,					[
						0,
						null,
						false,
						null,
						9267709449370218,
						[
						[
							-1,
							cr.system_object.prototype.cnds.EveryTick,
							null,
							0,
							false,
							false,
							false,
							4229341630348759,
							false
						]
,						[
							0,
							cr.plugins_.Sprite.prototype.cnds.IsAnimPlaying,
							null,
							0,
							false,
							true,
							false,
							3312349136969399,
							false
							,[
							[
								1,
								[
									2,
									"Victory"
								]
							]
							]
						]
,						[
							0,
							cr.plugins_.Sprite.prototype.cnds.IsAnimPlaying,
							null,
							0,
							false,
							true,
							false,
							2730658934668089,
							false
							,[
							[
								1,
								[
									2,
									"Attack_1"
								]
							]
							]
						]
,						[
							0,
							cr.plugins_.Sprite.prototype.cnds.IsAnimPlaying,
							null,
							0,
							false,
							true,
							false,
							1143241182677443,
							false
							,[
							[
								1,
								[
									2,
									"Attack_2"
								]
							]
							]
						]
,						[
							0,
							cr.plugins_.Sprite.prototype.cnds.IsAnimPlaying,
							null,
							0,
							false,
							true,
							false,
							9595755964661629,
							false
							,[
							[
								1,
								[
									2,
									"Attack_3"
								]
							]
							]
						]
,						[
							0,
							cr.plugins_.Sprite.prototype.cnds.IsAnimPlaying,
							null,
							0,
							false,
							true,
							false,
							6293603719676262,
							false
							,[
							[
								1,
								[
									2,
									"Block"
								]
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							1741067741946009,
							false
							,[
							[
								11,
								"attackType"
							]
,							[
								7,
								[
									19,
									cr.system_object.prototype.exps.choose
									,[
[
										0,
										1
									]
,[
										0,
										2
									]
,[
										0,
										3
									]
									]
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							3231427369590636,
							false
							,[
							[
								11,
								"vCraigenCanDealDamage"
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SubVar,
							null,
							6801286022645554,
							false
							,[
							[
								11,
								"vCraigenStamina"
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
,						[
							72,
							cr.plugins_.Function.prototype.acts.CallFunction,
							null,
							8464015538155025,
							false
							,[
							[
								1,
								[
									2,
									"updateCraigenStamina"
								]
							]
,							[
								13,
							]
							]
						]
						]
						,[
						[
							0,
							null,
							false,
							null,
							785399249960057,
							[
							[
								-1,
								cr.system_object.prototype.cnds.Compare,
								null,
								0,
								false,
								false,
								false,
								4641619687940178,
								false
								,[
								[
									7,
									[
										23,
										"attackType"
									]
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
							],
							[
							[
								0,
								cr.plugins_.Sprite.prototype.acts.SetAnim,
								null,
								7154676209915671,
								false
								,[
								[
									1,
									[
										2,
										"Attack_1"
									]
								]
,								[
									3,
									1
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							9223683005488091,
							[
							[
								-1,
								cr.system_object.prototype.cnds.Compare,
								null,
								0,
								false,
								false,
								false,
								6049701241972242,
								false
								,[
								[
									7,
									[
										23,
										"attackType"
									]
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										2
									]
								]
								]
							]
							],
							[
							[
								0,
								cr.plugins_.Sprite.prototype.acts.SetAnim,
								null,
								1430072592336252,
								false
								,[
								[
									1,
									[
										2,
										"Attack_2"
									]
								]
,								[
									3,
									1
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							4775724257489376,
							[
							[
								-1,
								cr.system_object.prototype.cnds.Compare,
								null,
								0,
								false,
								false,
								false,
								570447975079924,
								false
								,[
								[
									7,
									[
										23,
										"attackType"
									]
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										3
									]
								]
								]
							]
							],
							[
							[
								0,
								cr.plugins_.Sprite.prototype.acts.SetAnim,
								null,
								9073994926410031,
								false
								,[
								[
									1,
									[
										2,
										"Attack_3"
									]
								]
,								[
									3,
									1
								]
								]
							]
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				true,
				null,
				1845140841254016,
				[
				[
					74,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					7298953462417619,
					false
					,[
					[
						4,
						20
					]
					]
				]
,				[
					77,
					cr.plugins_.Keyboard.prototype.cnds.IsKeyDown,
					null,
					0,
					false,
					false,
					false,
					175285612747386,
					false
					,[
					[
						9,
						88
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					5982225577134829,
					[
					[
						0,
						cr.plugins_.Sprite.prototype.cnds.IsAnimPlaying,
						null,
						0,
						false,
						true,
						false,
						4671896029900009,
						false
						,[
						[
							1,
							[
								2,
								"Victory"
							]
						]
						]
					]
,					[
						0,
						cr.plugins_.Sprite.prototype.cnds.IsAnimPlaying,
						null,
						0,
						false,
						true,
						false,
						9167821691970311,
						false
						,[
						[
							1,
							[
								2,
								"Attack_1"
							]
						]
						]
					]
,					[
						0,
						cr.plugins_.Sprite.prototype.cnds.IsAnimPlaying,
						null,
						0,
						false,
						true,
						false,
						7849694412677498,
						false
						,[
						[
							1,
							[
								2,
								"Attack_2"
							]
						]
						]
					]
,					[
						0,
						cr.plugins_.Sprite.prototype.cnds.IsAnimPlaying,
						null,
						0,
						false,
						true,
						false,
						6382218613961126,
						false
						,[
						[
							1,
							[
								2,
								"Attack_3"
							]
						]
						]
					]
,					[
						0,
						cr.plugins_.Sprite.prototype.cnds.IsAnimPlaying,
						null,
						0,
						false,
						true,
						false,
						9931818661087295,
						false
						,[
						[
							1,
							[
								2,
								"Block"
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						7639363057313423,
						false
						,[
						[
							7,
							[
								23,
								"vCraigenHealth"
							]
						]
,						[
							8,
							4
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						0,
						cr.plugins_.Sprite.prototype.acts.SetAnim,
						null,
						5143166441163976,
						false
						,[
						[
							1,
							[
								2,
								"Block"
							]
						]
,						[
							3,
							1
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				true,
				null,
				4712067836370128,
				[
				[
					74,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					2220626920232547,
					false
					,[
					[
						4,
						18
					]
					]
				]
,				[
					77,
					cr.plugins_.Keyboard.prototype.cnds.IsKeyDown,
					null,
					0,
					false,
					false,
					false,
					511589388067857,
					false
					,[
					[
						9,
						37
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					4595202450782408,
					[
					[
						0,
						cr.plugins_.Sprite.prototype.cnds.IsAnimPlaying,
						null,
						0,
						false,
						true,
						false,
						8783735701895201,
						false
						,[
						[
							1,
							[
								2,
								"Victory"
							]
						]
						]
					]
,					[
						0,
						cr.plugins_.Sprite.prototype.cnds.IsAnimPlaying,
						null,
						0,
						false,
						true,
						false,
						254496434476225,
						false
						,[
						[
							1,
							[
								2,
								"Attack_1"
							]
						]
						]
					]
,					[
						0,
						cr.plugins_.Sprite.prototype.cnds.IsAnimPlaying,
						null,
						0,
						false,
						true,
						false,
						1586466352422496,
						false
						,[
						[
							1,
							[
								2,
								"Attack_2"
							]
						]
						]
					]
,					[
						0,
						cr.plugins_.Sprite.prototype.cnds.IsAnimPlaying,
						null,
						0,
						false,
						true,
						false,
						4827036782481554,
						false
						,[
						[
							1,
							[
								2,
								"Attack_3"
							]
						]
						]
					]
,					[
						0,
						cr.plugins_.Sprite.prototype.cnds.IsAnimPlaying,
						null,
						0,
						false,
						true,
						false,
						3037368906075836,
						false
						,[
						[
							1,
							[
								2,
								"Block"
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						4269773817833353,
						false
						,[
						[
							7,
							[
								23,
								"vCraigenHealth"
							]
						]
,						[
							8,
							4
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						2345003136061912,
						[
						[
							0,
							cr.plugins_.Sprite.prototype.cnds.CompareX,
							null,
							0,
							false,
							false,
							false,
							9611405942578594,
							false
							,[
							[
								8,
								4
							]
,							[
								0,
								[
									0,
									30
								]
							]
							]
						]
						],
						[
						[
							0,
							cr.plugins_.Sprite.prototype.acts.SetAnim,
							null,
							4976006146395805,
							false
							,[
							[
								1,
								[
									2,
									"Move"
								]
							]
,							[
								3,
								1
							]
							]
						]
,						[
							0,
							cr.plugins_.Sprite.prototype.acts.SetX,
							null,
							4999097263138258,
							false
							,[
							[
								0,
								[
									5,
									[
										20,
										0,
										cr.plugins_.Sprite.prototype.exps.X,
										false,
										null
									]
									,[
										6,
										[
											23,
											"vCraigenSpeed"
										]
										,[
											19,
											cr.system_object.prototype.exps.dt
										]
									]
								]
							]
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				true,
				null,
				143951763254819,
				[
				[
					74,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					false,
					false,
					1577604514519056,
					false
					,[
					[
						4,
						19
					]
					]
				]
,				[
					77,
					cr.plugins_.Keyboard.prototype.cnds.IsKeyDown,
					null,
					0,
					false,
					false,
					false,
					964506700619671,
					false
					,[
					[
						9,
						39
					]
					]
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					9848832476659788,
					[
					[
						0,
						cr.plugins_.Sprite.prototype.cnds.IsAnimPlaying,
						null,
						0,
						false,
						true,
						false,
						4534099308195702,
						false
						,[
						[
							1,
							[
								2,
								"Victory"
							]
						]
						]
					]
,					[
						0,
						cr.plugins_.Sprite.prototype.cnds.IsAnimPlaying,
						null,
						0,
						false,
						true,
						false,
						2336059968814115,
						false
						,[
						[
							1,
							[
								2,
								"Attack_1"
							]
						]
						]
					]
,					[
						0,
						cr.plugins_.Sprite.prototype.cnds.IsAnimPlaying,
						null,
						0,
						false,
						true,
						false,
						363416066384365,
						false
						,[
						[
							1,
							[
								2,
								"Attack_2"
							]
						]
						]
					]
,					[
						0,
						cr.plugins_.Sprite.prototype.cnds.IsAnimPlaying,
						null,
						0,
						false,
						true,
						false,
						4189454693697116,
						false
						,[
						[
							1,
							[
								2,
								"Attack_3"
							]
						]
						]
					]
,					[
						0,
						cr.plugins_.Sprite.prototype.cnds.IsAnimPlaying,
						null,
						0,
						false,
						true,
						false,
						6852852555083675,
						false
						,[
						[
							1,
							[
								2,
								"Block"
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						6034863259650089,
						false
						,[
						[
							7,
							[
								23,
								"vCraigenHealth"
							]
						]
,						[
							8,
							4
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						6096807378041081,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Compare,
							null,
							0,
							false,
							false,
							false,
							5695639804706419,
							false
							,[
							[
								7,
								[
									4,
									[
										20,
										0,
										cr.plugins_.Sprite.prototype.exps.X,
										false,
										null
									]
									,[
										23,
										"vFightersMinimumDistance"
									]
								]
							]
,							[
								8,
								2
							]
,							[
								7,
								[
									20,
									110,
									cr.plugins_.Sprite.prototype.exps.X,
									false,
									null
								]
							]
							]
						]
						],
						[
						[
							0,
							cr.plugins_.Sprite.prototype.acts.SetAnim,
							null,
							8146960848751048,
							false
							,[
							[
								1,
								[
									2,
									"Move"
								]
							]
,							[
								3,
								1
							]
							]
						]
,						[
							0,
							cr.plugins_.Sprite.prototype.acts.SetX,
							null,
							2496837221225708,
							false
							,[
							[
								0,
								[
									4,
									[
										20,
										0,
										cr.plugins_.Sprite.prototype.exps.X,
										false,
										null
									]
									,[
										6,
										[
											23,
											"vCraigenSpeed"
										]
										,[
											19,
											cr.system_object.prototype.exps.dt
										]
									]
								]
							]
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				1682348073440559,
				[
				[
					0,
					cr.plugins_.Sprite.prototype.cnds.IsAnimPlaying,
					null,
					0,
					false,
					false,
					false,
					6175167360203586,
					false
					,[
					[
						1,
						[
							2,
							"Move"
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					5499604597801103,
					false
					,[
					[
						7,
						[
							23,
							"vCraigenHealth"
						]
					]
,					[
						8,
						4
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					74,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					true,
					false,
					4586399792966608,
					false
					,[
					[
						4,
						19
					]
					]
				]
,				[
					74,
					cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
					null,
					0,
					false,
					true,
					false,
					8215787320289577,
					false
					,[
					[
						4,
						18
					]
					]
				]
,				[
					77,
					cr.plugins_.Keyboard.prototype.cnds.IsKeyDown,
					null,
					0,
					false,
					true,
					false,
					8563324711036955,
					false
					,[
					[
						9,
						39
					]
					]
				]
,				[
					77,
					cr.plugins_.Keyboard.prototype.cnds.IsKeyDown,
					null,
					0,
					false,
					true,
					false,
					9237274192007152,
					false
					,[
					[
						9,
						37
					]
					]
				]
				],
				[
				[
					0,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					5154934455032536,
					false
					,[
					[
						1,
						[
							2,
							"Default"
						]
					]
,					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8051780372581603,
				[
				[
					-1,
					cr.system_object.prototype.cnds.EveryTick,
					null,
					0,
					false,
					false,
					false,
					7570325655456262,
					false
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					2272113733058445,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						6397442585946143,
						false
						,[
						[
							7,
							[
								23,
								"vCraigenStamina"
							]
						]
,						[
							8,
							2
						]
,						[
							7,
							[
								23,
								"vCraigenStaminaMax"
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SubVar,
						null,
						6257152010694841,
						false
						,[
						[
							11,
							"vCraigenStaminaRegenCur"
						]
,						[
							7,
							[
								19,
								cr.system_object.prototype.exps.dt
							]
						]
						]
					]
					]
					,[
					[
						0,
						null,
						false,
						null,
						4986245829523916,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Compare,
							null,
							0,
							false,
							false,
							false,
							8263659874190037,
							false
							,[
							[
								7,
								[
									23,
									"vCraigenStaminaRegenCur"
								]
							]
,							[
								8,
								3
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.AddVar,
							null,
							3054489606083081,
							false
							,[
							[
								11,
								"vCraigenStamina"
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
,						[
							72,
							cr.plugins_.Function.prototype.acts.CallFunction,
							null,
							6554526504703074,
							false
							,[
							[
								1,
								[
									2,
									"updateCraigenStamina"
								]
							]
,							[
								13,
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							4045480420467307,
							false
							,[
							[
								11,
								"vCraigenStaminaRegenCur"
							]
,							[
								7,
								[
									23,
									"vCraigenStaminaRegenTime"
								]
							]
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8636801943941777,
				[
				[
					-1,
					cr.system_object.prototype.cnds.EveryTick,
					null,
					0,
					false,
					false,
					false,
					5302430251354918,
					false
				]
				],
				[
				]
				,[
				[
					0,
					null,
					false,
					null,
					2609861536296337,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						3920105827315841,
						false
						,[
						[
							7,
							[
								23,
								"vCraigenStamina"
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						100,
						cr.plugins_.Sprite.prototype.acts.SetVisible,
						null,
						955596270850411,
						false
						,[
						[
							3,
							1
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					9682350717557545,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Else,
						null,
						0,
						false,
						false,
						false,
						3706215543942434,
						false
					]
					],
					[
					[
						100,
						cr.plugins_.Sprite.prototype.acts.SetVisible,
						null,
						7684543228712146,
						false
						,[
						[
							3,
							0
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[false, "EnemyAI"],
			false,
			null,
			916878807702425,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				916878807702425,
				false
				,[
				[
					1,
					[
						2,
						"EnemyAI"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				2020465078095629,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					435607001915513,
					false
					,[
					[
						7,
						[
							23,
							"vEnemy_Health"
						]
					]
,					[
						8,
						3
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					110,
					cr.plugins_.Sprite.prototype.cnds.IsAnimPlaying,
					null,
					0,
					false,
					true,
					false,
					9160545980725791,
					false
					,[
					[
						1,
						[
							2,
							"Die"
						]
					]
					]
				]
				],
				[
				[
					110,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					4893671983183108,
					false
					,[
					[
						1,
						[
							2,
							"Die"
						]
					]
,					[
						3,
						1
					]
					]
				]
,				[
					110,
					cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
					null,
					1525222591583606,
					false
					,[
					[
						10,
						6
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					50,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					4924075676643259,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					52,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					8675113838904742,
					false
					,[
					[
						3,
						0
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7166233000168303,
				[
				[
					110,
					cr.plugins_.Sprite.prototype.cnds.OnAnimFinished,
					null,
					1,
					false,
					false,
					false,
					2427211169434166,
					false
					,[
					[
						1,
						[
							2,
							"Attack_1"
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					5692128692839116,
					false
					,[
					[
						11,
						"vEnemy_CantAct"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6065025528877343,
				[
				[
					110,
					cr.plugins_.Sprite.prototype.cnds.OnAnimFinished,
					null,
					1,
					false,
					false,
					false,
					1304739166040786,
					false
					,[
					[
						1,
						[
							2,
							"Attack_2"
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					3901337292016688,
					false
					,[
					[
						11,
						"vEnemy_CantAct"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7891956740971501,
				[
				[
					110,
					cr.plugins_.Sprite.prototype.cnds.OnAnimFinished,
					null,
					1,
					false,
					false,
					false,
					2448219409504787,
					false
					,[
					[
						1,
						[
							2,
							"Block"
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					1674936124599667,
					false
					,[
					[
						11,
						"vEnemy_CantAct"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				1109788818513776,
				[
				[
					72,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					5426139292131554,
					false
					,[
					[
						1,
						[
							2,
							"updateAttackRangeBools"
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					9948006162705106,
					false
					,[
					[
						11,
						"vIsEnemyInAttackRange"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					9222487016280365,
					false
					,[
					[
						11,
						"vIsCraigenInAttackRange"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					7660200684073676,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						6994869082756442,
						false
						,[
						[
							7,
							[
								5,
								[
									20,
									110,
									cr.plugins_.Sprite.prototype.exps.X,
									false,
									null
								]
								,[
									23,
									"vEnemy_AttackDistance"
								]
							]
						]
,						[
							8,
							2
						]
,						[
							7,
							[
								20,
								0,
								cr.plugins_.Sprite.prototype.exps.X,
								false,
								null
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						6199944795580402,
						false
						,[
						[
							11,
							"vIsEnemyInAttackRange"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					872372890618125,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						5178189288264098,
						false
						,[
						[
							7,
							[
								4,
								[
									20,
									0,
									cr.plugins_.Sprite.prototype.exps.X,
									false,
									null
								]
								,[
									23,
									"vCraigenAttackDistance"
								]
							]
						]
,						[
							8,
							4
						]
,						[
							7,
							[
								20,
								110,
								cr.plugins_.Sprite.prototype.exps.X,
								false,
								null
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						2608924938675681,
						false
						,[
						[
							11,
							"vIsCraigenInAttackRange"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8909189700719024,
				[
				[
					72,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					6780532258475536,
					false
					,[
					[
						1,
						[
							2,
							"dealDamageToEnemy"
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SubVar,
					null,
					7464120513468919,
					false
					,[
					[
						11,
						"vEnemy_Health"
					]
,					[
						7,
						[
							23,
							"vCraigenDamage"
						]
					]
					]
				]
,				[
					72,
					cr.plugins_.Function.prototype.acts.CallFunction,
					null,
					326232076378351,
					false
					,[
					[
						1,
						[
							2,
							"updateEnemyHealth"
						]
					]
,					[
						13,
					]
					]
				]
,				[
					104,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					6592293057715945,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					9605581732219659,
					false
					,[
					[
						0,
						[
							1,
							0.5
						]
					]
					]
				]
,				[
					104,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					3180778019806274,
					false
					,[
					[
						3,
						0
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5082570696421752,
				[
				[
					72,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					6546359498069403,
					false
					,[
					[
						1,
						[
							2,
							"updateEnemyHealth"
						]
					]
					]
				]
				],
				[
				[
					50,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					3879722790320887,
					false
					,[
					[
						0,
						[
							19,
							cr.system_object.prototype.exps.floor
							,[
[
								6,
								[
									7,
									[
										23,
										"vEnemy_Health"
									]
									,[
										23,
										"vEnemyMaxHealth"
									]
								]
								,[
									0,
									10
								]
							]
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2903642142991301,
				[
				[
					72,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					2864302592027443,
					false
					,[
					[
						1,
						[
							2,
							"updateEnemyStamina"
						]
					]
					]
				]
				],
				[
				[
					52,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					1583602328797193,
					false
					,[
					[
						0,
						[
							19,
							cr.system_object.prototype.exps.floor
							,[
[
								6,
								[
									7,
									[
										23,
										"vEnemyStamina"
									]
									,[
										23,
										"vEnemyStaminaMax"
									]
								]
								,[
									0,
									10
								]
							]
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9057749310356179,
				[
				[
					72,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					5825123367968357,
					false
					,[
					[
						1,
						[
							2,
							"onEnemyStartAttack"
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					4881177019160465,
					false
					,[
					[
						11,
						"vEnemy_CantAct"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					110,
					cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
					null,
					4633182634768134,
					false
					,[
					[
						10,
						10
					]
,					[
						7,
						[
							21,
							110,
							false,
							null
							,9
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					2014484412529774,
					false
					,[
					[
						11,
						"vEnemyCanDealDamage"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SubVar,
					null,
					5406801757570387,
					false
					,[
					[
						11,
						"vEnemyStamina"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					72,
					cr.plugins_.Function.prototype.acts.CallFunction,
					null,
					2188053036161844,
					false
					,[
					[
						1,
						[
							2,
							"updateEnemyStamina"
						]
					]
,					[
						13,
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					1574964758284594,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						2254874143450778,
						false
						,[
						[
							7,
							[
								19,
								cr.system_object.prototype.exps.choose
								,[
[
									0,
									1
								]
,[
									0,
									2
								]
								]
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					],
					[
					[
						110,
						cr.plugins_.Sprite.prototype.acts.SetAnim,
						null,
						9326909285392977,
						false
						,[
						[
							1,
							[
								2,
								"Attack_1"
							]
						]
,						[
							3,
							1
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					3017431974242888,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Else,
						null,
						0,
						false,
						false,
						false,
						7812559151214,
						false
					]
					],
					[
					[
						110,
						cr.plugins_.Sprite.prototype.acts.SetAnim,
						null,
						5593328750765008,
						false
						,[
						[
							1,
							[
								2,
								"Attack_2"
							]
						]
,						[
							3,
							1
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				8210980560573034,
				[
				[
					72,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					5546276119686024,
					false
					,[
					[
						1,
						[
							2,
							"onEnemyStartBlock"
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					9072183605580075,
					false
					,[
					[
						11,
						"vEnemy_CantAct"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					110,
					cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
					null,
					9484823174254993,
					false
					,[
					[
						10,
						10
					]
,					[
						7,
						[
							21,
							110,
							false,
							null
							,9
						]
					]
					]
				]
,				[
					110,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					4776811039253849,
					false
					,[
					[
						1,
						[
							2,
							"Block"
						]
					]
,					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5828773035746854,
				[
				[
					72,
					cr.plugins_.Function.prototype.cnds.OnFunction,
					null,
					2,
					false,
					false,
					false,
					2132255123562032,
					false
					,[
					[
						1,
						[
							2,
							"updateEnemyAIBool"
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					6183526112799496,
					false
					,[
					[
						11,
						"vEnemy_IsMoving"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					6690407768730825,
					false
					,[
					[
						11,
						"vEnemy_IsNearEndOfMap"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					1861595881020024,
					false
					,[
					[
						11,
						"vCraigen_MovingForward"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					110,
					cr.plugins_.Sprite.prototype.acts.SubInstanceVar,
					null,
					3811336447446974,
					false
					,[
					[
						10,
						10
					]
,					[
						7,
						[
							19,
							cr.system_object.prototype.exps.dt
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					8231301666410574,
					false
					,[
					[
						11,
						"vEnemy_CanAttack"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					4587940050213448,
					false
					,[
					[
						11,
						"vEnemy_CanBlock"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					345685483078341,
					[
					[
						110,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						2858882315895349,
						false
						,[
						[
							10,
							6
						]
,						[
							8,
							4
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						3101137399917544,
						false
						,[
						[
							11,
							"vEnemy_IsMoving"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					6622593519069843,
					[
					[
						110,
						cr.plugins_.Sprite.prototype.cnds.CompareX,
						null,
						0,
						false,
						false,
						false,
						9546555448579453,
						false
						,[
						[
							8,
							5
						]
,						[
							0,
							[
								5,
								[
									6,
									[
										19,
										cr.system_object.prototype.exps.scrollx
									]
									,[
										0,
										2
									]
								]
								,[
									0,
									150
								]
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						541920557869776,
						false
						,[
						[
							11,
							"vEnemy_IsNearEndOfMap"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					1345871315515676,
					[
					[
						74,
						cr.plugins_.Touch.prototype.cnds.IsTouchingObject,
						null,
						0,
						false,
						false,
						false,
						6106689222944625,
						false
						,[
						[
							4,
							19
						]
						]
					]
,					[
						0,
						cr.plugins_.Sprite.prototype.cnds.IsAnimPlaying,
						null,
						0,
						false,
						false,
						false,
						510048034122528,
						false
						,[
						[
							1,
							[
								2,
								"Move"
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						9260733014261329,
						false
						,[
						[
							11,
							"vCraigen_MovingForward"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					8696053044068615,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						9604357397185792,
						false
						,[
						[
							7,
							[
								23,
								"vEnemy_CantAct"
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						110,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						4321698571657849,
						false
						,[
						[
							10,
							10
						]
,						[
							8,
							3
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						9635759905280943,
						false
						,[
						[
							11,
							"vEnemy_CanAttack"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					2623579255309087,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						7705886727514125,
						false
						,[
						[
							7,
							[
								23,
								"vEnemy_CantAct"
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						110,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						2875133493664873,
						false
						,[
						[
							10,
							10
						]
,						[
							8,
							3
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SetVar,
						null,
						1362516375844062,
						false
						,[
						[
							11,
							"vEnemy_CanBlock"
						]
,						[
							7,
							[
								0,
								1
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					9119878788657102,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						9551908305329236,
						false
						,[
						[
							7,
							[
								23,
								"vEnemy_Health"
							]
						]
,						[
							8,
							2
						]
,						[
							7,
							[
								0,
								5
							]
						]
						]
					]
,					[
						110,
						cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
						null,
						0,
						false,
						false,
						false,
						7534291140495586,
						false
						,[
						[
							10,
							1
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								2,
								"offense"
							]
						]
						]
					]
					],
					[
					[
						110,
						cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
						null,
						2646867571383607,
						false
						,[
						[
							10,
							1
						]
,						[
							7,
							[
								2,
								"defense"
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				2717099956709325,
				[
				[
					-1,
					cr.system_object.prototype.cnds.ForEach,
					null,
					0,
					true,
					false,
					false,
					3248032059457376,
					false
					,[
					[
						4,
						110
					]
					]
				]
				],
				[
				[
					72,
					cr.plugins_.Function.prototype.acts.CallFunction,
					null,
					215464538847563,
					false
					,[
					[
						1,
						[
							2,
							"updateAttackRangeBools"
						]
					]
,					[
						13,
					]
					]
				]
,				[
					72,
					cr.plugins_.Function.prototype.acts.CallFunction,
					null,
					2714399022039092,
					false
					,[
					[
						1,
						[
							2,
							"updateEnemyAIBool"
						]
					]
,					[
						13,
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					null,
					9411963402405463,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						5944997902819045,
						false
						,[
						[
							7,
							[
								23,
								"vEnemy_CantAct"
							]
						]
,						[
							8,
							0
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						2035882542615288,
						false
						,[
						[
							7,
							[
								23,
								"vCraigenHealth"
							]
						]
,						[
							8,
							4
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
,					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						8496128551277849,
						false
						,[
						[
							7,
							[
								23,
								"vEnemy_Health"
							]
						]
,						[
							8,
							4
						]
,						[
							7,
							[
								0,
								0
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						8207984958296732,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Compare,
							null,
							0,
							false,
							false,
							false,
							6683790268805788,
							false
							,[
							[
								7,
								[
									23,
									"vEnemyStamina"
								]
							]
,							[
								8,
								4
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							3538710289138804,
							[
							[
								-1,
								cr.system_object.prototype.cnds.Compare,
								null,
								0,
								false,
								false,
								false,
								6576960999115157,
								false
								,[
								[
									7,
									[
										23,
										"vEnemy_IsMoving"
									]
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
							],
							[
							]
							,[
							[
								0,
								null,
								false,
								null,
								1492375472672063,
								[
								[
									110,
									cr.plugins_.Sprite.prototype.cnds.IsAnimPlaying,
									null,
									0,
									false,
									true,
									false,
									8632584549848653,
									false
									,[
									[
										1,
										[
											2,
											"Move"
										]
									]
									]
								]
								],
								[
								[
									110,
									cr.plugins_.Sprite.prototype.acts.SetAnim,
									null,
									4770867951445451,
									false
									,[
									[
										1,
										[
											2,
											"Move"
										]
									]
,									[
										3,
										1
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								5128016794894101,
								[
								[
									110,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									1712877862124149,
									false
									,[
									[
										10,
										1
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											2,
											"defense"
										]
									]
									]
								]
								],
								[
								[
									110,
									cr.plugins_.Sprite.prototype.acts.SubInstanceVar,
									null,
									6530041760885089,
									false
									,[
									[
										10,
										6
									]
,									[
										7,
										[
											19,
											cr.system_object.prototype.exps.dt
										]
									]
									]
								]
								]
								,[
								[
									0,
									null,
									false,
									null,
									2504117088118816,
									[
									[
										-1,
										cr.system_object.prototype.cnds.Compare,
										null,
										0,
										false,
										false,
										false,
										4310946157472376,
										false
										,[
										[
											7,
											[
												23,
												"vEnemy_IsNearEndOfMap"
											]
										]
,										[
											8,
											0
										]
,										[
											7,
											[
												0,
												1
											]
										]
										]
									]
									],
									[
									[
										110,
										cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
										null,
										2900108537267419,
										false
										,[
										[
											10,
											6
										]
,										[
											7,
											[
												0,
												0
											]
										]
										]
									]
									]
								]
,								[
									0,
									null,
									false,
									null,
									1420922468981163,
									[
									[
										-1,
										cr.system_object.prototype.cnds.Else,
										null,
										0,
										false,
										false,
										false,
										6038508589137643,
										false
									]
									],
									[
									[
										110,
										cr.plugins_.Sprite.prototype.acts.SetX,
										null,
										9318857205852222,
										false
										,[
										[
											0,
											[
												4,
												[
													20,
													110,
													cr.plugins_.Sprite.prototype.exps.X,
													false,
													null
												]
												,[
													6,
													[
														5,
														[
															21,
															110,
															false,
															null
															,8
														]
														,[
															7,
															[
																21,
																110,
																false,
																null
																,8
															]
															,[
																0,
																4
															]
														]
													]
													,[
														19,
														cr.system_object.prototype.exps.dt
													]
												]
											]
										]
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								2791738573423236,
								[
								[
									-1,
									cr.system_object.prototype.cnds.Else,
									null,
									0,
									false,
									false,
									false,
									4757197759859699,
									false
								]
,								[
									110,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									1690848541233244,
									false
									,[
									[
										10,
										1
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											2,
											"offense"
										]
									]
									]
								]
								],
								[
								]
								,[
								[
									0,
									null,
									false,
									null,
									8122745521450075,
									[
									[
										-1,
										cr.system_object.prototype.cnds.Compare,
										null,
										0,
										false,
										false,
										false,
										8252851009140572,
										false
										,[
										[
											7,
											[
												23,
												"vIsEnemyInAttackRange"
											]
										]
,										[
											8,
											0
										]
,										[
											7,
											[
												0,
												0
											]
										]
										]
									]
									],
									[
									[
										110,
										cr.plugins_.Sprite.prototype.acts.SetX,
										null,
										850855763047294,
										false
										,[
										[
											0,
											[
												5,
												[
													20,
													110,
													cr.plugins_.Sprite.prototype.exps.X,
													false,
													null
												]
												,[
													6,
													[
														21,
														110,
														false,
														null
														,8
													]
													,[
														19,
														cr.system_object.prototype.exps.dt
													]
												]
											]
										]
										]
									]
									]
								]
,								[
									0,
									null,
									false,
									null,
									4564981266846809,
									[
									[
										-1,
										cr.system_object.prototype.cnds.Else,
										null,
										0,
										false,
										false,
										false,
										3360422770765696,
										false
									]
									],
									[
									[
										110,
										cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
										null,
										3814858080068053,
										false
										,[
										[
											10,
											6
										]
,										[
											7,
											[
												0,
												0
											]
										]
										]
									]
									]
								]
								]
							]
							]
						]
,						[
							0,
							null,
							false,
							null,
							4929239748460655,
							[
							[
								-1,
								cr.system_object.prototype.cnds.Else,
								null,
								0,
								false,
								false,
								false,
								8453564549438778,
								false
							]
							],
							[
							]
							,[
							[
								0,
								null,
								false,
								null,
								2507268759807901,
								[
								[
									110,
									cr.plugins_.Sprite.prototype.cnds.IsAnimPlaying,
									null,
									0,
									false,
									false,
									false,
									3980603185645952,
									false
									,[
									[
										1,
										[
											2,
											"Move"
										]
									]
									]
								]
								],
								[
								[
									110,
									cr.plugins_.Sprite.prototype.acts.SetAnim,
									null,
									4400066861455177,
									false
									,[
									[
										1,
										[
											2,
											"Default"
										]
									]
,									[
										3,
										1
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								5046204075140799,
								[
								[
									110,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									4397680195218244,
									false
									,[
									[
										10,
										1
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											2,
											"defense"
										]
									]
									]
								]
								],
								[
								]
								,[
								[
									0,
									null,
									false,
									null,
									9089692183610154,
									[
									[
										-1,
										cr.system_object.prototype.cnds.Compare,
										null,
										0,
										false,
										false,
										false,
										2940454787956994,
										false
										,[
										[
											7,
											[
												23,
												"vIsCraigenInAttackRange"
											]
										]
,										[
											8,
											0
										]
,										[
											7,
											[
												0,
												1
											]
										]
										]
									]
,									[
										-1,
										cr.system_object.prototype.cnds.Compare,
										null,
										0,
										false,
										false,
										false,
										7399732497560062,
										false
										,[
										[
											7,
											[
												23,
												"vIsEnemyInAttackRange"
											]
										]
,										[
											8,
											0
										]
,										[
											7,
											[
												0,
												1
											]
										]
										]
									]
									],
									[
									[
										-1,
										cr.system_object.prototype.acts.SetVar,
										null,
										1440671058398882,
										false
										,[
										[
											11,
											"vTempInt"
										]
,										[
											7,
											[
												19,
												cr.system_object.prototype.exps.random
												,[
[
													0,
													0
												]
,[
													0,
													100
												]
												]
											]
										]
										]
									]
									]
									,[
									[
										0,
										null,
										false,
										null,
										794936874039514,
										[
										[
											-1,
											cr.system_object.prototype.cnds.Compare,
											null,
											0,
											false,
											false,
											false,
											8757571280201079,
											false
											,[
											[
												7,
												[
													23,
													"vEnemy_IsNearEndOfMap"
												]
											]
,											[
												8,
												0
											]
,											[
												7,
												[
													0,
													0
												]
											]
											]
										]
,										[
											-1,
											cr.system_object.prototype.cnds.Compare,
											null,
											0,
											false,
											false,
											false,
											5774201329320531,
											false
											,[
											[
												7,
												[
													19,
													cr.system_object.prototype.exps.random
													,[
[
														0,
														0
													]
,[
														0,
														100
													]
													]
												]
											]
,											[
												8,
												2
											]
,											[
												7,
												[
													21,
													110,
													false,
													null
													,7
												]
											]
											]
										]
										],
										[
										[
											110,
											cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
											null,
											4222438296652793,
											false
											,[
											[
												10,
												6
											]
,											[
												7,
												[
													21,
													110,
													false,
													null
													,5
												]
											]
											]
										]
										]
									]
,									[
										0,
										null,
										false,
										null,
										8361546672012747,
										[
										[
											-1,
											cr.system_object.prototype.cnds.Compare,
											null,
											0,
											false,
											false,
											false,
											2667469460235861,
											false
											,[
											[
												7,
												[
													23,
													"vTempInt"
												]
											]
,											[
												8,
												3
											]
,											[
												7,
												[
													21,
													110,
													false,
													null
													,3
												]
											]
											]
										]
,										[
											-1,
											cr.system_object.prototype.cnds.Compare,
											null,
											0,
											false,
											false,
											false,
											2138357780336137,
											false
											,[
											[
												7,
												[
													23,
													"vEnemy_CanAttack"
												]
											]
,											[
												8,
												0
											]
,											[
												7,
												[
													0,
													1
												]
											]
											]
										]
										],
										[
										[
											72,
											cr.plugins_.Function.prototype.acts.CallFunction,
											null,
											9206026810811469,
											false
											,[
											[
												1,
												[
													2,
													"onEnemyStartAttack"
												]
											]
,											[
												13,
											]
											]
										]
										]
									]
,									[
										0,
										null,
										false,
										null,
										6404819174144079,
										[
										[
											-1,
											cr.system_object.prototype.cnds.Else,
											null,
											0,
											false,
											false,
											false,
											9443257171212301,
											false
										]
,										[
											-1,
											cr.system_object.prototype.cnds.Compare,
											null,
											0,
											false,
											false,
											false,
											5401445983330129,
											false
											,[
											[
												7,
												[
													23,
													"vTempInt"
												]
											]
,											[
												8,
												4
											]
,											[
												7,
												[
													21,
													110,
													false,
													null
													,3
												]
											]
											]
										]
,										[
											-1,
											cr.system_object.prototype.cnds.Compare,
											null,
											0,
											false,
											false,
											false,
											5175516762796393,
											false
											,[
											[
												7,
												[
													23,
													"vEnemy_CanBlock"
												]
											]
,											[
												8,
												0
											]
,											[
												7,
												[
													0,
													1
												]
											]
											]
										]
										],
										[
										[
											72,
											cr.plugins_.Function.prototype.acts.CallFunction,
											null,
											2910546810786074,
											false
											,[
											[
												1,
												[
													2,
													"onEnemyStartBlock"
												]
											]
,											[
												13,
											]
											]
										]
										]
									]
									]
								]
,								[
									0,
									null,
									false,
									null,
									6541805921712532,
									[
									[
										-1,
										cr.system_object.prototype.cnds.Else,
										null,
										0,
										false,
										false,
										false,
										9559993930935284,
										false
									]
,									[
										-1,
										cr.system_object.prototype.cnds.Compare,
										null,
										0,
										false,
										false,
										false,
										2027143577561863,
										false
										,[
										[
											7,
											[
												23,
												"vIsCraigenInAttackRange"
											]
										]
,										[
											8,
											0
										]
,										[
											7,
											[
												0,
												1
											]
										]
										]
									]
									],
									[
									]
									,[
									[
										0,
										null,
										false,
										null,
										9020356342789123,
										[
										[
											-1,
											cr.system_object.prototype.cnds.Compare,
											null,
											0,
											false,
											false,
											false,
											1292627211985964,
											false
											,[
											[
												7,
												[
													23,
													"vEnemy_IsNearEndOfMap"
												]
											]
,											[
												8,
												0
											]
,											[
												7,
												[
													0,
													0
												]
											]
											]
										]
,										[
											-1,
											cr.system_object.prototype.cnds.Compare,
											null,
											0,
											false,
											false,
											false,
											4854024248371318,
											false
											,[
											[
												7,
												[
													19,
													cr.system_object.prototype.exps.random
													,[
[
														0,
														0
													]
,[
														0,
														100
													]
													]
												]
											]
,											[
												8,
												2
											]
,											[
												7,
												[
													21,
													110,
													false,
													null
													,7
												]
											]
											]
										]
										],
										[
										[
											110,
											cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
											null,
											2053880638318727,
											false
											,[
											[
												10,
												6
											]
,											[
												7,
												[
													21,
													110,
													false,
													null
													,5
												]
											]
											]
										]
										]
									]
,									[
										0,
										null,
										false,
										null,
										9401602853934933,
										[
										[
											-1,
											cr.system_object.prototype.cnds.Else,
											null,
											0,
											false,
											false,
											false,
											2533766206509697,
											false
										]
,										[
											-1,
											cr.system_object.prototype.cnds.Compare,
											null,
											0,
											false,
											false,
											false,
											2779473839621468,
											false
											,[
											[
												7,
												[
													23,
													"vEnemy_CanBlock"
												]
											]
,											[
												8,
												0
											]
,											[
												7,
												[
													0,
													1
												]
											]
											]
										]
										],
										[
										[
											72,
											cr.plugins_.Function.prototype.acts.CallFunction,
											null,
											9184872334196062,
											false
											,[
											[
												1,
												[
													2,
													"onEnemyStartBlock"
												]
											]
,											[
												13,
											]
											]
										]
										]
									]
									]
								]
,								[
									0,
									null,
									false,
									null,
									3495469836437979,
									[
									[
										-1,
										cr.system_object.prototype.cnds.Else,
										null,
										0,
										false,
										false,
										false,
										727563309024942,
										false
									]
,									[
										-1,
										cr.system_object.prototype.cnds.Compare,
										null,
										0,
										false,
										false,
										false,
										206675927875806,
										false
										,[
										[
											7,
											[
												23,
												"vIsEnemyInAttackRange"
											]
										]
,										[
											8,
											0
										]
,										[
											7,
											[
												0,
												1
											]
										]
										]
									]
									],
									[
									]
									,[
									[
										0,
										null,
										false,
										null,
										480170123689881,
										[
										[
											-1,
											cr.system_object.prototype.cnds.Compare,
											null,
											0,
											false,
											false,
											false,
											3714602983551751,
											false
											,[
											[
												7,
												[
													23,
													"vEnemy_CanAttack"
												]
											]
,											[
												8,
												0
											]
,											[
												7,
												[
													0,
													1
												]
											]
											]
										]
										],
										[
										[
											72,
											cr.plugins_.Function.prototype.acts.CallFunction,
											null,
											8292492366850923,
											false
											,[
											[
												1,
												[
													2,
													"onEnemyStartAttack"
												]
											]
,											[
												13,
											]
											]
										]
										]
									]
									]
								]
,								[
									0,
									null,
									false,
									null,
									2379939214008638,
									[
									[
										-1,
										cr.system_object.prototype.cnds.Else,
										null,
										0,
										false,
										false,
										false,
										4891823252285226,
										false
									]
,									[
										-1,
										cr.system_object.prototype.cnds.Compare,
										null,
										0,
										false,
										false,
										false,
										5370693036055944,
										false
										,[
										[
											7,
											[
												23,
												"vEnemy_IsNearEndOfMap"
											]
										]
,										[
											8,
											0
										]
,										[
											7,
											[
												0,
												0
											]
										]
										]
									]
,									[
										-1,
										cr.system_object.prototype.cnds.Compare,
										null,
										0,
										false,
										false,
										false,
										9454559588710359,
										false
										,[
										[
											7,
											[
												23,
												"vCraigen_MovingForward"
											]
										]
,										[
											8,
											0
										]
,										[
											7,
											[
												0,
												1
											]
										]
										]
									]
									],
									[
									]
									,[
									[
										0,
										null,
										false,
										null,
										2789214022179546,
										[
										[
											-1,
											cr.system_object.prototype.cnds.Compare,
											null,
											0,
											false,
											false,
											false,
											1118763969338035,
											false
											,[
											[
												7,
												[
													19,
													cr.system_object.prototype.exps.random
													,[
[
														0,
														0
													]
,[
														0,
														100
													]
													]
												]
											]
,											[
												8,
												2
											]
,											[
												7,
												[
													21,
													110,
													false,
													null
													,7
												]
											]
											]
										]
										],
										[
										[
											110,
											cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
											null,
											930798006587609,
											false
											,[
											[
												10,
												6
											]
,											[
												7,
												[
													21,
													110,
													false,
													null
													,5
												]
											]
											]
										]
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								2640710250855327,
								[
								[
									-1,
									cr.system_object.prototype.cnds.Else,
									null,
									0,
									false,
									false,
									false,
									4128995422249899,
									false
								]
,								[
									110,
									cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
									null,
									0,
									false,
									false,
									false,
									1364270771691321,
									false
									,[
									[
										10,
										1
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											2,
											"offense"
										]
									]
									]
								]
								],
								[
								]
								,[
								[
									0,
									null,
									false,
									null,
									9812956260149605,
									[
									[
										-1,
										cr.system_object.prototype.cnds.Compare,
										null,
										0,
										false,
										false,
										false,
										7918896160549999,
										false
										,[
										[
											7,
											[
												23,
												"vIsCraigenInAttackRange"
											]
										]
,										[
											8,
											0
										]
,										[
											7,
											[
												0,
												1
											]
										]
										]
									]
,									[
										-1,
										cr.system_object.prototype.cnds.Compare,
										null,
										0,
										false,
										false,
										false,
										3970550793071347,
										false
										,[
										[
											7,
											[
												23,
												"vIsEnemyInAttackRange"
											]
										]
,										[
											8,
											0
										]
,										[
											7,
											[
												0,
												1
											]
										]
										]
									]
									],
									[
									[
										-1,
										cr.system_object.prototype.acts.SetVar,
										null,
										4643877047555031,
										false
										,[
										[
											11,
											"vTempInt"
										]
,										[
											7,
											[
												19,
												cr.system_object.prototype.exps.random
												,[
[
													0,
													0
												]
,[
													0,
													100
												]
												]
											]
										]
										]
									]
									]
									,[
									[
										0,
										null,
										false,
										null,
										3909789111295209,
										[
										[
											-1,
											cr.system_object.prototype.cnds.Compare,
											null,
											0,
											false,
											false,
											false,
											2790046738886786,
											false
											,[
											[
												7,
												[
													23,
													"vTempInt"
												]
											]
,											[
												8,
												3
											]
,											[
												7,
												[
													21,
													110,
													false,
													null
													,11
												]
											]
											]
										]
,										[
											-1,
											cr.system_object.prototype.cnds.Compare,
											null,
											0,
											false,
											false,
											false,
											9444175079825008,
											false
											,[
											[
												7,
												[
													23,
													"vEnemy_CanAttack"
												]
											]
,											[
												8,
												0
											]
,											[
												7,
												[
													0,
													1
												]
											]
											]
										]
										],
										[
										[
											72,
											cr.plugins_.Function.prototype.acts.CallFunction,
											null,
											2030592098822509,
											false
											,[
											[
												1,
												[
													2,
													"onEnemyStartAttack"
												]
											]
,											[
												13,
											]
											]
										]
										]
									]
,									[
										0,
										null,
										false,
										null,
										299004835242044,
										[
										[
											-1,
											cr.system_object.prototype.cnds.Else,
											null,
											0,
											false,
											false,
											false,
											1590168966393337,
											false
										]
,										[
											-1,
											cr.system_object.prototype.cnds.Compare,
											null,
											0,
											false,
											false,
											false,
											7460946624700793,
											false
											,[
											[
												7,
												[
													23,
													"vTempInt"
												]
											]
,											[
												8,
												4
											]
,											[
												7,
												[
													21,
													110,
													false,
													null
													,11
												]
											]
											]
										]
,										[
											-1,
											cr.system_object.prototype.cnds.Compare,
											null,
											0,
											false,
											false,
											false,
											8677250854516609,
											false
											,[
											[
												7,
												[
													23,
													"vEnemy_CanBlock"
												]
											]
,											[
												8,
												0
											]
,											[
												7,
												[
													0,
													1
												]
											]
											]
										]
										],
										[
										[
											72,
											cr.plugins_.Function.prototype.acts.CallFunction,
											null,
											5685425660850443,
											false
											,[
											[
												1,
												[
													2,
													"onEnemyStartBlock"
												]
											]
,											[
												13,
											]
											]
										]
										]
									]
									]
								]
,								[
									0,
									null,
									false,
									null,
									1363391825828847,
									[
									[
										-1,
										cr.system_object.prototype.cnds.Else,
										null,
										0,
										false,
										false,
										false,
										920007713595957,
										false
									]
,									[
										-1,
										cr.system_object.prototype.cnds.Compare,
										null,
										0,
										false,
										false,
										false,
										1597643927335526,
										false
										,[
										[
											7,
											[
												23,
												"vIsEnemyInAttackRange"
											]
										]
,										[
											8,
											0
										]
,										[
											7,
											[
												0,
												1
											]
										]
										]
									]
									],
									[
									]
									,[
									[
										0,
										null,
										false,
										null,
										3552699921119807,
										[
										[
											-1,
											cr.system_object.prototype.cnds.Compare,
											null,
											0,
											false,
											false,
											false,
											6290478353757477,
											false
											,[
											[
												7,
												[
													23,
													"vEnemy_CanAttack"
												]
											]
,											[
												8,
												0
											]
,											[
												7,
												[
													0,
													1
												]
											]
											]
										]
										],
										[
										[
											72,
											cr.plugins_.Function.prototype.acts.CallFunction,
											null,
											2210029844237937,
											false
											,[
											[
												1,
												[
													2,
													"onEnemyStartAttack"
												]
											]
,											[
												13,
											]
											]
										]
										]
									]
									]
								]
,								[
									0,
									null,
									false,
									null,
									4000974459679886,
									[
									[
										-1,
										cr.system_object.prototype.cnds.Else,
										null,
										0,
										false,
										false,
										false,
										4355095628035853,
										false
									]
									],
									[
									[
										110,
										cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
										null,
										8783870114933752,
										false
										,[
										[
											10,
											6
										]
,										[
											7,
											[
												0,
												999
											]
										]
										]
									]
									]
								]
								]
							]
							]
						]
						]
					]
,					[
						0,
						null,
						false,
						null,
						3757191855788767,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Else,
							null,
							0,
							false,
							false,
							false,
							2630298050726094,
							false
						]
						],
						[
						]
						,[
						[
							0,
							null,
							false,
							null,
							887257293820915,
							[
							[
								-1,
								cr.system_object.prototype.cnds.Compare,
								null,
								0,
								false,
								false,
								false,
								4320233510702904,
								false
								,[
								[
									7,
									[
										23,
										"vIsCraigenInAttackRange"
									]
								]
,								[
									8,
									0
								]
,								[
									7,
									[
										0,
										1
									]
								]
								]
							]
							],
							[
							]
							,[
							[
								0,
								null,
								false,
								null,
								6553248053644533,
								[
								[
									-1,
									cr.system_object.prototype.cnds.Compare,
									null,
									0,
									false,
									false,
									false,
									2117178025137644,
									false
									,[
									[
										7,
										[
											23,
											"vEnemy_IsNearEndOfMap"
										]
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											0
										]
									]
									]
								]
,								[
									-1,
									cr.system_object.prototype.cnds.Compare,
									null,
									0,
									false,
									false,
									false,
									7854277663052937,
									false
									,[
									[
										7,
										[
											19,
											cr.system_object.prototype.exps.random
											,[
[
												0,
												0
											]
,[
												0,
												100
											]
											]
										]
									]
,									[
										8,
										2
									]
,									[
										7,
										[
											21,
											110,
											false,
											null
											,7
										]
									]
									]
								]
								],
								[
								[
									110,
									cr.plugins_.Sprite.prototype.acts.SetInstanceVar,
									null,
									1452911878000869,
									false
									,[
									[
										10,
										6
									]
,									[
										7,
										[
											21,
											110,
											false,
											null
											,5
										]
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								6376570664646503,
								[
								[
									-1,
									cr.system_object.prototype.cnds.Else,
									null,
									0,
									false,
									false,
									false,
									2067385724978374,
									false
								]
,								[
									-1,
									cr.system_object.prototype.cnds.Compare,
									null,
									0,
									false,
									false,
									false,
									8354350813443457,
									false
									,[
									[
										7,
										[
											23,
											"vEnemy_CanBlock"
										]
									]
,									[
										8,
										0
									]
,									[
										7,
										[
											0,
											1
										]
									]
									]
								]
								],
								[
								[
									72,
									cr.plugins_.Function.prototype.acts.CallFunction,
									null,
									2350708232207246,
									false
									,[
									[
										1,
										[
											2,
											"onEnemyStartBlock"
										]
									]
,									[
										13,
									]
									]
								]
								]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					true,
					null,
					1555551428120512,
					[
					[
						110,
						cr.plugins_.Sprite.prototype.cnds.IsAnimPlaying,
						null,
						0,
						false,
						false,
						false,
						1723833009205449,
						false
						,[
						[
							1,
							[
								2,
								"Attack_1"
							]
						]
						]
					]
,					[
						110,
						cr.plugins_.Sprite.prototype.cnds.IsAnimPlaying,
						null,
						0,
						false,
						false,
						false,
						9364919134509958,
						false
						,[
						[
							1,
							[
								2,
								"Attack_2"
							]
						]
						]
					]
					],
					[
					]
					,[
					[
						0,
						null,
						false,
						null,
						7132510382660273,
						[
						[
							110,
							cr.plugins_.Sprite.prototype.cnds.CompareFrame,
							null,
							0,
							false,
							false,
							false,
							185123178719421,
							false
							,[
							[
								8,
								5
							]
,							[
								0,
								[
									7,
									[
										20,
										110,
										cr.plugins_.Sprite.prototype.exps.AnimationFrameCount,
										false,
										null
									]
									,[
										0,
										2
									]
								]
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.cnds.Compare,
							null,
							0,
							false,
							false,
							false,
							6364860491447327,
							false
							,[
							[
								7,
								[
									23,
									"vEnemyCanDealDamage"
								]
							]
,							[
								8,
								0
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							9418229120912702,
							false
							,[
							[
								11,
								"vEnemyCanDealDamage"
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						]
						,[
						[
							0,
							null,
							false,
							null,
							3687054336271562,
							[
							[
								-1,
								cr.system_object.prototype.cnds.Compare,
								null,
								0,
								false,
								false,
								false,
								5384498259566404,
								false
								,[
								[
									7,
									[
										5,
										[
											20,
											110,
											cr.plugins_.Sprite.prototype.exps.X,
											false,
											null
										]
										,[
											23,
											"vEnemy_AttackDistance"
										]
									]
								]
,								[
									8,
									2
								]
,								[
									7,
									[
										20,
										0,
										cr.plugins_.Sprite.prototype.exps.X,
										false,
										null
									]
								]
								]
							]
							],
							[
							]
							,[
							[
								0,
								null,
								false,
								null,
								248817816226009,
								[
								[
									0,
									cr.plugins_.Sprite.prototype.cnds.IsAnimPlaying,
									null,
									0,
									false,
									true,
									false,
									4347571515766563,
									false
									,[
									[
										1,
										[
											2,
											"Block"
										]
									]
									]
								]
								],
								[
								[
									72,
									cr.plugins_.Function.prototype.acts.CallFunction,
									null,
									3119283582043514,
									false
									,[
									[
										1,
										[
											2,
											"onDealDamageToCraigen"
										]
									]
,									[
										13,
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								9906837271228584,
								[
								[
									-1,
									cr.system_object.prototype.cnds.Else,
									null,
									0,
									false,
									false,
									false,
									7148542810345345,
									false
								]
,								[
									0,
									cr.plugins_.Sprite.prototype.cnds.CompareFrame,
									null,
									0,
									false,
									false,
									false,
									1150088557376993,
									false
									,[
									[
										8,
										2
									]
,									[
										0,
										[
											0,
											1
										]
									]
									]
								]
,								[
									0,
									cr.plugins_.Sprite.prototype.cnds.CompareFrame,
									null,
									0,
									false,
									false,
									false,
									1790024006695314,
									false
									,[
									[
										8,
										4
									]
,									[
										0,
										[
											5,
											[
												20,
												0,
												cr.plugins_.Sprite.prototype.exps.AnimationFrameCount,
												false,
												null
											]
											,[
												0,
												2
											]
										]
									]
									]
								]
								],
								[
								[
									72,
									cr.plugins_.Function.prototype.acts.CallFunction,
									null,
									5928617344810392,
									false
									,[
									[
										1,
										[
											2,
											"onDealDamageToCraigen"
										]
									]
,									[
										13,
									]
									]
								]
								]
							]
,							[
								0,
								null,
								false,
								null,
								5755247208234964,
								[
								[
									-1,
									cr.system_object.prototype.cnds.Else,
									null,
									0,
									false,
									false,
									false,
									3525257052217585,
									false
								]
								],
								[
								[
									101,
									cr.plugins_.Sprite.prototype.acts.SetVisible,
									null,
									7271903394989476,
									false
									,[
									[
										3,
										1
									]
									]
								]
,								[
									-1,
									cr.system_object.prototype.acts.Wait,
									null,
									5882486089354739,
									false
									,[
									[
										0,
										[
											1,
											0.5
										]
									]
									]
								]
,								[
									101,
									cr.plugins_.Sprite.prototype.acts.SetVisible,
									null,
									4594427565995285,
									false
									,[
									[
										3,
										0
									]
									]
								]
								]
							]
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					null,
					1087827907866862,
					[
					[
						-1,
						cr.system_object.prototype.cnds.Compare,
						null,
						0,
						false,
						false,
						false,
						5616867761845057,
						false
						,[
						[
							7,
							[
								23,
								"vEnemyStamina"
							]
						]
,						[
							8,
							2
						]
,						[
							7,
							[
								23,
								"vEnemyStaminaMax"
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.SubVar,
						null,
						2940322048143369,
						false
						,[
						[
							11,
							"vEnemyStaminaRegenCur"
						]
,						[
							7,
							[
								19,
								cr.system_object.prototype.exps.dt
							]
						]
						]
					]
					]
					,[
					[
						0,
						null,
						false,
						null,
						555193220395606,
						[
						[
							-1,
							cr.system_object.prototype.cnds.Compare,
							null,
							0,
							false,
							false,
							false,
							8962169930049426,
							false
							,[
							[
								7,
								[
									23,
									"vEnemyStaminaRegenCur"
								]
							]
,							[
								8,
								3
							]
,							[
								7,
								[
									0,
									0
								]
							]
							]
						]
						],
						[
						[
							-1,
							cr.system_object.prototype.acts.AddVar,
							null,
							8600542056249304,
							false
							,[
							[
								11,
								"vEnemyStamina"
							]
,							[
								7,
								[
									0,
									1
								]
							]
							]
						]
,						[
							72,
							cr.plugins_.Function.prototype.acts.CallFunction,
							null,
							7221935749051411,
							false
							,[
							[
								1,
								[
									2,
									"updateEnemyStamina"
								]
							]
,							[
								13,
							]
							]
						]
,						[
							-1,
							cr.system_object.prototype.acts.SetVar,
							null,
							2949534100680215,
							false
							,[
							[
								11,
								"vEnemyStaminaRegenCur"
							]
,							[
								7,
								[
									23,
									"vEnemyStaminaRegenTime"
								]
							]
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			[true, "AnimationCallbacks"],
			false,
			null,
			4766583468653131,
			[
			[
				-1,
				cr.system_object.prototype.cnds.IsGroupActive,
				null,
				0,
				false,
				false,
				false,
				4766583468653131,
				false
				,[
				[
					1,
					[
						2,
						"AnimationCallbacks"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				4315535054260728,
				[
				[
					0,
					cr.plugins_.Sprite.prototype.cnds.OnAnimFinished,
					null,
					1,
					false,
					false,
					false,
					8590773651723221,
					false
					,[
					[
						1,
						[
							2,
							"Attack_1"
						]
					]
					]
				]
				],
				[
				[
					0,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					5807753091984324,
					false
					,[
					[
						1,
						[
							2,
							"Default"
						]
					]
,					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				605241506932511,
				[
				[
					0,
					cr.plugins_.Sprite.prototype.cnds.OnAnimFinished,
					null,
					1,
					false,
					false,
					false,
					5285898962759927,
					false
					,[
					[
						1,
						[
							2,
							"Attack_2"
						]
					]
					]
				]
				],
				[
				[
					0,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					8993104408803944,
					false
					,[
					[
						1,
						[
							2,
							"Default"
						]
					]
,					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7492737370395174,
				[
				[
					0,
					cr.plugins_.Sprite.prototype.cnds.OnAnimFinished,
					null,
					1,
					false,
					false,
					false,
					4023520053270505,
					false
					,[
					[
						1,
						[
							2,
							"Attack_3"
						]
					]
					]
				]
				],
				[
				[
					0,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					9082433670309692,
					false
					,[
					[
						1,
						[
							2,
							"Default"
						]
					]
,					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5914389206043211,
				[
				[
					0,
					cr.plugins_.Sprite.prototype.cnds.OnAnimFinished,
					null,
					1,
					false,
					false,
					false,
					8459151085027962,
					false
					,[
					[
						1,
						[
							2,
							"Victory"
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					3863089259878951,
					false
					,[
					[
						0,
						[
							1,
							0.5
						]
					]
					]
				]
,				[
					72,
					cr.plugins_.Function.prototype.acts.CallFunction,
					null,
					1810535532678129,
					false
					,[
					[
						1,
						[
							2,
							"showLevelCompleted"
						]
					]
,					[
						13,
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				3291078218113199,
				[
				[
					0,
					cr.plugins_.Sprite.prototype.cnds.OnAnimFinished,
					null,
					1,
					false,
					false,
					false,
					7031268500593008,
					false
					,[
					[
						1,
						[
							2,
							"Block"
						]
					]
					]
				]
				],
				[
				[
					0,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					6599663174304572,
					false
					,[
					[
						1,
						[
							2,
							"Default"
						]
					]
,					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5046077644921114,
				[
				[
					110,
					cr.plugins_.Sprite.prototype.cnds.OnAnimFinished,
					null,
					1,
					false,
					false,
					false,
					1280731472621676,
					false
					,[
					[
						1,
						[
							2,
							"Die"
						]
					]
					]
				]
				],
				[
				[
					0,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					6940874662601701,
					false
					,[
					[
						1,
						[
							2,
							"Victory"
						]
					]
,					[
						3,
						1
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetGroupActive,
					null,
					9915531489175143,
					false
					,[
					[
						1,
						[
							2,
							"EnemyAI"
						]
					]
,					[
						3,
						0
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetGroupActive,
					null,
					8106023421533702,
					false
					,[
					[
						1,
						[
							2,
							"Player"
						]
					]
,					[
						3,
						0
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9218057719613861,
				[
				[
					110,
					cr.plugins_.Sprite.prototype.cnds.OnAnimFinished,
					null,
					1,
					false,
					false,
					false,
					2964760240713644,
					false
					,[
					[
						1,
						[
							2,
							"Block"
						]
					]
					]
				]
				],
				[
				[
					110,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					8526779639568116,
					false
					,[
					[
						1,
						[
							2,
							"Default"
						]
					]
,					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				6983098951373729,
				[
				[
					110,
					cr.plugins_.Sprite.prototype.cnds.OnAnimFinished,
					null,
					1,
					false,
					false,
					false,
					2986747275440245,
					false
					,[
					[
						1,
						[
							2,
							"Attack_1"
						]
					]
					]
				]
				],
				[
				[
					110,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					9303689773344752,
					false
					,[
					[
						1,
						[
							2,
							"Default"
						]
					]
,					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5823349479482817,
				[
				[
					110,
					cr.plugins_.Sprite.prototype.cnds.OnAnimFinished,
					null,
					1,
					false,
					false,
					false,
					6888080892982644,
					false
					,[
					[
						1,
						[
							2,
							"Attack_2"
						]
					]
					]
				]
				],
				[
				[
					110,
					cr.plugins_.Sprite.prototype.acts.SetAnim,
					null,
					353931056539893,
					false
					,[
					[
						1,
						[
							2,
							"Default"
						]
					]
,					[
						3,
						1
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			4401735556825423,
			[
			[
				72,
				cr.plugins_.Function.prototype.cnds.OnFunction,
				null,
				2,
				false,
				false,
				false,
				910759404610322,
				false
				,[
				[
					1,
					[
						2,
						"moreGames"
					]
				]
				]
			]
			],
			[
			[
				76,
				cr.plugins_.Browser.prototype.acts.GoToURLWindow,
				null,
				8652065053061016,
				false
				,[
				[
					1,
					[
						20,
						106,
						cr.plugins_.SpilApiPlugin.prototype.exps.LinkURL,
						true,
						null
					]
				]
,				[
					1,
					[
						2,
						"_blank"
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			1575097071843268,
			[
			[
				72,
				cr.plugins_.Function.prototype.cnds.OnFunction,
				null,
				2,
				false,
				false,
				false,
				4416243261299775,
				false
				,[
				[
					1,
					[
						2,
						"showSpilADS"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				9210590214444587,
				[
				],
				[
				[
					76,
					cr.plugins_.Browser.prototype.acts.ExecJs,
					null,
					9020396856353707,
					false
					,[
					[
						1,
						[
							2,
							"try{GameAPI.GameBreak.request(bmSTOP, bmRESUME);}catch(e){}"
						]
					]
					]
				]
				]
			]
			]
		]
		]
	]
,	[
		"PreloaderSheet",
		[
		[
			2,
			"SpilAPI",
			false
		]
,		[
			2,
			"IPhoneFixer",
			false
		]
,		[
			0,
			null,
			false,
			null,
			6709467569626324,
			[
			[
				-1,
				cr.system_object.prototype.cnds.Compare,
				null,
				0,
				false,
				false,
				false,
				3711826790887869,
				false
				,[
				[
					7,
					[
						19,
						cr.system_object.prototype.exps.loadingprogress
					]
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.TriggerOnce,
				null,
				0,
				false,
				false,
				false,
				844591581168038,
				false
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.GoToLayout,
				null,
				936120187714821,
				false
				,[
				[
					6,
					"CoverScreen"
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			2517997473466435,
			[
			[
				-1,
				cr.system_object.prototype.cnds.EveryTick,
				null,
				0,
				false,
				false,
				false,
				4749942609873588,
				false
			]
			],
			[
			[
				56,
				cr.plugins_.Spritefont2.prototype.acts.SetText,
				null,
				7383771534224762,
				false
				,[
				[
					7,
					[
						10,
						[
							19,
							cr.system_object.prototype.exps.round
							,[
[
								6,
								[
									19,
									cr.system_object.prototype.exps.loadingprogress
								]
								,[
									0,
									100
								]
							]
							]
						]
						,[
							2,
							"%"
						]
					]
				]
				]
			]
,			[
				33,
				cr.plugins_.Sprite.prototype.acts.SetX,
				null,
				4457977530661799,
				false
				,[
				[
					0,
					[
						7,
						[
							4,
							[
								19,
								cr.system_object.prototype.exps.viewportleft
								,[
[
									2,
									"Layer 0"
								]
								]
							]
							,[
								19,
								cr.system_object.prototype.exps.viewportright
								,[
[
									2,
									"Layer 0"
								]
								]
							]
						]
						,[
							0,
							2
						]
					]
				]
				]
			]
,			[
				56,
				cr.plugins_.Spritefont2.prototype.acts.SetX,
				null,
				5402067012131289,
				false
				,[
				[
					0,
					[
						5,
						[
							5,
							[
								7,
								[
									4,
									[
										19,
										cr.system_object.prototype.exps.viewportleft
										,[
[
											2,
											"Layer 0"
										]
										]
									]
									,[
										19,
										cr.system_object.prototype.exps.viewportright
										,[
[
											2,
											"Layer 0"
										]
										]
									]
								]
								,[
									0,
									2
								]
							]
							,[
								7,
								[
									20,
									56,
									cr.plugins_.Spritefont2.prototype.exps.Width,
									false,
									null
								]
								,[
									0,
									2
								]
							]
						]
						,[
							0,
							4
						]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			2954505405212019,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLayoutStart,
				null,
				1,
				false,
				false,
				false,
				4700638007348863,
				false
			]
			],
			[
			[
				106,
				cr.plugins_.SpilApiPlugin.prototype.acts.MyAction,
				null,
				5582018608825673,
				false
				,[
				[
					1,
					[
						2,
						""
					]
				]
				]
			]
			]
		]
		]
	]
,	[
		"GameCompleted",
		[
		[
			2,
			"SpilAPI",
			false
		]
,		[
			2,
			"IPhoneFixer",
			false
		]
,		[
			2,
			"MusicController",
			false
		]
,		[
			2,
			"RotateToLandscape",
			false
		]
,		[
			2,
			"ButtonsSolver",
			false
		]
,		[
			0,
			null,
			false,
			null,
			6982271148984446,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLayoutStart,
				null,
				1,
				false,
				false,
				false,
				8169415010512386,
				false
			]
			],
			[
			]
		]
,		[
			0,
			null,
			false,
			null,
			6354518260891915,
			[
			[
				10,
				cr.plugins_.Sprite.prototype.cnds.CompareInstanceVar,
				null,
				0,
				false,
				false,
				false,
				3770398668825449,
				false
				,[
				[
					10,
					2
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.GoToLayout,
				null,
				9162687340734755,
				false
				,[
				[
					6,
					"CoverScreen"
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			6568926414810599,
			[
			[
				72,
				cr.plugins_.Function.prototype.cnds.OnFunction,
				null,
				2,
				false,
				false,
				false,
				2688938164358399,
				false
				,[
				[
					1,
					[
						2,
						"moreGames"
					]
				]
				]
			]
			],
			[
			[
				76,
				cr.plugins_.Browser.prototype.acts.GoToURLWindow,
				null,
				1747491404257035,
				false
				,[
				[
					1,
					[
						20,
						106,
						cr.plugins_.SpilApiPlugin.prototype.exps.LinkURL,
						true,
						null
					]
				]
,				[
					1,
					[
						2,
						"_blank"
					]
				]
				]
			]
			]
		]
		]
	]
,	[
		"StorySheet",
		[
		[
			2,
			"SpilAPI",
			false
		]
,		[
			1,
			"CurStoryDisplayed",
			0,
			0,
false,false,3689692563864583,false
		]
,		[
			2,
			"IPhoneFixer",
			false
		]
,		[
			2,
			"MusicController",
			false
		]
,		[
			2,
			"RotateToLandscape",
			false
		]
,		[
			2,
			"ButtonsSolver",
			false
		]
,		[
			0,
			null,
			false,
			null,
			9654853883580128,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLayoutStart,
				null,
				1,
				false,
				false,
				false,
				6619846958718174,
				false
			]
			],
			[
			[
				40,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				9102950270046371,
				false
				,[
				[
					3,
					0
				]
				]
			]
,			[
				41,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				353865489956457,
				false
				,[
				[
					3,
					0
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				46395258416995,
				false
				,[
				[
					11,
					"CurStoryDisplayed"
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			1943314329959035,
			[
			[
				72,
				cr.plugins_.Function.prototype.cnds.OnFunction,
				null,
				2,
				false,
				false,
				false,
				7963676585418148,
				false
				,[
				[
					1,
					[
						2,
						"onSkipStory"
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.GoToLayout,
				null,
				346679689234423,
				false
				,[
				[
					6,
					"PreBattleScreen"
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			6679729927372445,
			[
			[
				72,
				cr.plugins_.Function.prototype.cnds.OnFunction,
				null,
				2,
				false,
				false,
				false,
				7172965095120157,
				false
				,[
				[
					1,
					[
						2,
						"onStoryContinue"
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.AddVar,
				null,
				2763721945711267,
				false
				,[
				[
					11,
					"CurStoryDisplayed"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			]
			,[
			[
				0,
				null,
				false,
				null,
				9241370891007722,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					1771844850966659,
					false
					,[
					[
						7,
						[
							23,
							"CurStoryDisplayed"
						]
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					39,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					6360152456175894,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					40,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					1631377102912969,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7910609222562745,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					5036081198360119,
					false
					,[
					[
						7,
						[
							23,
							"CurStoryDisplayed"
						]
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							2
						]
					]
					]
				]
				],
				[
				[
					40,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					145492540004699,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					41,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					8851262553239351,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				1785782178930527,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					2407555326739324,
					false
					,[
					[
						7,
						[
							23,
							"CurStoryDisplayed"
						]
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							3
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.GoToLayout,
					null,
					8748322534086119,
					false
					,[
					[
						6,
						"PreBattleScreen"
					]
					]
				]
				]
			]
			]
		]
		]
	]
,	[
		"LevelSelectionSheet",
		[
		[
			2,
			"SpilAPI",
			false
		]
,		[
			2,
			"MusicController",
			false
		]
,		[
			2,
			"RotateToLandscape",
			false
		]
,		[
			2,
			"IPhoneFixer",
			false
		]
,		[
			2,
			"DistributeItemsFromMiddle",
			false
		]
,		[
			2,
			"ButtonsSolver",
			false
		]
,		[
			0,
			null,
			false,
			null,
			4878672694042491,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLayoutStart,
				null,
				1,
				false,
				false,
				false,
				1533227589949766,
				false
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				11428394260512,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					6792394461255091,
					false
					,[
					[
						7,
						[
							23,
							"MaxUnlockedLevel"
						]
					]
,					[
						8,
						2
					]
,					[
						7,
						[
							0,
							2
						]
					]
					]
				]
				],
				[
				]
			]
,			[
				0,
				null,
				false,
				null,
				5144237553133587,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					1766337220614405,
					false
					,[
					[
						7,
						[
							23,
							"MaxUnlockedLevel"
						]
					]
,					[
						8,
						2
					]
,					[
						7,
						[
							0,
							3
						]
					]
					]
				]
				],
				[
				]
			]
,			[
				0,
				null,
				false,
				null,
				9448061880939379,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					5487409977074946,
					false
					,[
					[
						7,
						[
							23,
							"MaxUnlockedLevel"
						]
					]
,					[
						8,
						2
					]
,					[
						7,
						[
							0,
							4
						]
					]
					]
				]
				],
				[
				]
			]
,			[
				0,
				null,
				false,
				null,
				2442006254401021,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					4825107413036656,
					false
					,[
					[
						7,
						[
							23,
							"MaxUnlockedLevel"
						]
					]
,					[
						8,
						2
					]
,					[
						7,
						[
							0,
							5
						]
					]
					]
				]
				],
				[
				]
			]
,			[
				0,
				null,
				false,
				null,
				9560729732759315,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					4391727426072035,
					false
					,[
					[
						7,
						[
							23,
							"MaxUnlockedLevel"
						]
					]
,					[
						8,
						2
					]
,					[
						7,
						[
							0,
							6
						]
					]
					]
				]
				],
				[
				]
			]
,			[
				0,
				null,
				false,
				null,
				5969664763578678,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					9979721637677927,
					false
					,[
					[
						7,
						[
							23,
							"MaxUnlockedLevel"
						]
					]
,					[
						8,
						2
					]
,					[
						7,
						[
							0,
							7
						]
					]
					]
				]
				],
				[
				]
			]
,			[
				0,
				null,
				false,
				null,
				6667913961918845,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					369854995875294,
					false
					,[
					[
						7,
						[
							23,
							"MaxUnlockedLevel"
						]
					]
,					[
						8,
						2
					]
,					[
						7,
						[
							0,
							8
						]
					]
					]
				]
				],
				[
				]
			]
,			[
				0,
				null,
				false,
				null,
				5090584307140914,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					3946556463777919,
					false
					,[
					[
						7,
						[
							23,
							"MaxUnlockedLevel"
						]
					]
,					[
						8,
						2
					]
,					[
						7,
						[
							0,
							9
						]
					]
					]
				]
				],
				[
				]
			]
,			[
				0,
				null,
				false,
				null,
				3165472832882375,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					448909981626615,
					false
					,[
					[
						7,
						[
							23,
							"MaxUnlockedLevel"
						]
					]
,					[
						8,
						2
					]
,					[
						7,
						[
							0,
							10
						]
					]
					]
				]
				],
				[
				]
			]
,			[
				0,
				null,
				false,
				null,
				6007739731429624,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					9759301714840607,
					false
					,[
					[
						7,
						[
							23,
							"MaxUnlockedLevel"
						]
					]
,					[
						8,
						2
					]
,					[
						7,
						[
							0,
							11
						]
					]
					]
				]
				],
				[
				]
			]
,			[
				0,
				null,
				false,
				null,
				6901496741503335,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					5345082320075481,
					false
					,[
					[
						7,
						[
							23,
							"MaxUnlockedLevel"
						]
					]
,					[
						8,
						2
					]
,					[
						7,
						[
							0,
							12
						]
					]
					]
				]
				],
				[
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			3932562378458417,
			[
			[
				72,
				cr.plugins_.Function.prototype.cnds.OnFunction,
				null,
				2,
				false,
				false,
				false,
				9751773748091589,
				false
				,[
				[
					1,
					[
						2,
						"gotoLevel_1"
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				6054855862392303,
				false
				,[
				[
					11,
					"CurLevel"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.GoToLayoutByName,
				null,
				7604725558908334,
				false
				,[
				[
					1,
					[
						10,
						[
							2,
							"Level_"
						]
						,[
							23,
							"CurLevel"
						]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			9413849465661845,
			[
			[
				72,
				cr.plugins_.Function.prototype.cnds.OnFunction,
				null,
				2,
				false,
				false,
				false,
				5718764230638959,
				false
				,[
				[
					1,
					[
						2,
						"gotoLevel_2"
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				6670179369937328,
				false
				,[
				[
					11,
					"CurLevel"
				]
,				[
					7,
					[
						0,
						2
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.GoToLayoutByName,
				null,
				6957260415586576,
				false
				,[
				[
					1,
					[
						10,
						[
							2,
							"Level_"
						]
						,[
							23,
							"CurLevel"
						]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			6854022752326332,
			[
			[
				72,
				cr.plugins_.Function.prototype.cnds.OnFunction,
				null,
				2,
				false,
				false,
				false,
				5200717708096334,
				false
				,[
				[
					1,
					[
						2,
						"gotoLevel_3"
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				8779535035144097,
				false
				,[
				[
					11,
					"CurLevel"
				]
,				[
					7,
					[
						0,
						3
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.GoToLayoutByName,
				null,
				4574613811418168,
				false
				,[
				[
					1,
					[
						10,
						[
							2,
							"Level_"
						]
						,[
							23,
							"CurLevel"
						]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			7437439770445639,
			[
			[
				72,
				cr.plugins_.Function.prototype.cnds.OnFunction,
				null,
				2,
				false,
				false,
				false,
				4283979689444205,
				false
				,[
				[
					1,
					[
						2,
						"gotoLevel_4"
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				2330811051824413,
				false
				,[
				[
					11,
					"CurLevel"
				]
,				[
					7,
					[
						0,
						4
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.GoToLayoutByName,
				null,
				9106492764930118,
				false
				,[
				[
					1,
					[
						10,
						[
							2,
							"Level_"
						]
						,[
							23,
							"CurLevel"
						]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			9047038274969031,
			[
			[
				72,
				cr.plugins_.Function.prototype.cnds.OnFunction,
				null,
				2,
				false,
				false,
				false,
				608211583169817,
				false
				,[
				[
					1,
					[
						2,
						"gotoLevel_5"
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				2175227033444568,
				false
				,[
				[
					11,
					"CurLevel"
				]
,				[
					7,
					[
						0,
						5
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.GoToLayoutByName,
				null,
				3051272333232773,
				false
				,[
				[
					1,
					[
						10,
						[
							2,
							"Level_"
						]
						,[
							23,
							"CurLevel"
						]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			4906655233427934,
			[
			[
				72,
				cr.plugins_.Function.prototype.cnds.OnFunction,
				null,
				2,
				false,
				false,
				false,
				6660988080129381,
				false
				,[
				[
					1,
					[
						2,
						"gotoLevel_6"
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				7675443592198939,
				false
				,[
				[
					11,
					"CurLevel"
				]
,				[
					7,
					[
						0,
						6
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.GoToLayoutByName,
				null,
				3299929505012059,
				false
				,[
				[
					1,
					[
						10,
						[
							2,
							"Level_"
						]
						,[
							23,
							"CurLevel"
						]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			5969741970051107,
			[
			[
				72,
				cr.plugins_.Function.prototype.cnds.OnFunction,
				null,
				2,
				false,
				false,
				false,
				9387377756814754,
				false
				,[
				[
					1,
					[
						2,
						"gotoLevel_7"
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				9968460484577057,
				false
				,[
				[
					11,
					"CurLevel"
				]
,				[
					7,
					[
						0,
						7
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.GoToLayoutByName,
				null,
				2347143321936063,
				false
				,[
				[
					1,
					[
						10,
						[
							2,
							"Level_"
						]
						,[
							23,
							"CurLevel"
						]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			6119353136261705,
			[
			[
				72,
				cr.plugins_.Function.prototype.cnds.OnFunction,
				null,
				2,
				false,
				false,
				false,
				5209955938958898,
				false
				,[
				[
					1,
					[
						2,
						"gotoLevel_8"
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				1345329851558757,
				false
				,[
				[
					11,
					"CurLevel"
				]
,				[
					7,
					[
						0,
						8
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.GoToLayoutByName,
				null,
				5037993077416612,
				false
				,[
				[
					1,
					[
						10,
						[
							2,
							"Level_"
						]
						,[
							23,
							"CurLevel"
						]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			1063872689586576,
			[
			[
				72,
				cr.plugins_.Function.prototype.cnds.OnFunction,
				null,
				2,
				false,
				false,
				false,
				4010628022060442,
				false
				,[
				[
					1,
					[
						2,
						"gotoLevel_9"
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				2157901835525051,
				false
				,[
				[
					11,
					"CurLevel"
				]
,				[
					7,
					[
						0,
						9
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.GoToLayoutByName,
				null,
				9753173959755254,
				false
				,[
				[
					1,
					[
						10,
						[
							2,
							"Level_"
						]
						,[
							23,
							"CurLevel"
						]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			8933720199217169,
			[
			[
				72,
				cr.plugins_.Function.prototype.cnds.OnFunction,
				null,
				2,
				false,
				false,
				false,
				1909420539000248,
				false
				,[
				[
					1,
					[
						2,
						"gotoLevel_10"
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				7251298164104238,
				false
				,[
				[
					11,
					"CurLevel"
				]
,				[
					7,
					[
						0,
						10
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.GoToLayoutByName,
				null,
				9414002286816983,
				false
				,[
				[
					1,
					[
						10,
						[
							2,
							"Level_"
						]
						,[
							23,
							"CurLevel"
						]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			9257788911266306,
			[
			[
				72,
				cr.plugins_.Function.prototype.cnds.OnFunction,
				null,
				2,
				false,
				false,
				false,
				1505402470049499,
				false
				,[
				[
					1,
					[
						2,
						"gotoLevel_11"
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				1852295449097505,
				false
				,[
				[
					11,
					"CurLevel"
				]
,				[
					7,
					[
						0,
						11
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.GoToLayoutByName,
				null,
				9528047386405087,
				false
				,[
				[
					1,
					[
						10,
						[
							2,
							"Level_"
						]
						,[
							23,
							"CurLevel"
						]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			1911396261883575,
			[
			[
				72,
				cr.plugins_.Function.prototype.cnds.OnFunction,
				null,
				2,
				false,
				false,
				false,
				1809149946632618,
				false
				,[
				[
					1,
					[
						2,
						"gotoLevel_12"
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				8272626391532603,
				false
				,[
				[
					11,
					"CurLevel"
				]
,				[
					7,
					[
						0,
						12
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.GoToLayoutByName,
				null,
				9736277844222657,
				false
				,[
				[
					1,
					[
						10,
						[
							2,
							"Level_"
						]
						,[
							23,
							"CurLevel"
						]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			3322830878610439,
			[
			[
				72,
				cr.plugins_.Function.prototype.cnds.OnFunction,
				null,
				2,
				false,
				false,
				false,
				5806022858557736,
				false
				,[
				[
					1,
					[
						2,
						"gotoCover"
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.GoToLayout,
				null,
				9962797630258468,
				false
				,[
				[
					6,
					"CoverScreen"
				]
				]
			]
			]
		]
		]
	]
,	[
		"PreBattleSheet",
		[
		[
			2,
			"SpilAPI",
			false
		]
,		[
			2,
			"MusicController",
			false
		]
,		[
			2,
			"RotateToLandscape",
			false
		]
,		[
			2,
			"IPhoneFixer",
			false
		]
,		[
			2,
			"DistributeItemsFromMiddle",
			false
		]
,		[
			2,
			"ButtonsSolver",
			false
		]
,		[
			0,
			null,
			false,
			null,
			7299984986778391,
			[
			[
				72,
				cr.plugins_.Function.prototype.cnds.OnFunction,
				null,
				2,
				false,
				false,
				false,
				2001682666117328,
				false
				,[
				[
					1,
					[
						2,
						"onContinue"
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.GoToLayout,
				null,
				5675989476808315,
				false
				,[
				[
					6,
					"GameplayScreen"
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			6781215978717356,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLayoutStart,
				null,
				1,
				false,
				false,
				false,
				5936522426928231,
				false
			]
			],
			[
			[
				86,
				cr.plugins_.Sprite.prototype.acts.StopAnim,
				null,
				2913889862275596,
				false
			]
,			[
				84,
				cr.plugins_.Sprite.prototype.acts.StopAnim,
				null,
				1043429721195658,
				false
			]
,			[
				83,
				cr.plugins_.Sprite.prototype.acts.StopAnim,
				null,
				5245960908404435,
				false
			]
,			[
				87,
				cr.plugins_.Sprite.prototype.acts.StopAnim,
				null,
				7704046620494653,
				false
			]
,			[
				88,
				cr.plugins_.Sprite.prototype.acts.StopAnim,
				null,
				6186486807206358,
				false
			]
,			[
				89,
				cr.plugins_.Sprite.prototype.acts.StopAnim,
				null,
				7811048547560306,
				false
			]
,			[
				90,
				cr.plugins_.Sprite.prototype.acts.StopAnim,
				null,
				3812469874726597,
				false
			]
,			[
				91,
				cr.plugins_.Sprite.prototype.acts.StopAnim,
				null,
				9311736556389155,
				false
			]
,			[
				92,
				cr.plugins_.Sprite.prototype.acts.StopAnim,
				null,
				3925484967227544,
				false
			]
,			[
				93,
				cr.plugins_.Sprite.prototype.acts.StopAnim,
				null,
				3847395690804864,
				false
			]
,			[
				94,
				cr.plugins_.Sprite.prototype.acts.StopAnim,
				null,
				8759897003342608,
				false
			]
,			[
				95,
				cr.plugins_.Sprite.prototype.acts.StopAnim,
				null,
				3814611249662177,
				false
			]
,			[
				88,
				cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
				null,
				8029767030752072,
				false
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				89,
				cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
				null,
				715114185851012,
				false
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				90,
				cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
				null,
				447459909177361,
				false
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				91,
				cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
				null,
				3760517446191515,
				false
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				92,
				cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
				null,
				9045992568643313,
				false
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				93,
				cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
				null,
				8349691492385671,
				false
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				94,
				cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
				null,
				4077680150746334,
				false
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				95,
				cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
				null,
				7910215335560546,
				false
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
			]
			,[
			[
				0,
				null,
				false,
				null,
				7318874652379108,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					3163175891872974,
					false
					,[
					[
						7,
						[
							23,
							"vFightNumber"
						]
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					83,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					1033241968809704,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					84,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					8251656336989973,
					false
					,[
					[
						0,
						[
							0,
							2
						]
					]
					]
				]
,				[
					86,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					9635860306108506,
					false
					,[
					[
						0,
						[
							0,
							2
						]
					]
					]
				]
,				[
					87,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					2383147910548675,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					88,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					3363716809341698,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					89,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					8945177975420474,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					90,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					1717688024976426,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					91,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					9036651031497524,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					92,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					8991866720574093,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					93,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					4141495973890698,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					94,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					7969803944717189,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					95,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					3896450082315256,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				1354144117423759,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					4978820408295163,
					false
					,[
					[
						7,
						[
							23,
							"vFightNumber"
						]
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					83,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					3084781894242532,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					84,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					4291750467138431,
					false
					,[
					[
						0,
						[
							0,
							2
						]
					]
					]
				]
,				[
					86,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					897100925061409,
					false
					,[
					[
						0,
						[
							0,
							2
						]
					]
					]
				]
,				[
					87,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					7966497522323196,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					88,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					1570688757640178,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					89,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					8802135983992891,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					90,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					7645815056580384,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					91,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					7329281232434718,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					92,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					530125506983132,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					93,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					1507980521890378,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					94,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					1550572324376322,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					95,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					6858576378410725,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				399901414765533,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					1135695761944962,
					false
					,[
					[
						7,
						[
							23,
							"vFightNumber"
						]
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							2
						]
					]
					]
				]
				],
				[
				[
					83,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					8490900839900606,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					84,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					5472588886321377,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					86,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					7350088731159126,
					false
					,[
					[
						0,
						[
							0,
							2
						]
					]
					]
				]
,				[
					87,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					3578923652285924,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					88,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					8968852830476209,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					89,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					7513030783478751,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					90,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					2993108090436434,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					91,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					6189831573428925,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					92,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					1211319753517943,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					93,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					76303178487719,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					94,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					4720160765624666,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					95,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					2361020145007758,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9451195395604035,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					9829808367028404,
					false
					,[
					[
						7,
						[
							23,
							"vFightNumber"
						]
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							3
						]
					]
					]
				]
				],
				[
				[
					83,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					9903932768663865,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					84,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					2340119953572205,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					86,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					7306765369235829,
					false
					,[
					[
						0,
						[
							0,
							2
						]
					]
					]
				]
,				[
					87,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					6724334599667603,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					88,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					4626646881671428,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					89,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					8361483783813839,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					90,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					6650231945087227,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					91,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					1743422213480161,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					92,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					7087162243441565,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					93,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					9041760637857521,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					94,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					2582653279723375,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					95,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					2385858495049162,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				7500971968540073,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					3176287768917697,
					false
					,[
					[
						7,
						[
							23,
							"vFightNumber"
						]
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							4
						]
					]
					]
				]
				],
				[
				[
					83,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					7526960955935305,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					84,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					7191020539840594,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					86,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					4512325046615654,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					87,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					5996950200428902,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					88,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					8884412767407009,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					89,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					8299833150597284,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					90,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					1019044399424384,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					91,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					6884257226815408,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					92,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					842745191362779,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					93,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					9220228134573209,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					94,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					8354844472558977,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					95,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					2702423392659557,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9505057341548784,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					3149109061631481,
					false
					,[
					[
						7,
						[
							23,
							"vFightNumber"
						]
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							5
						]
					]
					]
				]
				],
				[
				[
					83,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					8319854315402435,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					84,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					8345784700231001,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					86,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					347916216247328,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					87,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					7128216835828753,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					88,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					9659524927071628,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					89,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					3731718207007602,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					90,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					5582023981812738,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					91,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					8777021086747909,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					92,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					6091568259574762,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					93,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					4540999550603964,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					94,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					7009027228542669,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					95,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					1240280701428585,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				5897384282781645,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					9693785983050303,
					false
					,[
					[
						7,
						[
							23,
							"vFightNumber"
						]
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							6
						]
					]
					]
				]
				],
				[
				[
					83,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					31505267690548,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					84,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					6358593994602901,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					86,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					6853806216986071,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					87,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					4207065093230552,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					88,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					8304145942735971,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					89,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					6270528803528783,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					90,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					7212152356905507,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					91,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					9798668367357189,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					92,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					6402603440200206,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					93,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					4278436950540622,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					94,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					3538534644031126,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					95,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					1049974250710103,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				null,
				9513975100116295,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					8825071576185238,
					false
					,[
					[
						7,
						[
							23,
							"vFightNumber"
						]
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							7
						]
					]
					]
				]
				],
				[
				[
					83,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					3936526309312045,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					84,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					8212377457317531,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					86,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					776073247158227,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					87,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					3290140129823203,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
,				[
					88,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					576481238377886,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					89,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					5154741144414735,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					90,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					8157111406743886,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					91,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					845561951694222,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					92,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					6541981521076402,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					93,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					3997583381690356,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					94,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					2664959029014385,
					false
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					95,
					cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
					null,
					9052219795867456,
					false
					,[
					[
						0,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			8399953629024305,
			[
			[
				72,
				cr.plugins_.Function.prototype.cnds.OnFunction,
				null,
				2,
				false,
				false,
				false,
				1672995584369358,
				false
				,[
				[
					1,
					[
						2,
						"moreGames"
					]
				]
				]
			]
			],
			[
			[
				76,
				cr.plugins_.Browser.prototype.acts.GoToURLWindow,
				null,
				6736352864671667,
				false
				,[
				[
					1,
					[
						20,
						106,
						cr.plugins_.SpilApiPlugin.prototype.exps.LinkURL,
						true,
						null
					]
				]
,				[
					1,
					[
						2,
						"_blank"
					]
				]
				]
			]
			]
		]
		]
	]
,	[
		"UpgradeSheet",
		[
		[
			2,
			"SpilAPI",
			false
		]
,		[
			1,
			"UpgradeHealth",
			0,
			0,
false,false,1266671259737209,false
		]
,		[
			1,
			"UpgradeSpeed",
			0,
			0,
false,false,2235811041604945,false
		]
,		[
			1,
			"UpgradeStamina",
			0,
			0,
false,false,6810053744448403,false
		]
,		[
			1,
			"UpgradeDamage",
			0,
			0,
false,false,3001991259301452,false
		]
,		[
			2,
			"MusicController",
			false
		]
,		[
			2,
			"RotateToLandscape",
			false
		]
,		[
			2,
			"IPhoneFixer",
			false
		]
,		[
			2,
			"DistributeItemsFromMiddle",
			false
		]
,		[
			2,
			"ButtonsSolver",
			false
		]
,		[
			0,
			null,
			false,
			null,
			3754037488252318,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLayoutStart,
				null,
				1,
				false,
				false,
				false,
				4127011070612562,
				false
			]
			],
			[
			[
				17,
				cr.plugins_.Sprite.prototype.acts.SetX,
				null,
				7006379740772413,
				false
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.scrollx
					]
				]
				]
			]
,			[
				61,
				cr.plugins_.Sprite.prototype.acts.StopAnim,
				null,
				653936348711325,
				false
			]
,			[
				62,
				cr.plugins_.Sprite.prototype.acts.StopAnim,
				null,
				8374328914493695,
				false
			]
,			[
				63,
				cr.plugins_.Sprite.prototype.acts.StopAnim,
				null,
				5222256121075517,
				false
			]
,			[
				64,
				cr.plugins_.Sprite.prototype.acts.StopAnim,
				null,
				8763217322235757,
				false
			]
,			[
				72,
				cr.plugins_.Function.prototype.acts.CallFunction,
				null,
				5197649429440389,
				false
				,[
				[
					1,
					[
						2,
						"updateIndicators"
					]
				]
,				[
					13,
				]
				]
			]
,			[
				96,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				3338532795009698,
				false
				,[
				[
					3,
					0
				]
				]
			]
,			[
				97,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				8836373466007145,
				false
				,[
				[
					3,
					0
				]
				]
			]
,			[
				98,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				2189794075611372,
				false
				,[
				[
					3,
					0
				]
				]
			]
,			[
				99,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				8417362274073369,
				false
				,[
				[
					3,
					0
				]
				]
			]
,			[
				27,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				8385883732377612,
				false
				,[
				[
					3,
					0
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			6644904570120948,
			[
			[
				72,
				cr.plugins_.Function.prototype.cnds.OnFunction,
				null,
				2,
				false,
				false,
				false,
				8880416697168846,
				false
				,[
				[
					1,
					[
						2,
						"onUpgradeHitpoints"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				883749995125517,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					9912183875654942,
					false
					,[
					[
						7,
						[
							23,
							"UpgradeHealth"
						]
					]
,					[
						8,
						2
					]
,					[
						7,
						[
							0,
							3
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.AddVar,
					null,
					5798811627728732,
					false
					,[
					[
						11,
						"UpgradeHealth"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					72,
					cr.plugins_.Function.prototype.acts.CallFunction,
					null,
					6405424776418695,
					false
					,[
					[
						1,
						[
							2,
							"updateIndicators"
						]
					]
,					[
						13,
					]
					]
				]
,				[
					96,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					9912767330113196,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					97,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					3276883341086238,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					98,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					4085366329897528,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					99,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					9160106597890805,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					69,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					4102022879962375,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					23,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					2424377692337181,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					24,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					3917146532968396,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					25,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					6190911977113533,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					26,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					8437062083489683,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					27,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					9173973493224206,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			2645453541810067,
			[
			[
				72,
				cr.plugins_.Function.prototype.cnds.OnFunction,
				null,
				2,
				false,
				false,
				false,
				8386632440886128,
				false
				,[
				[
					1,
					[
						2,
						"onUpgradeSpeed"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				4839403271471124,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					5318114996004516,
					false
					,[
					[
						7,
						[
							23,
							"UpgradeSpeed"
						]
					]
,					[
						8,
						2
					]
,					[
						7,
						[
							0,
							3
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.AddVar,
					null,
					546663578242915,
					false
					,[
					[
						11,
						"UpgradeSpeed"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					72,
					cr.plugins_.Function.prototype.acts.CallFunction,
					null,
					7487818573386311,
					false
					,[
					[
						1,
						[
							2,
							"updateIndicators"
						]
					]
,					[
						13,
					]
					]
				]
,				[
					96,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					3836154453429274,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					97,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					5477501637286366,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					98,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					3390878971802843,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					99,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					8950833914349775,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					69,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					9841940280541164,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					23,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					3140361715520671,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					24,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					7154023221013161,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					25,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					4194169332331787,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					26,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					8260898013284652,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					27,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					8106656823358557,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			8471430244552708,
			[
			[
				72,
				cr.plugins_.Function.prototype.cnds.OnFunction,
				null,
				2,
				false,
				false,
				false,
				915764550041051,
				false
				,[
				[
					1,
					[
						2,
						"onUpgradeDamage"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				5195179719541542,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					9598077297742742,
					false
					,[
					[
						7,
						[
							23,
							"UpgradeDamage"
						]
					]
,					[
						8,
						2
					]
,					[
						7,
						[
							0,
							3
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.AddVar,
					null,
					4618599036389612,
					false
					,[
					[
						11,
						"UpgradeDamage"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					72,
					cr.plugins_.Function.prototype.acts.CallFunction,
					null,
					4293926548322954,
					false
					,[
					[
						1,
						[
							2,
							"updateIndicators"
						]
					]
,					[
						13,
					]
					]
				]
,				[
					96,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					3587343118330109,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					97,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					4737726984290747,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					98,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					7655900569546707,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					99,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					1054962558919372,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					69,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					7926705548837362,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					23,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					2815351407626864,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					24,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					8375901260793097,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					25,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					2620270511089185,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					26,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					8348653297628384,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					27,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					9975990454928384,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			81341310188562,
			[
			[
				72,
				cr.plugins_.Function.prototype.cnds.OnFunction,
				null,
				2,
				false,
				false,
				false,
				3061884960803744,
				false
				,[
				[
					1,
					[
						2,
						"onUpgradeStamina"
					]
				]
				]
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				null,
				140133062132891,
				[
				[
					-1,
					cr.system_object.prototype.cnds.Compare,
					null,
					0,
					false,
					false,
					false,
					1274699409794886,
					false
					,[
					[
						7,
						[
							23,
							"UpgradeStamina"
						]
					]
,					[
						8,
						2
					]
,					[
						7,
						[
							0,
							3
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.AddVar,
					null,
					6356752908251316,
					false
					,[
					[
						11,
						"UpgradeStamina"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					72,
					cr.plugins_.Function.prototype.acts.CallFunction,
					null,
					6595375161476444,
					false
					,[
					[
						1,
						[
							2,
							"updateIndicators"
						]
					]
,					[
						13,
					]
					]
				]
,				[
					96,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					184192728130122,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					97,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					9503050614370719,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					98,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					3155571283497454,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					99,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					2809691378999132,
					false
					,[
					[
						3,
						1
					]
					]
				]
,				[
					69,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					6981010752763842,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					23,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					3865356223829551,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					24,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					5266876408317932,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					25,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					4968881154384057,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					26,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					122064622911717,
					false
					,[
					[
						3,
						0
					]
					]
				]
,				[
					27,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					2479744826966119,
					false
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			7456748576726543,
			[
			[
				72,
				cr.plugins_.Function.prototype.cnds.OnFunction,
				null,
				2,
				false,
				false,
				false,
				5035790878071498,
				false
				,[
				[
					1,
					[
						2,
						"updateIndicators"
					]
				]
				]
			]
			],
			[
			[
				61,
				cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
				null,
				2541465058251845,
				false
				,[
				[
					0,
					[
						23,
						"UpgradeDamage"
					]
				]
				]
			]
,			[
				62,
				cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
				null,
				9922637421595989,
				false
				,[
				[
					0,
					[
						23,
						"UpgradeHealth"
					]
				]
				]
			]
,			[
				63,
				cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
				null,
				3360965455589028,
				false
				,[
				[
					0,
					[
						23,
						"UpgradeSpeed"
					]
				]
				]
			]
,			[
				64,
				cr.plugins_.Sprite.prototype.acts.SetAnimFrame,
				null,
				1825368660558236,
				false
				,[
				[
					0,
					[
						23,
						"UpgradeStamina"
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			475897897090668,
			[
			[
				72,
				cr.plugins_.Function.prototype.cnds.OnFunction,
				null,
				2,
				false,
				false,
				false,
				230805390887451,
				false
				,[
				[
					1,
					[
						2,
						"onContinue"
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.GoToLayout,
				null,
				8695923050385307,
				false
				,[
				[
					6,
					"PreBattleScreen"
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			null,
			7306320269874774,
			[
			[
				72,
				cr.plugins_.Function.prototype.cnds.OnFunction,
				null,
				2,
				false,
				false,
				false,
				6931575190207661,
				false
				,[
				[
					1,
					[
						2,
						"moreGames"
					]
				]
				]
			]
			],
			[
			[
				76,
				cr.plugins_.Browser.prototype.acts.GoToURLWindow,
				null,
				5414693356650392,
				false
				,[
				[
					1,
					[
						20,
						106,
						cr.plugins_.SpilApiPlugin.prototype.exps.LinkURL,
						true,
						null
					]
				]
,				[
					1,
					[
						2,
						"_blank"
					]
				]
				]
			]
			]
		]
		]
	]
	],
	"media/",
	true,
	1003,
	590,
	3,
	false,
	true,
	false,
	"1.0.0.0",
	0,
	true,
	2,
	true,
	519,
	false,
	[
	]
];};
